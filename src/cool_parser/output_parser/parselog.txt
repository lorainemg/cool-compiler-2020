   yacc.py:3317:Created by PLY version 3.11 (http://www.dabeaz.com/ply)
   yacc.py:3377:
   yacc.py:3378:Grammar
   yacc.py:3379:
   yacc.py:3381:Rule 0     S' -> program
   yacc.py:3381:Rule 1     program -> class_list
   yacc.py:3381:Rule 2     epsilon -> <empty>
   yacc.py:3381:Rule 3     class_list -> def_class class_list
   yacc.py:3381:Rule 4     class_list -> def_class
   yacc.py:3381:Rule 5     class_list -> error class_list
   yacc.py:3381:Rule 6     def_class -> class type ocur feature_list ccur semi
   yacc.py:3381:Rule 7     def_class -> class type inherits type ocur feature_list ccur semi
   yacc.py:3381:Rule 8     def_class -> class error ocur feature_list ccur semi
   yacc.py:3381:Rule 9     def_class -> class type ocur feature_list ccur error
   yacc.py:3381:Rule 10    def_class -> class error inherits type ocur feature_list ccur semi
   yacc.py:3381:Rule 11    def_class -> class error inherits error ocur feature_list ccur semi
   yacc.py:3381:Rule 12    def_class -> class type inherits error ocur feature_list ccur semi
   yacc.py:3381:Rule 13    def_class -> class type inherits type ocur feature_list ccur error
   yacc.py:3381:Rule 14    feature_list -> epsilon
   yacc.py:3381:Rule 15    feature_list -> def_attr semi feature_list
   yacc.py:3381:Rule 16    feature_list -> def_func semi feature_list
   yacc.py:3381:Rule 17    feature_list -> error feature_list
   yacc.py:3381:Rule 18    def_attr -> id colon type
   yacc.py:3381:Rule 19    def_attr -> id colon type larrow expr
   yacc.py:3381:Rule 20    def_attr -> error colon type
   yacc.py:3381:Rule 21    def_attr -> id colon error
   yacc.py:3381:Rule 22    def_attr -> error colon type larrow expr
   yacc.py:3381:Rule 23    def_attr -> id colon error larrow expr
   yacc.py:3381:Rule 24    def_attr -> id colon type larrow error
   yacc.py:3381:Rule 25    def_func -> id opar formals cpar colon type ocur expr ccur
   yacc.py:3381:Rule 26    def_func -> error opar formals cpar colon type ocur expr ccur
   yacc.py:3381:Rule 27    def_func -> id opar error cpar colon type ocur expr ccur
   yacc.py:3381:Rule 28    def_func -> id opar formals cpar colon error ocur expr ccur
   yacc.py:3381:Rule 29    def_func -> id opar formals cpar colon type ocur error ccur
   yacc.py:3381:Rule 30    formals -> param_list
   yacc.py:3381:Rule 31    formals -> param_list_empty
   yacc.py:3381:Rule 32    param_list -> param
   yacc.py:3381:Rule 33    param_list -> param comma param_list
   yacc.py:3381:Rule 34    param_list_empty -> epsilon
   yacc.py:3381:Rule 35    param -> id colon type
   yacc.py:3381:Rule 36    let_list -> let_assign
   yacc.py:3381:Rule 37    let_list -> let_assign comma let_list
   yacc.py:3381:Rule 38    let_assign -> param larrow expr
   yacc.py:3381:Rule 39    let_assign -> param
   yacc.py:3381:Rule 40    cases_list -> casep semi
   yacc.py:3381:Rule 41    cases_list -> casep semi cases_list
   yacc.py:3381:Rule 42    cases_list -> error cases_list
   yacc.py:3381:Rule 43    cases_list -> error semi
   yacc.py:3381:Rule 44    casep -> id colon type rarrow expr
   yacc.py:3381:Rule 45    expr -> id larrow expr
   yacc.py:3381:Rule 46    expr -> comp
   yacc.py:3381:Rule 47    comp -> comp less op
   yacc.py:3381:Rule 48    comp -> comp lesseq op
   yacc.py:3381:Rule 49    comp -> comp equal op
   yacc.py:3381:Rule 50    comp -> op
   yacc.py:3381:Rule 51    op -> op plus term
   yacc.py:3381:Rule 52    op -> op minus term
   yacc.py:3381:Rule 53    op -> term
   yacc.py:3381:Rule 54    term -> term star base_call
   yacc.py:3381:Rule 55    term -> term div base_call
   yacc.py:3381:Rule 56    term -> base_call
   yacc.py:3381:Rule 57    term -> term star error
   yacc.py:3381:Rule 58    term -> term div error
   yacc.py:3381:Rule 59    base_call -> factor arroba type dot func_call
   yacc.py:3381:Rule 60    base_call -> factor
   yacc.py:3381:Rule 61    base_call -> error arroba type dot func_call
   yacc.py:3381:Rule 62    base_call -> factor arroba error dot func_call
   yacc.py:3381:Rule 63    factor -> atom
   yacc.py:3381:Rule 64    factor -> opar expr cpar
   yacc.py:3381:Rule 65    factor -> factor dot func_call
   yacc.py:3381:Rule 66    factor -> not expr
   yacc.py:3381:Rule 67    factor -> func_call
   yacc.py:3381:Rule 68    factor -> isvoid base_call
   yacc.py:3381:Rule 69    factor -> nox base_call
   yacc.py:3381:Rule 70    factor -> let let_list in expr
   yacc.py:3381:Rule 71    factor -> case expr of cases_list esac
   yacc.py:3381:Rule 72    factor -> if expr then expr else expr fi
   yacc.py:3381:Rule 73    factor -> while expr loop expr pool
   yacc.py:3381:Rule 74    atom -> num
   yacc.py:3381:Rule 75    atom -> id
   yacc.py:3381:Rule 76    atom -> new type
   yacc.py:3381:Rule 77    atom -> ocur block ccur
   yacc.py:3381:Rule 78    atom -> error block ccur
   yacc.py:3381:Rule 79    atom -> ocur error ccur
   yacc.py:3381:Rule 80    atom -> ocur block error
   yacc.py:3381:Rule 81    atom -> true
   yacc.py:3381:Rule 82    atom -> false
   yacc.py:3381:Rule 83    atom -> string
   yacc.py:3381:Rule 84    block -> expr semi
   yacc.py:3381:Rule 85    block -> expr semi block
   yacc.py:3381:Rule 86    block -> error block
   yacc.py:3381:Rule 87    block -> error semi
   yacc.py:3381:Rule 88    func_call -> id opar args cpar
   yacc.py:3381:Rule 89    func_call -> id opar error cpar
   yacc.py:3381:Rule 90    func_call -> error opar args cpar
   yacc.py:3381:Rule 91    args -> arg_list
   yacc.py:3381:Rule 92    args -> arg_list_empty
   yacc.py:3381:Rule 93    arg_list -> expr
   yacc.py:3381:Rule 94    arg_list -> expr comma arg_list
   yacc.py:3381:Rule 95    arg_list -> error arg_list
   yacc.py:3381:Rule 96    arg_list_empty -> epsilon
   yacc.py:3399:
   yacc.py:3400:Terminals, with rules where they appear
   yacc.py:3401:
   yacc.py:3405:arroba               : 59 61 62
   yacc.py:3405:case                 : 71
   yacc.py:3405:ccur                 : 6 7 8 9 10 11 12 13 25 26 27 28 29 77 78 79
   yacc.py:3405:class                : 6 7 8 9 10 11 12 13
   yacc.py:3405:colon                : 18 19 20 21 22 23 24 25 26 27 28 29 35 44
   yacc.py:3405:comma                : 33 37 94
   yacc.py:3405:cpar                 : 25 26 27 28 29 64 88 89 90
   yacc.py:3405:div                  : 55 58
   yacc.py:3405:dot                  : 59 61 62 65
   yacc.py:3405:else                 : 72
   yacc.py:3405:equal                : 49
   yacc.py:3405:error                : 5 8 9 10 11 11 12 13 17 20 21 22 23 24 26 27 28 29 42 43 57 58 61 62 78 79 80 86 87 89 90 95
   yacc.py:3405:esac                 : 71
   yacc.py:3405:false                : 82
   yacc.py:3405:fi                   : 72
   yacc.py:3405:id                   : 18 19 21 23 24 25 27 28 29 35 44 45 75 88 89
   yacc.py:3405:if                   : 72
   yacc.py:3405:in                   : 70
   yacc.py:3405:inherits             : 7 10 11 12 13
   yacc.py:3405:isvoid               : 68
   yacc.py:3405:larrow               : 19 22 23 24 38 45
   yacc.py:3405:less                 : 47
   yacc.py:3405:lesseq               : 48
   yacc.py:3405:let                  : 70
   yacc.py:3405:loop                 : 73
   yacc.py:3405:minus                : 52
   yacc.py:3405:new                  : 76
   yacc.py:3405:not                  : 66
   yacc.py:3405:nox                  : 69
   yacc.py:3405:num                  : 74
   yacc.py:3405:ocur                 : 6 7 8 9 10 11 12 13 25 26 27 28 29 77 79 80
   yacc.py:3405:of                   : 71
   yacc.py:3405:opar                 : 25 26 27 28 29 64 88 89 90
   yacc.py:3405:plus                 : 51
   yacc.py:3405:pool                 : 73
   yacc.py:3405:rarrow               : 44
   yacc.py:3405:semi                 : 6 7 8 10 11 12 15 16 40 41 43 84 85 87
   yacc.py:3405:star                 : 54 57
   yacc.py:3405:string               : 83
   yacc.py:3405:then                 : 72
   yacc.py:3405:true                 : 81
   yacc.py:3405:type                 : 6 7 7 9 10 12 13 13 18 19 20 22 24 25 26 27 29 35 44 59 61 76
   yacc.py:3405:while                : 73
   yacc.py:3407:
   yacc.py:3408:Nonterminals, with rules where they appear
   yacc.py:3409:
   yacc.py:3413:arg_list             : 91 94 95
   yacc.py:3413:arg_list_empty       : 92
   yacc.py:3413:args                 : 88 90
   yacc.py:3413:atom                 : 63
   yacc.py:3413:base_call            : 54 55 56 68 69
   yacc.py:3413:block                : 77 78 80 85 86
   yacc.py:3413:casep                : 40 41
   yacc.py:3413:cases_list           : 41 42 71
   yacc.py:3413:class_list           : 1 3 5
   yacc.py:3413:comp                 : 46 47 48 49
   yacc.py:3413:def_attr             : 15
   yacc.py:3413:def_class            : 3 4
   yacc.py:3413:def_func             : 16
   yacc.py:3413:epsilon              : 14 34 96
   yacc.py:3413:expr                 : 19 22 23 25 26 27 28 38 44 45 64 66 70 71 72 72 72 73 73 84 85 93 94
   yacc.py:3413:factor               : 59 60 62 65
   yacc.py:3413:feature_list         : 6 7 8 9 10 11 12 13 15 16 17
   yacc.py:3413:formals              : 25 26 28 29
   yacc.py:3413:func_call            : 59 61 62 65 67
   yacc.py:3413:let_assign           : 36 37
   yacc.py:3413:let_list             : 37 70
   yacc.py:3413:op                   : 47 48 49 50 51 52
   yacc.py:3413:param                : 32 33 38 39
   yacc.py:3413:param_list           : 30 33
   yacc.py:3413:param_list_empty     : 31
   yacc.py:3413:program              : 0
   yacc.py:3413:term                 : 51 52 53 54 55 57 58
   yacc.py:3414:
   yacc.py:3436:Generating LALR tables
   yacc.py:2543:Parsing method: LALR
   yacc.py:2561:
   yacc.py:2562:state 0
   yacc.py:2563:
   yacc.py:2565:    (0) S' -> . program
   yacc.py:2565:    (1) program -> . class_list
   yacc.py:2565:    (3) class_list -> . def_class class_list
   yacc.py:2565:    (4) class_list -> . def_class
   yacc.py:2565:    (5) class_list -> . error class_list
   yacc.py:2565:    (6) def_class -> . class type ocur feature_list ccur semi
   yacc.py:2565:    (7) def_class -> . class type inherits type ocur feature_list ccur semi
   yacc.py:2565:    (8) def_class -> . class error ocur feature_list ccur semi
   yacc.py:2565:    (9) def_class -> . class type ocur feature_list ccur error
   yacc.py:2565:    (10) def_class -> . class error inherits type ocur feature_list ccur semi
   yacc.py:2565:    (11) def_class -> . class error inherits error ocur feature_list ccur semi
   yacc.py:2565:    (12) def_class -> . class type inherits error ocur feature_list ccur semi
   yacc.py:2565:    (13) def_class -> . class type inherits type ocur feature_list ccur error
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 4
   yacc.py:2687:    class           shift and go to state 5
   yacc.py:2689:
   yacc.py:2714:    program                        shift and go to state 1
   yacc.py:2714:    class_list                     shift and go to state 2
   yacc.py:2714:    def_class                      shift and go to state 3
   yacc.py:2561:
   yacc.py:2562:state 1
   yacc.py:2563:
   yacc.py:2565:    (0) S' -> program .
   yacc.py:2566:
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 2
   yacc.py:2563:
   yacc.py:2565:    (1) program -> class_list .
   yacc.py:2566:
   yacc.py:2687:    $end            reduce using rule 1 (program -> class_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 3
   yacc.py:2563:
   yacc.py:2565:    (3) class_list -> def_class . class_list
   yacc.py:2565:    (4) class_list -> def_class .
   yacc.py:2565:    (3) class_list -> . def_class class_list
   yacc.py:2565:    (4) class_list -> . def_class
   yacc.py:2565:    (5) class_list -> . error class_list
   yacc.py:2565:    (6) def_class -> . class type ocur feature_list ccur semi
   yacc.py:2565:    (7) def_class -> . class type inherits type ocur feature_list ccur semi
   yacc.py:2565:    (8) def_class -> . class error ocur feature_list ccur semi
   yacc.py:2565:    (9) def_class -> . class type ocur feature_list ccur error
   yacc.py:2565:    (10) def_class -> . class error inherits type ocur feature_list ccur semi
   yacc.py:2565:    (11) def_class -> . class error inherits error ocur feature_list ccur semi
   yacc.py:2565:    (12) def_class -> . class type inherits error ocur feature_list ccur semi
   yacc.py:2565:    (13) def_class -> . class type inherits type ocur feature_list ccur error
   yacc.py:2566:
   yacc.py:2687:    $end            reduce using rule 4 (class_list -> def_class .)
   yacc.py:2687:    error           shift and go to state 4
   yacc.py:2687:    class           shift and go to state 5
   yacc.py:2689:
   yacc.py:2714:    def_class                      shift and go to state 3
   yacc.py:2714:    class_list                     shift and go to state 6
   yacc.py:2561:
   yacc.py:2562:state 4
   yacc.py:2563:
   yacc.py:2565:    (5) class_list -> error . class_list
   yacc.py:2565:    (3) class_list -> . def_class class_list
   yacc.py:2565:    (4) class_list -> . def_class
   yacc.py:2565:    (5) class_list -> . error class_list
   yacc.py:2565:    (6) def_class -> . class type ocur feature_list ccur semi
   yacc.py:2565:    (7) def_class -> . class type inherits type ocur feature_list ccur semi
   yacc.py:2565:    (8) def_class -> . class error ocur feature_list ccur semi
   yacc.py:2565:    (9) def_class -> . class type ocur feature_list ccur error
   yacc.py:2565:    (10) def_class -> . class error inherits type ocur feature_list ccur semi
   yacc.py:2565:    (11) def_class -> . class error inherits error ocur feature_list ccur semi
   yacc.py:2565:    (12) def_class -> . class type inherits error ocur feature_list ccur semi
   yacc.py:2565:    (13) def_class -> . class type inherits type ocur feature_list ccur error
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 4
   yacc.py:2687:    class           shift and go to state 5
   yacc.py:2689:
   yacc.py:2714:    class_list                     shift and go to state 7
   yacc.py:2714:    def_class                      shift and go to state 3
   yacc.py:2561:
   yacc.py:2562:state 5
   yacc.py:2563:
   yacc.py:2565:    (6) def_class -> class . type ocur feature_list ccur semi
   yacc.py:2565:    (7) def_class -> class . type inherits type ocur feature_list ccur semi
   yacc.py:2565:    (8) def_class -> class . error ocur feature_list ccur semi
   yacc.py:2565:    (9) def_class -> class . type ocur feature_list ccur error
   yacc.py:2565:    (10) def_class -> class . error inherits type ocur feature_list ccur semi
   yacc.py:2565:    (11) def_class -> class . error inherits error ocur feature_list ccur semi
   yacc.py:2565:    (12) def_class -> class . type inherits error ocur feature_list ccur semi
   yacc.py:2565:    (13) def_class -> class . type inherits type ocur feature_list ccur error
   yacc.py:2566:
   yacc.py:2687:    type            shift and go to state 8
   yacc.py:2687:    error           shift and go to state 9
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 6
   yacc.py:2563:
   yacc.py:2565:    (3) class_list -> def_class class_list .
   yacc.py:2566:
   yacc.py:2687:    $end            reduce using rule 3 (class_list -> def_class class_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 7
   yacc.py:2563:
   yacc.py:2565:    (5) class_list -> error class_list .
   yacc.py:2566:
   yacc.py:2687:    $end            reduce using rule 5 (class_list -> error class_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 8
   yacc.py:2563:
   yacc.py:2565:    (6) def_class -> class type . ocur feature_list ccur semi
   yacc.py:2565:    (7) def_class -> class type . inherits type ocur feature_list ccur semi
   yacc.py:2565:    (9) def_class -> class type . ocur feature_list ccur error
   yacc.py:2565:    (12) def_class -> class type . inherits error ocur feature_list ccur semi
   yacc.py:2565:    (13) def_class -> class type . inherits type ocur feature_list ccur error
   yacc.py:2566:
   yacc.py:2687:    ocur            shift and go to state 10
   yacc.py:2687:    inherits        shift and go to state 11
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 9
   yacc.py:2563:
   yacc.py:2565:    (8) def_class -> class error . ocur feature_list ccur semi
   yacc.py:2565:    (10) def_class -> class error . inherits type ocur feature_list ccur semi
   yacc.py:2565:    (11) def_class -> class error . inherits error ocur feature_list ccur semi
   yacc.py:2566:
   yacc.py:2687:    ocur            shift and go to state 12
   yacc.py:2687:    inherits        shift and go to state 13
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 10
   yacc.py:2563:
   yacc.py:2565:    (6) def_class -> class type ocur . feature_list ccur semi
   yacc.py:2565:    (9) def_class -> class type ocur . feature_list ccur error
   yacc.py:2565:    (14) feature_list -> . epsilon
   yacc.py:2565:    (15) feature_list -> . def_attr semi feature_list
   yacc.py:2565:    (16) feature_list -> . def_func semi feature_list
   yacc.py:2565:    (17) feature_list -> . error feature_list
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2565:    (18) def_attr -> . id colon type
   yacc.py:2565:    (19) def_attr -> . id colon type larrow expr
   yacc.py:2565:    (20) def_attr -> . error colon type
   yacc.py:2565:    (21) def_attr -> . id colon error
   yacc.py:2565:    (22) def_attr -> . error colon type larrow expr
   yacc.py:2565:    (23) def_attr -> . id colon error larrow expr
   yacc.py:2565:    (24) def_attr -> . id colon type larrow error
   yacc.py:2565:    (25) def_func -> . id opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (26) def_func -> . error opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (27) def_func -> . id opar error cpar colon type ocur expr ccur
   yacc.py:2565:    (28) def_func -> . id opar formals cpar colon error ocur expr ccur
   yacc.py:2565:    (29) def_func -> . id opar formals cpar colon type ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 15
   yacc.py:2687:    ccur            reduce using rule 2 (epsilon -> .)
   yacc.py:2687:    id              shift and go to state 19
   yacc.py:2689:
   yacc.py:2714:    feature_list                   shift and go to state 14
   yacc.py:2714:    epsilon                        shift and go to state 16
   yacc.py:2714:    def_attr                       shift and go to state 17
   yacc.py:2714:    def_func                       shift and go to state 18
   yacc.py:2561:
   yacc.py:2562:state 11
   yacc.py:2563:
   yacc.py:2565:    (7) def_class -> class type inherits . type ocur feature_list ccur semi
   yacc.py:2565:    (12) def_class -> class type inherits . error ocur feature_list ccur semi
   yacc.py:2565:    (13) def_class -> class type inherits . type ocur feature_list ccur error
   yacc.py:2566:
   yacc.py:2687:    type            shift and go to state 20
   yacc.py:2687:    error           shift and go to state 21
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 12
   yacc.py:2563:
   yacc.py:2565:    (8) def_class -> class error ocur . feature_list ccur semi
   yacc.py:2565:    (14) feature_list -> . epsilon
   yacc.py:2565:    (15) feature_list -> . def_attr semi feature_list
   yacc.py:2565:    (16) feature_list -> . def_func semi feature_list
   yacc.py:2565:    (17) feature_list -> . error feature_list
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2565:    (18) def_attr -> . id colon type
   yacc.py:2565:    (19) def_attr -> . id colon type larrow expr
   yacc.py:2565:    (20) def_attr -> . error colon type
   yacc.py:2565:    (21) def_attr -> . id colon error
   yacc.py:2565:    (22) def_attr -> . error colon type larrow expr
   yacc.py:2565:    (23) def_attr -> . id colon error larrow expr
   yacc.py:2565:    (24) def_attr -> . id colon type larrow error
   yacc.py:2565:    (25) def_func -> . id opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (26) def_func -> . error opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (27) def_func -> . id opar error cpar colon type ocur expr ccur
   yacc.py:2565:    (28) def_func -> . id opar formals cpar colon error ocur expr ccur
   yacc.py:2565:    (29) def_func -> . id opar formals cpar colon type ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 15
   yacc.py:2687:    ccur            reduce using rule 2 (epsilon -> .)
   yacc.py:2687:    id              shift and go to state 19
   yacc.py:2689:
   yacc.py:2714:    feature_list                   shift and go to state 22
   yacc.py:2714:    epsilon                        shift and go to state 16
   yacc.py:2714:    def_attr                       shift and go to state 17
   yacc.py:2714:    def_func                       shift and go to state 18
   yacc.py:2561:
   yacc.py:2562:state 13
   yacc.py:2563:
   yacc.py:2565:    (10) def_class -> class error inherits . type ocur feature_list ccur semi
   yacc.py:2565:    (11) def_class -> class error inherits . error ocur feature_list ccur semi
   yacc.py:2566:
   yacc.py:2687:    type            shift and go to state 24
   yacc.py:2687:    error           shift and go to state 23
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 14
   yacc.py:2563:
   yacc.py:2565:    (6) def_class -> class type ocur feature_list . ccur semi
   yacc.py:2565:    (9) def_class -> class type ocur feature_list . ccur error
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 25
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 15
   yacc.py:2563:
   yacc.py:2565:    (17) feature_list -> error . feature_list
   yacc.py:2565:    (20) def_attr -> error . colon type
   yacc.py:2565:    (22) def_attr -> error . colon type larrow expr
   yacc.py:2565:    (26) def_func -> error . opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (14) feature_list -> . epsilon
   yacc.py:2565:    (15) feature_list -> . def_attr semi feature_list
   yacc.py:2565:    (16) feature_list -> . def_func semi feature_list
   yacc.py:2565:    (17) feature_list -> . error feature_list
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2565:    (18) def_attr -> . id colon type
   yacc.py:2565:    (19) def_attr -> . id colon type larrow expr
   yacc.py:2565:    (20) def_attr -> . error colon type
   yacc.py:2565:    (21) def_attr -> . id colon error
   yacc.py:2565:    (22) def_attr -> . error colon type larrow expr
   yacc.py:2565:    (23) def_attr -> . id colon error larrow expr
   yacc.py:2565:    (24) def_attr -> . id colon type larrow error
   yacc.py:2565:    (25) def_func -> . id opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (26) def_func -> . error opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (27) def_func -> . id opar error cpar colon type ocur expr ccur
   yacc.py:2565:    (28) def_func -> . id opar formals cpar colon error ocur expr ccur
   yacc.py:2565:    (29) def_func -> . id opar formals cpar colon type ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    colon           shift and go to state 27
   yacc.py:2687:    opar            shift and go to state 28
   yacc.py:2687:    error           shift and go to state 15
   yacc.py:2687:    ccur            reduce using rule 2 (epsilon -> .)
   yacc.py:2687:    id              shift and go to state 19
   yacc.py:2689:
   yacc.py:2714:    feature_list                   shift and go to state 26
   yacc.py:2714:    epsilon                        shift and go to state 16
   yacc.py:2714:    def_attr                       shift and go to state 17
   yacc.py:2714:    def_func                       shift and go to state 18
   yacc.py:2561:
   yacc.py:2562:state 16
   yacc.py:2563:
   yacc.py:2565:    (14) feature_list -> epsilon .
   yacc.py:2566:
   yacc.py:2687:    ccur            reduce using rule 14 (feature_list -> epsilon .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 17
   yacc.py:2563:
   yacc.py:2565:    (15) feature_list -> def_attr . semi feature_list
   yacc.py:2566:
   yacc.py:2687:    semi            shift and go to state 29
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 18
   yacc.py:2563:
   yacc.py:2565:    (16) feature_list -> def_func . semi feature_list
   yacc.py:2566:
   yacc.py:2687:    semi            shift and go to state 30
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 19
   yacc.py:2563:
   yacc.py:2565:    (18) def_attr -> id . colon type
   yacc.py:2565:    (19) def_attr -> id . colon type larrow expr
   yacc.py:2565:    (21) def_attr -> id . colon error
   yacc.py:2565:    (23) def_attr -> id . colon error larrow expr
   yacc.py:2565:    (24) def_attr -> id . colon type larrow error
   yacc.py:2565:    (25) def_func -> id . opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (27) def_func -> id . opar error cpar colon type ocur expr ccur
   yacc.py:2565:    (28) def_func -> id . opar formals cpar colon error ocur expr ccur
   yacc.py:2565:    (29) def_func -> id . opar formals cpar colon type ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    colon           shift and go to state 31
   yacc.py:2687:    opar            shift and go to state 32
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 20
   yacc.py:2563:
   yacc.py:2565:    (7) def_class -> class type inherits type . ocur feature_list ccur semi
   yacc.py:2565:    (13) def_class -> class type inherits type . ocur feature_list ccur error
   yacc.py:2566:
   yacc.py:2687:    ocur            shift and go to state 33
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 21
   yacc.py:2563:
   yacc.py:2565:    (12) def_class -> class type inherits error . ocur feature_list ccur semi
   yacc.py:2566:
   yacc.py:2687:    ocur            shift and go to state 34
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 22
   yacc.py:2563:
   yacc.py:2565:    (8) def_class -> class error ocur feature_list . ccur semi
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 35
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 23
   yacc.py:2563:
   yacc.py:2565:    (11) def_class -> class error inherits error . ocur feature_list ccur semi
   yacc.py:2566:
   yacc.py:2687:    ocur            shift and go to state 36
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 24
   yacc.py:2563:
   yacc.py:2565:    (10) def_class -> class error inherits type . ocur feature_list ccur semi
   yacc.py:2566:
   yacc.py:2687:    ocur            shift and go to state 37
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 25
   yacc.py:2563:
   yacc.py:2565:    (6) def_class -> class type ocur feature_list ccur . semi
   yacc.py:2565:    (9) def_class -> class type ocur feature_list ccur . error
   yacc.py:2566:
   yacc.py:2687:    semi            shift and go to state 38
   yacc.py:2687:    error           shift and go to state 39
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 26
   yacc.py:2563:
   yacc.py:2565:    (17) feature_list -> error feature_list .
   yacc.py:2566:
   yacc.py:2687:    ccur            reduce using rule 17 (feature_list -> error feature_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 27
   yacc.py:2563:
   yacc.py:2565:    (20) def_attr -> error colon . type
   yacc.py:2565:    (22) def_attr -> error colon . type larrow expr
   yacc.py:2566:
   yacc.py:2687:    type            shift and go to state 40
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 28
   yacc.py:2563:
   yacc.py:2565:    (26) def_func -> error opar . formals cpar colon type ocur expr ccur
   yacc.py:2565:    (30) formals -> . param_list
   yacc.py:2565:    (31) formals -> . param_list_empty
   yacc.py:2565:    (32) param_list -> . param
   yacc.py:2565:    (33) param_list -> . param comma param_list
   yacc.py:2565:    (34) param_list_empty -> . epsilon
   yacc.py:2565:    (35) param -> . id colon type
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 46
   yacc.py:2687:    cpar            reduce using rule 2 (epsilon -> .)
   yacc.py:2689:
   yacc.py:2714:    formals                        shift and go to state 41
   yacc.py:2714:    param_list                     shift and go to state 42
   yacc.py:2714:    param_list_empty               shift and go to state 43
   yacc.py:2714:    param                          shift and go to state 44
   yacc.py:2714:    epsilon                        shift and go to state 45
   yacc.py:2561:
   yacc.py:2562:state 29
   yacc.py:2563:
   yacc.py:2565:    (15) feature_list -> def_attr semi . feature_list
   yacc.py:2565:    (14) feature_list -> . epsilon
   yacc.py:2565:    (15) feature_list -> . def_attr semi feature_list
   yacc.py:2565:    (16) feature_list -> . def_func semi feature_list
   yacc.py:2565:    (17) feature_list -> . error feature_list
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2565:    (18) def_attr -> . id colon type
   yacc.py:2565:    (19) def_attr -> . id colon type larrow expr
   yacc.py:2565:    (20) def_attr -> . error colon type
   yacc.py:2565:    (21) def_attr -> . id colon error
   yacc.py:2565:    (22) def_attr -> . error colon type larrow expr
   yacc.py:2565:    (23) def_attr -> . id colon error larrow expr
   yacc.py:2565:    (24) def_attr -> . id colon type larrow error
   yacc.py:2565:    (25) def_func -> . id opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (26) def_func -> . error opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (27) def_func -> . id opar error cpar colon type ocur expr ccur
   yacc.py:2565:    (28) def_func -> . id opar formals cpar colon error ocur expr ccur
   yacc.py:2565:    (29) def_func -> . id opar formals cpar colon type ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 15
   yacc.py:2687:    ccur            reduce using rule 2 (epsilon -> .)
   yacc.py:2687:    id              shift and go to state 19
   yacc.py:2689:
   yacc.py:2714:    def_attr                       shift and go to state 17
   yacc.py:2714:    feature_list                   shift and go to state 47
   yacc.py:2714:    epsilon                        shift and go to state 16
   yacc.py:2714:    def_func                       shift and go to state 18
   yacc.py:2561:
   yacc.py:2562:state 30
   yacc.py:2563:
   yacc.py:2565:    (16) feature_list -> def_func semi . feature_list
   yacc.py:2565:    (14) feature_list -> . epsilon
   yacc.py:2565:    (15) feature_list -> . def_attr semi feature_list
   yacc.py:2565:    (16) feature_list -> . def_func semi feature_list
   yacc.py:2565:    (17) feature_list -> . error feature_list
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2565:    (18) def_attr -> . id colon type
   yacc.py:2565:    (19) def_attr -> . id colon type larrow expr
   yacc.py:2565:    (20) def_attr -> . error colon type
   yacc.py:2565:    (21) def_attr -> . id colon error
   yacc.py:2565:    (22) def_attr -> . error colon type larrow expr
   yacc.py:2565:    (23) def_attr -> . id colon error larrow expr
   yacc.py:2565:    (24) def_attr -> . id colon type larrow error
   yacc.py:2565:    (25) def_func -> . id opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (26) def_func -> . error opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (27) def_func -> . id opar error cpar colon type ocur expr ccur
   yacc.py:2565:    (28) def_func -> . id opar formals cpar colon error ocur expr ccur
   yacc.py:2565:    (29) def_func -> . id opar formals cpar colon type ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 15
   yacc.py:2687:    ccur            reduce using rule 2 (epsilon -> .)
   yacc.py:2687:    id              shift and go to state 19
   yacc.py:2689:
   yacc.py:2714:    def_func                       shift and go to state 18
   yacc.py:2714:    feature_list                   shift and go to state 48
   yacc.py:2714:    epsilon                        shift and go to state 16
   yacc.py:2714:    def_attr                       shift and go to state 17
   yacc.py:2561:
   yacc.py:2562:state 31
   yacc.py:2563:
   yacc.py:2565:    (18) def_attr -> id colon . type
   yacc.py:2565:    (19) def_attr -> id colon . type larrow expr
   yacc.py:2565:    (21) def_attr -> id colon . error
   yacc.py:2565:    (23) def_attr -> id colon . error larrow expr
   yacc.py:2565:    (24) def_attr -> id colon . type larrow error
   yacc.py:2566:
   yacc.py:2687:    type            shift and go to state 49
   yacc.py:2687:    error           shift and go to state 50
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 32
   yacc.py:2563:
   yacc.py:2565:    (25) def_func -> id opar . formals cpar colon type ocur expr ccur
   yacc.py:2565:    (27) def_func -> id opar . error cpar colon type ocur expr ccur
   yacc.py:2565:    (28) def_func -> id opar . formals cpar colon error ocur expr ccur
   yacc.py:2565:    (29) def_func -> id opar . formals cpar colon type ocur error ccur
   yacc.py:2565:    (30) formals -> . param_list
   yacc.py:2565:    (31) formals -> . param_list_empty
   yacc.py:2565:    (32) param_list -> . param
   yacc.py:2565:    (33) param_list -> . param comma param_list
   yacc.py:2565:    (34) param_list_empty -> . epsilon
   yacc.py:2565:    (35) param -> . id colon type
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 52
   yacc.py:2687:    id              shift and go to state 46
   yacc.py:2687:    cpar            reduce using rule 2 (epsilon -> .)
   yacc.py:2689:
   yacc.py:2714:    formals                        shift and go to state 51
   yacc.py:2714:    param_list                     shift and go to state 42
   yacc.py:2714:    param_list_empty               shift and go to state 43
   yacc.py:2714:    param                          shift and go to state 44
   yacc.py:2714:    epsilon                        shift and go to state 45
   yacc.py:2561:
   yacc.py:2562:state 33
   yacc.py:2563:
   yacc.py:2565:    (7) def_class -> class type inherits type ocur . feature_list ccur semi
   yacc.py:2565:    (13) def_class -> class type inherits type ocur . feature_list ccur error
   yacc.py:2565:    (14) feature_list -> . epsilon
   yacc.py:2565:    (15) feature_list -> . def_attr semi feature_list
   yacc.py:2565:    (16) feature_list -> . def_func semi feature_list
   yacc.py:2565:    (17) feature_list -> . error feature_list
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2565:    (18) def_attr -> . id colon type
   yacc.py:2565:    (19) def_attr -> . id colon type larrow expr
   yacc.py:2565:    (20) def_attr -> . error colon type
   yacc.py:2565:    (21) def_attr -> . id colon error
   yacc.py:2565:    (22) def_attr -> . error colon type larrow expr
   yacc.py:2565:    (23) def_attr -> . id colon error larrow expr
   yacc.py:2565:    (24) def_attr -> . id colon type larrow error
   yacc.py:2565:    (25) def_func -> . id opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (26) def_func -> . error opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (27) def_func -> . id opar error cpar colon type ocur expr ccur
   yacc.py:2565:    (28) def_func -> . id opar formals cpar colon error ocur expr ccur
   yacc.py:2565:    (29) def_func -> . id opar formals cpar colon type ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 15
   yacc.py:2687:    ccur            reduce using rule 2 (epsilon -> .)
   yacc.py:2687:    id              shift and go to state 19
   yacc.py:2689:
   yacc.py:2714:    feature_list                   shift and go to state 53
   yacc.py:2714:    epsilon                        shift and go to state 16
   yacc.py:2714:    def_attr                       shift and go to state 17
   yacc.py:2714:    def_func                       shift and go to state 18
   yacc.py:2561:
   yacc.py:2562:state 34
   yacc.py:2563:
   yacc.py:2565:    (12) def_class -> class type inherits error ocur . feature_list ccur semi
   yacc.py:2565:    (14) feature_list -> . epsilon
   yacc.py:2565:    (15) feature_list -> . def_attr semi feature_list
   yacc.py:2565:    (16) feature_list -> . def_func semi feature_list
   yacc.py:2565:    (17) feature_list -> . error feature_list
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2565:    (18) def_attr -> . id colon type
   yacc.py:2565:    (19) def_attr -> . id colon type larrow expr
   yacc.py:2565:    (20) def_attr -> . error colon type
   yacc.py:2565:    (21) def_attr -> . id colon error
   yacc.py:2565:    (22) def_attr -> . error colon type larrow expr
   yacc.py:2565:    (23) def_attr -> . id colon error larrow expr
   yacc.py:2565:    (24) def_attr -> . id colon type larrow error
   yacc.py:2565:    (25) def_func -> . id opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (26) def_func -> . error opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (27) def_func -> . id opar error cpar colon type ocur expr ccur
   yacc.py:2565:    (28) def_func -> . id opar formals cpar colon error ocur expr ccur
   yacc.py:2565:    (29) def_func -> . id opar formals cpar colon type ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 15
   yacc.py:2687:    ccur            reduce using rule 2 (epsilon -> .)
   yacc.py:2687:    id              shift and go to state 19
   yacc.py:2689:
   yacc.py:2714:    feature_list                   shift and go to state 54
   yacc.py:2714:    epsilon                        shift and go to state 16
   yacc.py:2714:    def_attr                       shift and go to state 17
   yacc.py:2714:    def_func                       shift and go to state 18
   yacc.py:2561:
   yacc.py:2562:state 35
   yacc.py:2563:
   yacc.py:2565:    (8) def_class -> class error ocur feature_list ccur . semi
   yacc.py:2566:
   yacc.py:2687:    semi            shift and go to state 55
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 36
   yacc.py:2563:
   yacc.py:2565:    (11) def_class -> class error inherits error ocur . feature_list ccur semi
   yacc.py:2565:    (14) feature_list -> . epsilon
   yacc.py:2565:    (15) feature_list -> . def_attr semi feature_list
   yacc.py:2565:    (16) feature_list -> . def_func semi feature_list
   yacc.py:2565:    (17) feature_list -> . error feature_list
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2565:    (18) def_attr -> . id colon type
   yacc.py:2565:    (19) def_attr -> . id colon type larrow expr
   yacc.py:2565:    (20) def_attr -> . error colon type
   yacc.py:2565:    (21) def_attr -> . id colon error
   yacc.py:2565:    (22) def_attr -> . error colon type larrow expr
   yacc.py:2565:    (23) def_attr -> . id colon error larrow expr
   yacc.py:2565:    (24) def_attr -> . id colon type larrow error
   yacc.py:2565:    (25) def_func -> . id opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (26) def_func -> . error opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (27) def_func -> . id opar error cpar colon type ocur expr ccur
   yacc.py:2565:    (28) def_func -> . id opar formals cpar colon error ocur expr ccur
   yacc.py:2565:    (29) def_func -> . id opar formals cpar colon type ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 15
   yacc.py:2687:    ccur            reduce using rule 2 (epsilon -> .)
   yacc.py:2687:    id              shift and go to state 19
   yacc.py:2689:
   yacc.py:2714:    feature_list                   shift and go to state 56
   yacc.py:2714:    epsilon                        shift and go to state 16
   yacc.py:2714:    def_attr                       shift and go to state 17
   yacc.py:2714:    def_func                       shift and go to state 18
   yacc.py:2561:
   yacc.py:2562:state 37
   yacc.py:2563:
   yacc.py:2565:    (10) def_class -> class error inherits type ocur . feature_list ccur semi
   yacc.py:2565:    (14) feature_list -> . epsilon
   yacc.py:2565:    (15) feature_list -> . def_attr semi feature_list
   yacc.py:2565:    (16) feature_list -> . def_func semi feature_list
   yacc.py:2565:    (17) feature_list -> . error feature_list
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2565:    (18) def_attr -> . id colon type
   yacc.py:2565:    (19) def_attr -> . id colon type larrow expr
   yacc.py:2565:    (20) def_attr -> . error colon type
   yacc.py:2565:    (21) def_attr -> . id colon error
   yacc.py:2565:    (22) def_attr -> . error colon type larrow expr
   yacc.py:2565:    (23) def_attr -> . id colon error larrow expr
   yacc.py:2565:    (24) def_attr -> . id colon type larrow error
   yacc.py:2565:    (25) def_func -> . id opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (26) def_func -> . error opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (27) def_func -> . id opar error cpar colon type ocur expr ccur
   yacc.py:2565:    (28) def_func -> . id opar formals cpar colon error ocur expr ccur
   yacc.py:2565:    (29) def_func -> . id opar formals cpar colon type ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 15
   yacc.py:2687:    ccur            reduce using rule 2 (epsilon -> .)
   yacc.py:2687:    id              shift and go to state 19
   yacc.py:2689:
   yacc.py:2714:    feature_list                   shift and go to state 57
   yacc.py:2714:    epsilon                        shift and go to state 16
   yacc.py:2714:    def_attr                       shift and go to state 17
   yacc.py:2714:    def_func                       shift and go to state 18
   yacc.py:2561:
   yacc.py:2562:state 38
   yacc.py:2563:
   yacc.py:2565:    (6) def_class -> class type ocur feature_list ccur semi .
   yacc.py:2566:
   yacc.py:2687:    error           reduce using rule 6 (def_class -> class type ocur feature_list ccur semi .)
   yacc.py:2687:    class           reduce using rule 6 (def_class -> class type ocur feature_list ccur semi .)
   yacc.py:2687:    $end            reduce using rule 6 (def_class -> class type ocur feature_list ccur semi .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 39
   yacc.py:2563:
   yacc.py:2565:    (9) def_class -> class type ocur feature_list ccur error .
   yacc.py:2566:
   yacc.py:2687:    error           reduce using rule 9 (def_class -> class type ocur feature_list ccur error .)
   yacc.py:2687:    class           reduce using rule 9 (def_class -> class type ocur feature_list ccur error .)
   yacc.py:2687:    $end            reduce using rule 9 (def_class -> class type ocur feature_list ccur error .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 40
   yacc.py:2563:
   yacc.py:2565:    (20) def_attr -> error colon type .
   yacc.py:2565:    (22) def_attr -> error colon type . larrow expr
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 20 (def_attr -> error colon type .)
   yacc.py:2687:    larrow          shift and go to state 58
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 41
   yacc.py:2563:
   yacc.py:2565:    (26) def_func -> error opar formals . cpar colon type ocur expr ccur
   yacc.py:2566:
   yacc.py:2687:    cpar            shift and go to state 59
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 42
   yacc.py:2563:
   yacc.py:2565:    (30) formals -> param_list .
   yacc.py:2566:
   yacc.py:2687:    cpar            reduce using rule 30 (formals -> param_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 43
   yacc.py:2563:
   yacc.py:2565:    (31) formals -> param_list_empty .
   yacc.py:2566:
   yacc.py:2687:    cpar            reduce using rule 31 (formals -> param_list_empty .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 44
   yacc.py:2563:
   yacc.py:2565:    (32) param_list -> param .
   yacc.py:2565:    (33) param_list -> param . comma param_list
   yacc.py:2566:
   yacc.py:2687:    cpar            reduce using rule 32 (param_list -> param .)
   yacc.py:2687:    comma           shift and go to state 60
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 45
   yacc.py:2563:
   yacc.py:2565:    (34) param_list_empty -> epsilon .
   yacc.py:2566:
   yacc.py:2687:    cpar            reduce using rule 34 (param_list_empty -> epsilon .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 46
   yacc.py:2563:
   yacc.py:2565:    (35) param -> id . colon type
   yacc.py:2566:
   yacc.py:2687:    colon           shift and go to state 61
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 47
   yacc.py:2563:
   yacc.py:2565:    (15) feature_list -> def_attr semi feature_list .
   yacc.py:2566:
   yacc.py:2687:    ccur            reduce using rule 15 (feature_list -> def_attr semi feature_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 48
   yacc.py:2563:
   yacc.py:2565:    (16) feature_list -> def_func semi feature_list .
   yacc.py:2566:
   yacc.py:2687:    ccur            reduce using rule 16 (feature_list -> def_func semi feature_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 49
   yacc.py:2563:
   yacc.py:2565:    (18) def_attr -> id colon type .
   yacc.py:2565:    (19) def_attr -> id colon type . larrow expr
   yacc.py:2565:    (24) def_attr -> id colon type . larrow error
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 18 (def_attr -> id colon type .)
   yacc.py:2687:    larrow          shift and go to state 62
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 50
   yacc.py:2563:
   yacc.py:2565:    (21) def_attr -> id colon error .
   yacc.py:2565:    (23) def_attr -> id colon error . larrow expr
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 21 (def_attr -> id colon error .)
   yacc.py:2687:    larrow          shift and go to state 63
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 51
   yacc.py:2563:
   yacc.py:2565:    (25) def_func -> id opar formals . cpar colon type ocur expr ccur
   yacc.py:2565:    (28) def_func -> id opar formals . cpar colon error ocur expr ccur
   yacc.py:2565:    (29) def_func -> id opar formals . cpar colon type ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    cpar            shift and go to state 64
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 52
   yacc.py:2563:
   yacc.py:2565:    (27) def_func -> id opar error . cpar colon type ocur expr ccur
   yacc.py:2566:
   yacc.py:2687:    cpar            shift and go to state 65
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 53
   yacc.py:2563:
   yacc.py:2565:    (7) def_class -> class type inherits type ocur feature_list . ccur semi
   yacc.py:2565:    (13) def_class -> class type inherits type ocur feature_list . ccur error
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 66
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 54
   yacc.py:2563:
   yacc.py:2565:    (12) def_class -> class type inherits error ocur feature_list . ccur semi
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 67
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 55
   yacc.py:2563:
   yacc.py:2565:    (8) def_class -> class error ocur feature_list ccur semi .
   yacc.py:2566:
   yacc.py:2687:    error           reduce using rule 8 (def_class -> class error ocur feature_list ccur semi .)
   yacc.py:2687:    class           reduce using rule 8 (def_class -> class error ocur feature_list ccur semi .)
   yacc.py:2687:    $end            reduce using rule 8 (def_class -> class error ocur feature_list ccur semi .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 56
   yacc.py:2563:
   yacc.py:2565:    (11) def_class -> class error inherits error ocur feature_list . ccur semi
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 68
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 57
   yacc.py:2563:
   yacc.py:2565:    (10) def_class -> class error inherits type ocur feature_list . ccur semi
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 69
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 58
   yacc.py:2563:
   yacc.py:2565:    (22) def_attr -> error colon type larrow . expr
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 71
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 59
   yacc.py:2563:
   yacc.py:2565:    (26) def_func -> error opar formals cpar . colon type ocur expr ccur
   yacc.py:2566:
   yacc.py:2687:    colon           shift and go to state 94
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 60
   yacc.py:2563:
   yacc.py:2565:    (33) param_list -> param comma . param_list
   yacc.py:2565:    (32) param_list -> . param
   yacc.py:2565:    (33) param_list -> . param comma param_list
   yacc.py:2565:    (35) param -> . id colon type
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 46
   yacc.py:2689:
   yacc.py:2714:    param                          shift and go to state 44
   yacc.py:2714:    param_list                     shift and go to state 95
   yacc.py:2561:
   yacc.py:2562:state 61
   yacc.py:2563:
   yacc.py:2565:    (35) param -> id colon . type
   yacc.py:2566:
   yacc.py:2687:    type            shift and go to state 96
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 62
   yacc.py:2563:
   yacc.py:2565:    (19) def_attr -> id colon type larrow . expr
   yacc.py:2565:    (24) def_attr -> id colon type larrow . error
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 98
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 97
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 63
   yacc.py:2563:
   yacc.py:2565:    (23) def_attr -> id colon error larrow . expr
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 99
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 64
   yacc.py:2563:
   yacc.py:2565:    (25) def_func -> id opar formals cpar . colon type ocur expr ccur
   yacc.py:2565:    (28) def_func -> id opar formals cpar . colon error ocur expr ccur
   yacc.py:2565:    (29) def_func -> id opar formals cpar . colon type ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    colon           shift and go to state 100
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 65
   yacc.py:2563:
   yacc.py:2565:    (27) def_func -> id opar error cpar . colon type ocur expr ccur
   yacc.py:2566:
   yacc.py:2687:    colon           shift and go to state 101
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 66
   yacc.py:2563:
   yacc.py:2565:    (7) def_class -> class type inherits type ocur feature_list ccur . semi
   yacc.py:2565:    (13) def_class -> class type inherits type ocur feature_list ccur . error
   yacc.py:2566:
   yacc.py:2687:    semi            shift and go to state 102
   yacc.py:2687:    error           shift and go to state 103
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 67
   yacc.py:2563:
   yacc.py:2565:    (12) def_class -> class type inherits error ocur feature_list ccur . semi
   yacc.py:2566:
   yacc.py:2687:    semi            shift and go to state 104
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 68
   yacc.py:2563:
   yacc.py:2565:    (11) def_class -> class error inherits error ocur feature_list ccur . semi
   yacc.py:2566:
   yacc.py:2687:    semi            shift and go to state 105
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 69
   yacc.py:2563:
   yacc.py:2565:    (10) def_class -> class error inherits type ocur feature_list ccur . semi
   yacc.py:2566:
   yacc.py:2687:    semi            shift and go to state 106
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 70
   yacc.py:2563:
   yacc.py:2565:    (61) base_call -> error . arroba type dot func_call
   yacc.py:2565:    (78) atom -> error . block ccur
   yacc.py:2565:    (90) func_call -> error . opar args cpar
   yacc.py:2565:    (84) block -> . expr semi
   yacc.py:2565:    (85) block -> . expr semi block
   yacc.py:2565:    (86) block -> . error block
   yacc.py:2565:    (87) block -> . error semi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    arroba          shift and go to state 108
   yacc.py:2687:    opar            shift and go to state 110
   yacc.py:2687:    error           shift and go to state 107
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    block                          shift and go to state 109
   yacc.py:2714:    expr                           shift and go to state 111
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 71
   yacc.py:2563:
   yacc.py:2565:    (22) def_attr -> error colon type larrow expr .
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 22 (def_attr -> error colon type larrow expr .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 72
   yacc.py:2563:
   yacc.py:2565:    (45) expr -> id . larrow expr
   yacc.py:2565:    (75) atom -> id .
   yacc.py:2565:    (88) func_call -> id . opar args cpar
   yacc.py:2565:    (89) func_call -> id . opar error cpar
   yacc.py:2566:
   yacc.py:2687:    larrow          shift and go to state 112
   yacc.py:2687:    arroba          reduce using rule 75 (atom -> id .)
   yacc.py:2687:    dot             reduce using rule 75 (atom -> id .)
   yacc.py:2687:    star            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    div             reduce using rule 75 (atom -> id .)
   yacc.py:2687:    plus            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    minus           reduce using rule 75 (atom -> id .)
   yacc.py:2687:    less            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    lesseq          reduce using rule 75 (atom -> id .)
   yacc.py:2687:    equal           reduce using rule 75 (atom -> id .)
   yacc.py:2687:    semi            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    cpar            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    of              reduce using rule 75 (atom -> id .)
   yacc.py:2687:    then            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    loop            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    comma           reduce using rule 75 (atom -> id .)
   yacc.py:2687:    in              reduce using rule 75 (atom -> id .)
   yacc.py:2687:    else            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    pool            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    ccur            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    fi              reduce using rule 75 (atom -> id .)
   yacc.py:2687:    opar            shift and go to state 113
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 73
   yacc.py:2563:
   yacc.py:2565:    (46) expr -> comp .
   yacc.py:2565:    (47) comp -> comp . less op
   yacc.py:2565:    (48) comp -> comp . lesseq op
   yacc.py:2565:    (49) comp -> comp . equal op
   yacc.py:2566:
   yacc.py:2666:  ! shift/reduce conflict for less resolved as shift
   yacc.py:2666:  ! shift/reduce conflict for lesseq resolved as shift
   yacc.py:2666:  ! shift/reduce conflict for equal resolved as shift
   yacc.py:2687:    semi            reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    cpar            reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    arroba          reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    dot             reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    star            reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    div             reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    plus            reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    minus           reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    of              reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    then            reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    loop            reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    comma           reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    in              reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    else            reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    pool            reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    ccur            reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    fi              reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    less            shift and go to state 114
   yacc.py:2687:    lesseq          shift and go to state 115
   yacc.py:2687:    equal           shift and go to state 116
   yacc.py:2689:
   yacc.py:2696:  ! less            [ reduce using rule 46 (expr -> comp .) ]
   yacc.py:2696:  ! lesseq          [ reduce using rule 46 (expr -> comp .) ]
   yacc.py:2696:  ! equal           [ reduce using rule 46 (expr -> comp .) ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 74
   yacc.py:2563:
   yacc.py:2565:    (50) comp -> op .
   yacc.py:2565:    (51) op -> op . plus term
   yacc.py:2565:    (52) op -> op . minus term
   yacc.py:2566:
   yacc.py:2666:  ! shift/reduce conflict for plus resolved as shift
   yacc.py:2666:  ! shift/reduce conflict for minus resolved as shift
   yacc.py:2687:    less            reduce using rule 50 (comp -> op .)
   yacc.py:2687:    lesseq          reduce using rule 50 (comp -> op .)
   yacc.py:2687:    equal           reduce using rule 50 (comp -> op .)
   yacc.py:2687:    semi            reduce using rule 50 (comp -> op .)
   yacc.py:2687:    cpar            reduce using rule 50 (comp -> op .)
   yacc.py:2687:    arroba          reduce using rule 50 (comp -> op .)
   yacc.py:2687:    dot             reduce using rule 50 (comp -> op .)
   yacc.py:2687:    star            reduce using rule 50 (comp -> op .)
   yacc.py:2687:    div             reduce using rule 50 (comp -> op .)
   yacc.py:2687:    of              reduce using rule 50 (comp -> op .)
   yacc.py:2687:    then            reduce using rule 50 (comp -> op .)
   yacc.py:2687:    loop            reduce using rule 50 (comp -> op .)
   yacc.py:2687:    comma           reduce using rule 50 (comp -> op .)
   yacc.py:2687:    in              reduce using rule 50 (comp -> op .)
   yacc.py:2687:    else            reduce using rule 50 (comp -> op .)
   yacc.py:2687:    pool            reduce using rule 50 (comp -> op .)
   yacc.py:2687:    ccur            reduce using rule 50 (comp -> op .)
   yacc.py:2687:    fi              reduce using rule 50 (comp -> op .)
   yacc.py:2687:    plus            shift and go to state 117
   yacc.py:2687:    minus           shift and go to state 118
   yacc.py:2689:
   yacc.py:2696:  ! plus            [ reduce using rule 50 (comp -> op .) ]
   yacc.py:2696:  ! minus           [ reduce using rule 50 (comp -> op .) ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 75
   yacc.py:2563:
   yacc.py:2565:    (53) op -> term .
   yacc.py:2565:    (54) term -> term . star base_call
   yacc.py:2565:    (55) term -> term . div base_call
   yacc.py:2565:    (57) term -> term . star error
   yacc.py:2565:    (58) term -> term . div error
   yacc.py:2566:
   yacc.py:2666:  ! shift/reduce conflict for star resolved as shift
   yacc.py:2666:  ! shift/reduce conflict for div resolved as shift
   yacc.py:2687:    plus            reduce using rule 53 (op -> term .)
   yacc.py:2687:    minus           reduce using rule 53 (op -> term .)
   yacc.py:2687:    less            reduce using rule 53 (op -> term .)
   yacc.py:2687:    lesseq          reduce using rule 53 (op -> term .)
   yacc.py:2687:    equal           reduce using rule 53 (op -> term .)
   yacc.py:2687:    semi            reduce using rule 53 (op -> term .)
   yacc.py:2687:    cpar            reduce using rule 53 (op -> term .)
   yacc.py:2687:    arroba          reduce using rule 53 (op -> term .)
   yacc.py:2687:    dot             reduce using rule 53 (op -> term .)
   yacc.py:2687:    of              reduce using rule 53 (op -> term .)
   yacc.py:2687:    then            reduce using rule 53 (op -> term .)
   yacc.py:2687:    loop            reduce using rule 53 (op -> term .)
   yacc.py:2687:    comma           reduce using rule 53 (op -> term .)
   yacc.py:2687:    in              reduce using rule 53 (op -> term .)
   yacc.py:2687:    else            reduce using rule 53 (op -> term .)
   yacc.py:2687:    pool            reduce using rule 53 (op -> term .)
   yacc.py:2687:    ccur            reduce using rule 53 (op -> term .)
   yacc.py:2687:    fi              reduce using rule 53 (op -> term .)
   yacc.py:2687:    star            shift and go to state 119
   yacc.py:2687:    div             shift and go to state 120
   yacc.py:2689:
   yacc.py:2696:  ! star            [ reduce using rule 53 (op -> term .) ]
   yacc.py:2696:  ! div             [ reduce using rule 53 (op -> term .) ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 76
   yacc.py:2563:
   yacc.py:2565:    (56) term -> base_call .
   yacc.py:2566:
   yacc.py:2687:    star            reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    div             reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    plus            reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    minus           reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    less            reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    lesseq          reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    equal           reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    semi            reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    cpar            reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    arroba          reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    dot             reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    of              reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    then            reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    loop            reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    comma           reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    in              reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    else            reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    pool            reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    ccur            reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    fi              reduce using rule 56 (term -> base_call .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 77
   yacc.py:2563:
   yacc.py:2565:    (59) base_call -> factor . arroba type dot func_call
   yacc.py:2565:    (60) base_call -> factor .
   yacc.py:2565:    (62) base_call -> factor . arroba error dot func_call
   yacc.py:2565:    (65) factor -> factor . dot func_call
   yacc.py:2566:
   yacc.py:2609:  ! shift/reduce conflict for arroba resolved as shift
   yacc.py:2666:  ! shift/reduce conflict for dot resolved as shift
   yacc.py:2687:    arroba          shift and go to state 121
   yacc.py:2687:    star            reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    div             reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    plus            reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    minus           reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    less            reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    lesseq          reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    equal           reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    semi            reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    cpar            reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    of              reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    then            reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    loop            reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    comma           reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    in              reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    else            reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    pool            reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    ccur            reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    fi              reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    dot             shift and go to state 122
   yacc.py:2689:
   yacc.py:2696:  ! arroba          [ reduce using rule 60 (base_call -> factor .) ]
   yacc.py:2696:  ! dot             [ reduce using rule 60 (base_call -> factor .) ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 78
   yacc.py:2563:
   yacc.py:2565:    (67) factor -> func_call .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    dot             reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    star            reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    div             reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    plus            reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    minus           reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    less            reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    lesseq          reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    equal           reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    semi            reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    cpar            reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    of              reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    then            reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    loop            reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    comma           reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    in              reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    else            reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    pool            reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    ccur            reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    fi              reduce using rule 67 (factor -> func_call .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 79
   yacc.py:2563:
   yacc.py:2565:    (63) factor -> atom .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    dot             reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    star            reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    div             reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    plus            reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    minus           reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    less            reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    lesseq          reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    equal           reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    semi            reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    cpar            reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    of              reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    then            reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    loop            reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    comma           reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    in              reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    else            reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    pool            reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    ccur            reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    fi              reduce using rule 63 (factor -> atom .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 80
   yacc.py:2563:
   yacc.py:2565:    (64) factor -> opar . expr cpar
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 123
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 81
   yacc.py:2563:
   yacc.py:2565:    (66) factor -> not . expr
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 124
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 82
   yacc.py:2563:
   yacc.py:2565:    (68) factor -> isvoid . base_call
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    id              shift and go to state 126
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    base_call                      shift and go to state 125
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 83
   yacc.py:2563:
   yacc.py:2565:    (69) factor -> nox . base_call
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    id              shift and go to state 126
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    base_call                      shift and go to state 127
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 84
   yacc.py:2563:
   yacc.py:2565:    (70) factor -> let . let_list in expr
   yacc.py:2565:    (36) let_list -> . let_assign
   yacc.py:2565:    (37) let_list -> . let_assign comma let_list
   yacc.py:2565:    (38) let_assign -> . param larrow expr
   yacc.py:2565:    (39) let_assign -> . param
   yacc.py:2565:    (35) param -> . id colon type
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 46
   yacc.py:2689:
   yacc.py:2714:    let_list                       shift and go to state 128
   yacc.py:2714:    let_assign                     shift and go to state 129
   yacc.py:2714:    param                          shift and go to state 130
   yacc.py:2561:
   yacc.py:2562:state 85
   yacc.py:2563:
   yacc.py:2565:    (71) factor -> case . expr of cases_list esac
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 131
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 86
   yacc.py:2563:
   yacc.py:2565:    (72) factor -> if . expr then expr else expr fi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 132
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 87
   yacc.py:2563:
   yacc.py:2565:    (73) factor -> while . expr loop expr pool
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 133
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 88
   yacc.py:2563:
   yacc.py:2565:    (74) atom -> num .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 74 (atom -> num .)
   yacc.py:2687:    dot             reduce using rule 74 (atom -> num .)
   yacc.py:2687:    star            reduce using rule 74 (atom -> num .)
   yacc.py:2687:    div             reduce using rule 74 (atom -> num .)
   yacc.py:2687:    plus            reduce using rule 74 (atom -> num .)
   yacc.py:2687:    minus           reduce using rule 74 (atom -> num .)
   yacc.py:2687:    less            reduce using rule 74 (atom -> num .)
   yacc.py:2687:    lesseq          reduce using rule 74 (atom -> num .)
   yacc.py:2687:    equal           reduce using rule 74 (atom -> num .)
   yacc.py:2687:    semi            reduce using rule 74 (atom -> num .)
   yacc.py:2687:    cpar            reduce using rule 74 (atom -> num .)
   yacc.py:2687:    of              reduce using rule 74 (atom -> num .)
   yacc.py:2687:    then            reduce using rule 74 (atom -> num .)
   yacc.py:2687:    loop            reduce using rule 74 (atom -> num .)
   yacc.py:2687:    comma           reduce using rule 74 (atom -> num .)
   yacc.py:2687:    in              reduce using rule 74 (atom -> num .)
   yacc.py:2687:    else            reduce using rule 74 (atom -> num .)
   yacc.py:2687:    pool            reduce using rule 74 (atom -> num .)
   yacc.py:2687:    ccur            reduce using rule 74 (atom -> num .)
   yacc.py:2687:    fi              reduce using rule 74 (atom -> num .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 89
   yacc.py:2563:
   yacc.py:2565:    (76) atom -> new . type
   yacc.py:2566:
   yacc.py:2687:    type            shift and go to state 134
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 90
   yacc.py:2563:
   yacc.py:2565:    (77) atom -> ocur . block ccur
   yacc.py:2565:    (79) atom -> ocur . error ccur
   yacc.py:2565:    (80) atom -> ocur . block error
   yacc.py:2565:    (84) block -> . expr semi
   yacc.py:2565:    (85) block -> . expr semi block
   yacc.py:2565:    (86) block -> . error block
   yacc.py:2565:    (87) block -> . error semi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 136
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    block                          shift and go to state 135
   yacc.py:2714:    expr                           shift and go to state 111
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 91
   yacc.py:2563:
   yacc.py:2565:    (81) atom -> true .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 81 (atom -> true .)
   yacc.py:2687:    dot             reduce using rule 81 (atom -> true .)
   yacc.py:2687:    star            reduce using rule 81 (atom -> true .)
   yacc.py:2687:    div             reduce using rule 81 (atom -> true .)
   yacc.py:2687:    plus            reduce using rule 81 (atom -> true .)
   yacc.py:2687:    minus           reduce using rule 81 (atom -> true .)
   yacc.py:2687:    less            reduce using rule 81 (atom -> true .)
   yacc.py:2687:    lesseq          reduce using rule 81 (atom -> true .)
   yacc.py:2687:    equal           reduce using rule 81 (atom -> true .)
   yacc.py:2687:    semi            reduce using rule 81 (atom -> true .)
   yacc.py:2687:    cpar            reduce using rule 81 (atom -> true .)
   yacc.py:2687:    of              reduce using rule 81 (atom -> true .)
   yacc.py:2687:    then            reduce using rule 81 (atom -> true .)
   yacc.py:2687:    loop            reduce using rule 81 (atom -> true .)
   yacc.py:2687:    comma           reduce using rule 81 (atom -> true .)
   yacc.py:2687:    in              reduce using rule 81 (atom -> true .)
   yacc.py:2687:    else            reduce using rule 81 (atom -> true .)
   yacc.py:2687:    pool            reduce using rule 81 (atom -> true .)
   yacc.py:2687:    ccur            reduce using rule 81 (atom -> true .)
   yacc.py:2687:    fi              reduce using rule 81 (atom -> true .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 92
   yacc.py:2563:
   yacc.py:2565:    (82) atom -> false .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 82 (atom -> false .)
   yacc.py:2687:    dot             reduce using rule 82 (atom -> false .)
   yacc.py:2687:    star            reduce using rule 82 (atom -> false .)
   yacc.py:2687:    div             reduce using rule 82 (atom -> false .)
   yacc.py:2687:    plus            reduce using rule 82 (atom -> false .)
   yacc.py:2687:    minus           reduce using rule 82 (atom -> false .)
   yacc.py:2687:    less            reduce using rule 82 (atom -> false .)
   yacc.py:2687:    lesseq          reduce using rule 82 (atom -> false .)
   yacc.py:2687:    equal           reduce using rule 82 (atom -> false .)
   yacc.py:2687:    semi            reduce using rule 82 (atom -> false .)
   yacc.py:2687:    cpar            reduce using rule 82 (atom -> false .)
   yacc.py:2687:    of              reduce using rule 82 (atom -> false .)
   yacc.py:2687:    then            reduce using rule 82 (atom -> false .)
   yacc.py:2687:    loop            reduce using rule 82 (atom -> false .)
   yacc.py:2687:    comma           reduce using rule 82 (atom -> false .)
   yacc.py:2687:    in              reduce using rule 82 (atom -> false .)
   yacc.py:2687:    else            reduce using rule 82 (atom -> false .)
   yacc.py:2687:    pool            reduce using rule 82 (atom -> false .)
   yacc.py:2687:    ccur            reduce using rule 82 (atom -> false .)
   yacc.py:2687:    fi              reduce using rule 82 (atom -> false .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 93
   yacc.py:2563:
   yacc.py:2565:    (83) atom -> string .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 83 (atom -> string .)
   yacc.py:2687:    dot             reduce using rule 83 (atom -> string .)
   yacc.py:2687:    star            reduce using rule 83 (atom -> string .)
   yacc.py:2687:    div             reduce using rule 83 (atom -> string .)
   yacc.py:2687:    plus            reduce using rule 83 (atom -> string .)
   yacc.py:2687:    minus           reduce using rule 83 (atom -> string .)
   yacc.py:2687:    less            reduce using rule 83 (atom -> string .)
   yacc.py:2687:    lesseq          reduce using rule 83 (atom -> string .)
   yacc.py:2687:    equal           reduce using rule 83 (atom -> string .)
   yacc.py:2687:    semi            reduce using rule 83 (atom -> string .)
   yacc.py:2687:    cpar            reduce using rule 83 (atom -> string .)
   yacc.py:2687:    of              reduce using rule 83 (atom -> string .)
   yacc.py:2687:    then            reduce using rule 83 (atom -> string .)
   yacc.py:2687:    loop            reduce using rule 83 (atom -> string .)
   yacc.py:2687:    comma           reduce using rule 83 (atom -> string .)
   yacc.py:2687:    in              reduce using rule 83 (atom -> string .)
   yacc.py:2687:    else            reduce using rule 83 (atom -> string .)
   yacc.py:2687:    pool            reduce using rule 83 (atom -> string .)
   yacc.py:2687:    ccur            reduce using rule 83 (atom -> string .)
   yacc.py:2687:    fi              reduce using rule 83 (atom -> string .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 94
   yacc.py:2563:
   yacc.py:2565:    (26) def_func -> error opar formals cpar colon . type ocur expr ccur
   yacc.py:2566:
   yacc.py:2687:    type            shift and go to state 137
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 95
   yacc.py:2563:
   yacc.py:2565:    (33) param_list -> param comma param_list .
   yacc.py:2566:
   yacc.py:2687:    cpar            reduce using rule 33 (param_list -> param comma param_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 96
   yacc.py:2563:
   yacc.py:2565:    (35) param -> id colon type .
   yacc.py:2566:
   yacc.py:2687:    comma           reduce using rule 35 (param -> id colon type .)
   yacc.py:2687:    cpar            reduce using rule 35 (param -> id colon type .)
   yacc.py:2687:    larrow          reduce using rule 35 (param -> id colon type .)
   yacc.py:2687:    in              reduce using rule 35 (param -> id colon type .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 97
   yacc.py:2563:
   yacc.py:2565:    (19) def_attr -> id colon type larrow expr .
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 19 (def_attr -> id colon type larrow expr .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 98
   yacc.py:2563:
   yacc.py:2565:    (24) def_attr -> id colon type larrow error .
   yacc.py:2565:    (61) base_call -> error . arroba type dot func_call
   yacc.py:2565:    (78) atom -> error . block ccur
   yacc.py:2565:    (90) func_call -> error . opar args cpar
   yacc.py:2565:    (84) block -> . expr semi
   yacc.py:2565:    (85) block -> . expr semi block
   yacc.py:2565:    (86) block -> . error block
   yacc.py:2565:    (87) block -> . error semi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 24 (def_attr -> id colon type larrow error .)
   yacc.py:2687:    arroba          shift and go to state 108
   yacc.py:2687:    opar            shift and go to state 110
   yacc.py:2687:    error           shift and go to state 107
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    block                          shift and go to state 109
   yacc.py:2714:    expr                           shift and go to state 111
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 99
   yacc.py:2563:
   yacc.py:2565:    (23) def_attr -> id colon error larrow expr .
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 23 (def_attr -> id colon error larrow expr .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 100
   yacc.py:2563:
   yacc.py:2565:    (25) def_func -> id opar formals cpar colon . type ocur expr ccur
   yacc.py:2565:    (28) def_func -> id opar formals cpar colon . error ocur expr ccur
   yacc.py:2565:    (29) def_func -> id opar formals cpar colon . type ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    type            shift and go to state 138
   yacc.py:2687:    error           shift and go to state 139
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 101
   yacc.py:2563:
   yacc.py:2565:    (27) def_func -> id opar error cpar colon . type ocur expr ccur
   yacc.py:2566:
   yacc.py:2687:    type            shift and go to state 140
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 102
   yacc.py:2563:
   yacc.py:2565:    (7) def_class -> class type inherits type ocur feature_list ccur semi .
   yacc.py:2566:
   yacc.py:2687:    error           reduce using rule 7 (def_class -> class type inherits type ocur feature_list ccur semi .)
   yacc.py:2687:    class           reduce using rule 7 (def_class -> class type inherits type ocur feature_list ccur semi .)
   yacc.py:2687:    $end            reduce using rule 7 (def_class -> class type inherits type ocur feature_list ccur semi .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 103
   yacc.py:2563:
   yacc.py:2565:    (13) def_class -> class type inherits type ocur feature_list ccur error .
   yacc.py:2566:
   yacc.py:2687:    error           reduce using rule 13 (def_class -> class type inherits type ocur feature_list ccur error .)
   yacc.py:2687:    class           reduce using rule 13 (def_class -> class type inherits type ocur feature_list ccur error .)
   yacc.py:2687:    $end            reduce using rule 13 (def_class -> class type inherits type ocur feature_list ccur error .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 104
   yacc.py:2563:
   yacc.py:2565:    (12) def_class -> class type inherits error ocur feature_list ccur semi .
   yacc.py:2566:
   yacc.py:2687:    error           reduce using rule 12 (def_class -> class type inherits error ocur feature_list ccur semi .)
   yacc.py:2687:    class           reduce using rule 12 (def_class -> class type inherits error ocur feature_list ccur semi .)
   yacc.py:2687:    $end            reduce using rule 12 (def_class -> class type inherits error ocur feature_list ccur semi .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 105
   yacc.py:2563:
   yacc.py:2565:    (11) def_class -> class error inherits error ocur feature_list ccur semi .
   yacc.py:2566:
   yacc.py:2687:    error           reduce using rule 11 (def_class -> class error inherits error ocur feature_list ccur semi .)
   yacc.py:2687:    class           reduce using rule 11 (def_class -> class error inherits error ocur feature_list ccur semi .)
   yacc.py:2687:    $end            reduce using rule 11 (def_class -> class error inherits error ocur feature_list ccur semi .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 106
   yacc.py:2563:
   yacc.py:2565:    (10) def_class -> class error inherits type ocur feature_list ccur semi .
   yacc.py:2566:
   yacc.py:2687:    error           reduce using rule 10 (def_class -> class error inherits type ocur feature_list ccur semi .)
   yacc.py:2687:    class           reduce using rule 10 (def_class -> class error inherits type ocur feature_list ccur semi .)
   yacc.py:2687:    $end            reduce using rule 10 (def_class -> class error inherits type ocur feature_list ccur semi .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 107
   yacc.py:2563:
   yacc.py:2565:    (86) block -> error . block
   yacc.py:2565:    (87) block -> error . semi
   yacc.py:2565:    (61) base_call -> error . arroba type dot func_call
   yacc.py:2565:    (78) atom -> error . block ccur
   yacc.py:2565:    (90) func_call -> error . opar args cpar
   yacc.py:2565:    (84) block -> . expr semi
   yacc.py:2565:    (85) block -> . expr semi block
   yacc.py:2565:    (86) block -> . error block
   yacc.py:2565:    (87) block -> . error semi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    semi            shift and go to state 142
   yacc.py:2687:    arroba          shift and go to state 108
   yacc.py:2687:    opar            shift and go to state 110
   yacc.py:2687:    error           shift and go to state 107
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    block                          shift and go to state 141
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    expr                           shift and go to state 111
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 108
   yacc.py:2563:
   yacc.py:2565:    (61) base_call -> error arroba . type dot func_call
   yacc.py:2566:
   yacc.py:2687:    type            shift and go to state 143
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 109
   yacc.py:2563:
   yacc.py:2565:    (78) atom -> error block . ccur
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 144
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 110
   yacc.py:2563:
   yacc.py:2565:    (90) func_call -> error opar . args cpar
   yacc.py:2565:    (64) factor -> opar . expr cpar
   yacc.py:2565:    (91) args -> . arg_list
   yacc.py:2565:    (92) args -> . arg_list_empty
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (93) arg_list -> . expr
   yacc.py:2565:    (94) arg_list -> . expr comma arg_list
   yacc.py:2565:    (95) arg_list -> . error arg_list
   yacc.py:2565:    (96) arg_list_empty -> . epsilon
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 145
   yacc.py:2687:    cpar            reduce using rule 2 (epsilon -> .)
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    args                           shift and go to state 146
   yacc.py:2714:    expr                           shift and go to state 147
   yacc.py:2714:    arg_list                       shift and go to state 148
   yacc.py:2714:    arg_list_empty                 shift and go to state 149
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    epsilon                        shift and go to state 150
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 111
   yacc.py:2563:
   yacc.py:2565:    (84) block -> expr . semi
   yacc.py:2565:    (85) block -> expr . semi block
   yacc.py:2566:
   yacc.py:2687:    semi            shift and go to state 151
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 112
   yacc.py:2563:
   yacc.py:2565:    (45) expr -> id larrow . expr
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 152
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 113
   yacc.py:2563:
   yacc.py:2565:    (88) func_call -> id opar . args cpar
   yacc.py:2565:    (89) func_call -> id opar . error cpar
   yacc.py:2565:    (91) args -> . arg_list
   yacc.py:2565:    (92) args -> . arg_list_empty
   yacc.py:2565:    (93) arg_list -> . expr
   yacc.py:2565:    (94) arg_list -> . expr comma arg_list
   yacc.py:2565:    (95) arg_list -> . error arg_list
   yacc.py:2565:    (96) arg_list_empty -> . epsilon
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 154
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    cpar            reduce using rule 2 (epsilon -> .)
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    args                           shift and go to state 153
   yacc.py:2714:    arg_list                       shift and go to state 148
   yacc.py:2714:    arg_list_empty                 shift and go to state 149
   yacc.py:2714:    expr                           shift and go to state 155
   yacc.py:2714:    epsilon                        shift and go to state 150
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 114
   yacc.py:2563:
   yacc.py:2565:    (47) comp -> comp less . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    id              shift and go to state 126
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    op                             shift and go to state 156
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 115
   yacc.py:2563:
   yacc.py:2565:    (48) comp -> comp lesseq . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    id              shift and go to state 126
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    op                             shift and go to state 157
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 116
   yacc.py:2563:
   yacc.py:2565:    (49) comp -> comp equal . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    id              shift and go to state 126
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    op                             shift and go to state 158
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 117
   yacc.py:2563:
   yacc.py:2565:    (51) op -> op plus . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    id              shift and go to state 126
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    term                           shift and go to state 159
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 118
   yacc.py:2563:
   yacc.py:2565:    (52) op -> op minus . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    id              shift and go to state 126
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    term                           shift and go to state 160
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 119
   yacc.py:2563:
   yacc.py:2565:    (54) term -> term star . base_call
   yacc.py:2565:    (57) term -> term star . error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 162
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    id              shift and go to state 126
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    base_call                      shift and go to state 161
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 120
   yacc.py:2563:
   yacc.py:2565:    (55) term -> term div . base_call
   yacc.py:2565:    (58) term -> term div . error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 164
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    id              shift and go to state 126
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    base_call                      shift and go to state 163
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 121
   yacc.py:2563:
   yacc.py:2565:    (59) base_call -> factor arroba . type dot func_call
   yacc.py:2565:    (62) base_call -> factor arroba . error dot func_call
   yacc.py:2566:
   yacc.py:2687:    type            shift and go to state 165
   yacc.py:2687:    error           shift and go to state 166
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 122
   yacc.py:2563:
   yacc.py:2565:    (65) factor -> factor dot . func_call
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 168
   yacc.py:2687:    error           shift and go to state 169
   yacc.py:2689:
   yacc.py:2714:    func_call                      shift and go to state 167
   yacc.py:2561:
   yacc.py:2562:state 123
   yacc.py:2563:
   yacc.py:2565:    (64) factor -> opar expr . cpar
   yacc.py:2566:
   yacc.py:2687:    cpar            shift and go to state 170
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 124
   yacc.py:2563:
   yacc.py:2565:    (66) factor -> not expr .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    dot             reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    star            reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    div             reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    plus            reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    minus           reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    less            reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    lesseq          reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    equal           reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    semi            reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    cpar            reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    of              reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    then            reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    loop            reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    comma           reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    in              reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    else            reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    pool            reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    ccur            reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    fi              reduce using rule 66 (factor -> not expr .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 125
   yacc.py:2563:
   yacc.py:2565:    (68) factor -> isvoid base_call .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    dot             reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    star            reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    div             reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    plus            reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    minus           reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    less            reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    lesseq          reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    equal           reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    semi            reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    cpar            reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    of              reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    then            reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    loop            reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    comma           reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    in              reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    else            reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    pool            reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    ccur            reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    fi              reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 126
   yacc.py:2563:
   yacc.py:2565:    (75) atom -> id .
   yacc.py:2565:    (88) func_call -> id . opar args cpar
   yacc.py:2565:    (89) func_call -> id . opar error cpar
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 75 (atom -> id .)
   yacc.py:2687:    dot             reduce using rule 75 (atom -> id .)
   yacc.py:2687:    star            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    div             reduce using rule 75 (atom -> id .)
   yacc.py:2687:    plus            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    minus           reduce using rule 75 (atom -> id .)
   yacc.py:2687:    less            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    lesseq          reduce using rule 75 (atom -> id .)
   yacc.py:2687:    equal           reduce using rule 75 (atom -> id .)
   yacc.py:2687:    semi            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    cpar            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    of              reduce using rule 75 (atom -> id .)
   yacc.py:2687:    then            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    loop            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    comma           reduce using rule 75 (atom -> id .)
   yacc.py:2687:    in              reduce using rule 75 (atom -> id .)
   yacc.py:2687:    else            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    pool            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    ccur            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    fi              reduce using rule 75 (atom -> id .)
   yacc.py:2687:    opar            shift and go to state 113
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 127
   yacc.py:2563:
   yacc.py:2565:    (69) factor -> nox base_call .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    dot             reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    star            reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    div             reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    plus            reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    minus           reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    less            reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    lesseq          reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    equal           reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    semi            reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    cpar            reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    of              reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    then            reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    loop            reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    comma           reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    in              reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    else            reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    pool            reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    ccur            reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    fi              reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 128
   yacc.py:2563:
   yacc.py:2565:    (70) factor -> let let_list . in expr
   yacc.py:2566:
   yacc.py:2687:    in              shift and go to state 171
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 129
   yacc.py:2563:
   yacc.py:2565:    (36) let_list -> let_assign .
   yacc.py:2565:    (37) let_list -> let_assign . comma let_list
   yacc.py:2566:
   yacc.py:2687:    in              reduce using rule 36 (let_list -> let_assign .)
   yacc.py:2687:    comma           shift and go to state 172
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 130
   yacc.py:2563:
   yacc.py:2565:    (38) let_assign -> param . larrow expr
   yacc.py:2565:    (39) let_assign -> param .
   yacc.py:2566:
   yacc.py:2687:    larrow          shift and go to state 173
   yacc.py:2687:    comma           reduce using rule 39 (let_assign -> param .)
   yacc.py:2687:    in              reduce using rule 39 (let_assign -> param .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 131
   yacc.py:2563:
   yacc.py:2565:    (71) factor -> case expr . of cases_list esac
   yacc.py:2566:
   yacc.py:2687:    of              shift and go to state 174
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 132
   yacc.py:2563:
   yacc.py:2565:    (72) factor -> if expr . then expr else expr fi
   yacc.py:2566:
   yacc.py:2687:    then            shift and go to state 175
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 133
   yacc.py:2563:
   yacc.py:2565:    (73) factor -> while expr . loop expr pool
   yacc.py:2566:
   yacc.py:2687:    loop            shift and go to state 176
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 134
   yacc.py:2563:
   yacc.py:2565:    (76) atom -> new type .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    dot             reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    star            reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    div             reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    plus            reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    minus           reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    less            reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    lesseq          reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    equal           reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    semi            reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    cpar            reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    of              reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    then            reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    loop            reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    comma           reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    in              reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    else            reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    pool            reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    ccur            reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    fi              reduce using rule 76 (atom -> new type .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 135
   yacc.py:2563:
   yacc.py:2565:    (77) atom -> ocur block . ccur
   yacc.py:2565:    (80) atom -> ocur block . error
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 177
   yacc.py:2687:    error           shift and go to state 178
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 136
   yacc.py:2563:
   yacc.py:2565:    (79) atom -> ocur error . ccur
   yacc.py:2565:    (86) block -> error . block
   yacc.py:2565:    (87) block -> error . semi
   yacc.py:2565:    (61) base_call -> error . arroba type dot func_call
   yacc.py:2565:    (78) atom -> error . block ccur
   yacc.py:2565:    (90) func_call -> error . opar args cpar
   yacc.py:2565:    (84) block -> . expr semi
   yacc.py:2565:    (85) block -> . expr semi block
   yacc.py:2565:    (86) block -> . error block
   yacc.py:2565:    (87) block -> . error semi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 179
   yacc.py:2687:    semi            shift and go to state 142
   yacc.py:2687:    arroba          shift and go to state 108
   yacc.py:2687:    opar            shift and go to state 110
   yacc.py:2687:    error           shift and go to state 107
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    block                          shift and go to state 141
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    expr                           shift and go to state 111
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 137
   yacc.py:2563:
   yacc.py:2565:    (26) def_func -> error opar formals cpar colon type . ocur expr ccur
   yacc.py:2566:
   yacc.py:2687:    ocur            shift and go to state 180
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 138
   yacc.py:2563:
   yacc.py:2565:    (25) def_func -> id opar formals cpar colon type . ocur expr ccur
   yacc.py:2565:    (29) def_func -> id opar formals cpar colon type . ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    ocur            shift and go to state 181
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 139
   yacc.py:2563:
   yacc.py:2565:    (28) def_func -> id opar formals cpar colon error . ocur expr ccur
   yacc.py:2566:
   yacc.py:2687:    ocur            shift and go to state 182
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 140
   yacc.py:2563:
   yacc.py:2565:    (27) def_func -> id opar error cpar colon type . ocur expr ccur
   yacc.py:2566:
   yacc.py:2687:    ocur            shift and go to state 183
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 141
   yacc.py:2563:
   yacc.py:2565:    (86) block -> error block .
   yacc.py:2565:    (78) atom -> error block . ccur
   yacc.py:2566:
   yacc.py:2666:  ! shift/reduce conflict for ccur resolved as shift
   yacc.py:2687:    error           reduce using rule 86 (block -> error block .)
   yacc.py:2687:    ccur            shift and go to state 144
   yacc.py:2689:
   yacc.py:2696:  ! ccur            [ reduce using rule 86 (block -> error block .) ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 142
   yacc.py:2563:
   yacc.py:2565:    (87) block -> error semi .
   yacc.py:2566:
   yacc.py:2687:    ccur            reduce using rule 87 (block -> error semi .)
   yacc.py:2687:    error           reduce using rule 87 (block -> error semi .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 143
   yacc.py:2563:
   yacc.py:2565:    (61) base_call -> error arroba type . dot func_call
   yacc.py:2566:
   yacc.py:2687:    dot             shift and go to state 184
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 144
   yacc.py:2563:
   yacc.py:2565:    (78) atom -> error block ccur .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    dot             reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    star            reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    div             reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    plus            reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    minus           reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    less            reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    lesseq          reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    equal           reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    semi            reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    cpar            reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    of              reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    then            reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    loop            reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    comma           reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    in              reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    else            reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    pool            reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    ccur            reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    fi              reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 145
   yacc.py:2563:
   yacc.py:2565:    (95) arg_list -> error . arg_list
   yacc.py:2565:    (61) base_call -> error . arroba type dot func_call
   yacc.py:2565:    (78) atom -> error . block ccur
   yacc.py:2565:    (90) func_call -> error . opar args cpar
   yacc.py:2565:    (93) arg_list -> . expr
   yacc.py:2565:    (94) arg_list -> . expr comma arg_list
   yacc.py:2565:    (95) arg_list -> . error arg_list
   yacc.py:2565:    (84) block -> . expr semi
   yacc.py:2565:    (85) block -> . expr semi block
   yacc.py:2565:    (86) block -> . error block
   yacc.py:2565:    (87) block -> . error semi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    arroba          shift and go to state 108
   yacc.py:2687:    opar            shift and go to state 110
   yacc.py:2687:    error           shift and go to state 185
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    arg_list                       shift and go to state 186
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    block                          shift and go to state 109
   yacc.py:2714:    expr                           shift and go to state 187
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 146
   yacc.py:2563:
   yacc.py:2565:    (90) func_call -> error opar args . cpar
   yacc.py:2566:
   yacc.py:2687:    cpar            shift and go to state 188
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 147
   yacc.py:2563:
   yacc.py:2565:    (64) factor -> opar expr . cpar
   yacc.py:2565:    (93) arg_list -> expr .
   yacc.py:2565:    (94) arg_list -> expr . comma arg_list
   yacc.py:2566:
   yacc.py:2609:  ! shift/reduce conflict for cpar resolved as shift
   yacc.py:2687:    cpar            shift and go to state 170
   yacc.py:2687:    comma           shift and go to state 189
   yacc.py:2689:
   yacc.py:2696:  ! cpar            [ reduce using rule 93 (arg_list -> expr .) ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 148
   yacc.py:2563:
   yacc.py:2565:    (91) args -> arg_list .
   yacc.py:2566:
   yacc.py:2687:    cpar            reduce using rule 91 (args -> arg_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 149
   yacc.py:2563:
   yacc.py:2565:    (92) args -> arg_list_empty .
   yacc.py:2566:
   yacc.py:2687:    cpar            reduce using rule 92 (args -> arg_list_empty .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 150
   yacc.py:2563:
   yacc.py:2565:    (96) arg_list_empty -> epsilon .
   yacc.py:2566:
   yacc.py:2687:    cpar            reduce using rule 96 (arg_list_empty -> epsilon .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 151
   yacc.py:2563:
   yacc.py:2565:    (84) block -> expr semi .
   yacc.py:2565:    (85) block -> expr semi . block
   yacc.py:2565:    (84) block -> . expr semi
   yacc.py:2565:    (85) block -> . expr semi block
   yacc.py:2565:    (86) block -> . error block
   yacc.py:2565:    (87) block -> . error semi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2666:  ! shift/reduce conflict for error resolved as shift
   yacc.py:2687:    ccur            reduce using rule 84 (block -> expr semi .)
   yacc.py:2687:    error           shift and go to state 107
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2696:  ! error           [ reduce using rule 84 (block -> expr semi .) ]
   yacc.py:2700:
   yacc.py:2714:    expr                           shift and go to state 111
   yacc.py:2714:    block                          shift and go to state 190
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 152
   yacc.py:2563:
   yacc.py:2565:    (45) expr -> id larrow expr .
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    cpar            reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    arroba          reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    dot             reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    star            reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    div             reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    plus            reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    minus           reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    less            reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    lesseq          reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    equal           reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    of              reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    then            reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    loop            reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    comma           reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    in              reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    else            reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    pool            reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    ccur            reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    fi              reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 153
   yacc.py:2563:
   yacc.py:2565:    (88) func_call -> id opar args . cpar
   yacc.py:2566:
   yacc.py:2687:    cpar            shift and go to state 191
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 154
   yacc.py:2563:
   yacc.py:2565:    (89) func_call -> id opar error . cpar
   yacc.py:2565:    (95) arg_list -> error . arg_list
   yacc.py:2565:    (61) base_call -> error . arroba type dot func_call
   yacc.py:2565:    (78) atom -> error . block ccur
   yacc.py:2565:    (90) func_call -> error . opar args cpar
   yacc.py:2565:    (93) arg_list -> . expr
   yacc.py:2565:    (94) arg_list -> . expr comma arg_list
   yacc.py:2565:    (95) arg_list -> . error arg_list
   yacc.py:2565:    (84) block -> . expr semi
   yacc.py:2565:    (85) block -> . expr semi block
   yacc.py:2565:    (86) block -> . error block
   yacc.py:2565:    (87) block -> . error semi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    cpar            shift and go to state 192
   yacc.py:2687:    arroba          shift and go to state 108
   yacc.py:2687:    opar            shift and go to state 110
   yacc.py:2687:    error           shift and go to state 185
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    arg_list                       shift and go to state 186
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    block                          shift and go to state 109
   yacc.py:2714:    expr                           shift and go to state 187
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 155
   yacc.py:2563:
   yacc.py:2565:    (93) arg_list -> expr .
   yacc.py:2565:    (94) arg_list -> expr . comma arg_list
   yacc.py:2566:
   yacc.py:2687:    cpar            reduce using rule 93 (arg_list -> expr .)
   yacc.py:2687:    comma           shift and go to state 189
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 156
   yacc.py:2563:
   yacc.py:2565:    (47) comp -> comp less op .
   yacc.py:2565:    (51) op -> op . plus term
   yacc.py:2565:    (52) op -> op . minus term
   yacc.py:2566:
   yacc.py:2666:  ! shift/reduce conflict for plus resolved as shift
   yacc.py:2666:  ! shift/reduce conflict for minus resolved as shift
   yacc.py:2687:    less            reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    lesseq          reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    equal           reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    semi            reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    cpar            reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    arroba          reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    dot             reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    star            reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    div             reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    of              reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    then            reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    loop            reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    comma           reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    in              reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    else            reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    pool            reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    ccur            reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    fi              reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    plus            shift and go to state 117
   yacc.py:2687:    minus           shift and go to state 118
   yacc.py:2689:
   yacc.py:2696:  ! plus            [ reduce using rule 47 (comp -> comp less op .) ]
   yacc.py:2696:  ! minus           [ reduce using rule 47 (comp -> comp less op .) ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 157
   yacc.py:2563:
   yacc.py:2565:    (48) comp -> comp lesseq op .
   yacc.py:2565:    (51) op -> op . plus term
   yacc.py:2565:    (52) op -> op . minus term
   yacc.py:2566:
   yacc.py:2666:  ! shift/reduce conflict for plus resolved as shift
   yacc.py:2666:  ! shift/reduce conflict for minus resolved as shift
   yacc.py:2687:    less            reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    lesseq          reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    equal           reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    semi            reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    cpar            reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    arroba          reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    dot             reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    star            reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    div             reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    of              reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    then            reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    loop            reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    comma           reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    in              reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    else            reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    pool            reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    ccur            reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    fi              reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    plus            shift and go to state 117
   yacc.py:2687:    minus           shift and go to state 118
   yacc.py:2689:
   yacc.py:2696:  ! plus            [ reduce using rule 48 (comp -> comp lesseq op .) ]
   yacc.py:2696:  ! minus           [ reduce using rule 48 (comp -> comp lesseq op .) ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 158
   yacc.py:2563:
   yacc.py:2565:    (49) comp -> comp equal op .
   yacc.py:2565:    (51) op -> op . plus term
   yacc.py:2565:    (52) op -> op . minus term
   yacc.py:2566:
   yacc.py:2666:  ! shift/reduce conflict for plus resolved as shift
   yacc.py:2666:  ! shift/reduce conflict for minus resolved as shift
   yacc.py:2687:    less            reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    lesseq          reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    equal           reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    semi            reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    cpar            reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    arroba          reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    dot             reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    star            reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    div             reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    of              reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    then            reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    loop            reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    comma           reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    in              reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    else            reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    pool            reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    ccur            reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    fi              reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    plus            shift and go to state 117
   yacc.py:2687:    minus           shift and go to state 118
   yacc.py:2689:
   yacc.py:2696:  ! plus            [ reduce using rule 49 (comp -> comp equal op .) ]
   yacc.py:2696:  ! minus           [ reduce using rule 49 (comp -> comp equal op .) ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 159
   yacc.py:2563:
   yacc.py:2565:    (51) op -> op plus term .
   yacc.py:2565:    (54) term -> term . star base_call
   yacc.py:2565:    (55) term -> term . div base_call
   yacc.py:2565:    (57) term -> term . star error
   yacc.py:2565:    (58) term -> term . div error
   yacc.py:2566:
   yacc.py:2666:  ! shift/reduce conflict for star resolved as shift
   yacc.py:2666:  ! shift/reduce conflict for div resolved as shift
   yacc.py:2687:    plus            reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    minus           reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    less            reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    lesseq          reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    equal           reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    semi            reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    cpar            reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    arroba          reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    dot             reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    of              reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    then            reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    loop            reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    comma           reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    in              reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    else            reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    pool            reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    ccur            reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    fi              reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    star            shift and go to state 119
   yacc.py:2687:    div             shift and go to state 120
   yacc.py:2689:
   yacc.py:2696:  ! star            [ reduce using rule 51 (op -> op plus term .) ]
   yacc.py:2696:  ! div             [ reduce using rule 51 (op -> op plus term .) ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 160
   yacc.py:2563:
   yacc.py:2565:    (52) op -> op minus term .
   yacc.py:2565:    (54) term -> term . star base_call
   yacc.py:2565:    (55) term -> term . div base_call
   yacc.py:2565:    (57) term -> term . star error
   yacc.py:2565:    (58) term -> term . div error
   yacc.py:2566:
   yacc.py:2666:  ! shift/reduce conflict for star resolved as shift
   yacc.py:2666:  ! shift/reduce conflict for div resolved as shift
   yacc.py:2687:    plus            reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    minus           reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    less            reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    lesseq          reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    equal           reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    semi            reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    cpar            reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    arroba          reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    dot             reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    of              reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    then            reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    loop            reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    comma           reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    in              reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    else            reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    pool            reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    ccur            reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    fi              reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    star            shift and go to state 119
   yacc.py:2687:    div             shift and go to state 120
   yacc.py:2689:
   yacc.py:2696:  ! star            [ reduce using rule 52 (op -> op minus term .) ]
   yacc.py:2696:  ! div             [ reduce using rule 52 (op -> op minus term .) ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 161
   yacc.py:2563:
   yacc.py:2565:    (54) term -> term star base_call .
   yacc.py:2566:
   yacc.py:2687:    star            reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    div             reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    plus            reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    minus           reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    less            reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    lesseq          reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    equal           reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    semi            reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    cpar            reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    arroba          reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    dot             reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    of              reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    then            reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    loop            reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    comma           reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    in              reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    else            reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    pool            reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    ccur            reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    fi              reduce using rule 54 (term -> term star base_call .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 162
   yacc.py:2563:
   yacc.py:2565:    (57) term -> term star error .
   yacc.py:2565:    (61) base_call -> error . arroba type dot func_call
   yacc.py:2565:    (78) atom -> error . block ccur
   yacc.py:2565:    (90) func_call -> error . opar args cpar
   yacc.py:2565:    (84) block -> . expr semi
   yacc.py:2565:    (85) block -> . expr semi block
   yacc.py:2565:    (86) block -> . error block
   yacc.py:2565:    (87) block -> . error semi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2666:  ! shift/reduce conflict for arroba resolved as shift
   yacc.py:2687:    star            reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    div             reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    plus            reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    minus           reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    less            reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    lesseq          reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    equal           reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    semi            reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    cpar            reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    dot             reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    of              reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    then            reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    loop            reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    comma           reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    in              reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    else            reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    pool            reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    ccur            reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    fi              reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    arroba          shift and go to state 108
   yacc.py:2687:    opar            shift and go to state 110
   yacc.py:2687:    error           shift and go to state 107
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2696:  ! arroba          [ reduce using rule 57 (term -> term star error .) ]
   yacc.py:2700:
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    block                          shift and go to state 109
   yacc.py:2714:    expr                           shift and go to state 111
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 163
   yacc.py:2563:
   yacc.py:2565:    (55) term -> term div base_call .
   yacc.py:2566:
   yacc.py:2687:    star            reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    div             reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    plus            reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    minus           reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    less            reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    lesseq          reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    equal           reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    semi            reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    cpar            reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    arroba          reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    dot             reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    of              reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    then            reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    loop            reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    comma           reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    in              reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    else            reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    pool            reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    ccur            reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    fi              reduce using rule 55 (term -> term div base_call .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 164
   yacc.py:2563:
   yacc.py:2565:    (58) term -> term div error .
   yacc.py:2565:    (61) base_call -> error . arroba type dot func_call
   yacc.py:2565:    (78) atom -> error . block ccur
   yacc.py:2565:    (90) func_call -> error . opar args cpar
   yacc.py:2565:    (84) block -> . expr semi
   yacc.py:2565:    (85) block -> . expr semi block
   yacc.py:2565:    (86) block -> . error block
   yacc.py:2565:    (87) block -> . error semi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2666:  ! shift/reduce conflict for arroba resolved as shift
   yacc.py:2687:    star            reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    div             reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    plus            reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    minus           reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    less            reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    lesseq          reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    equal           reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    semi            reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    cpar            reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    dot             reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    of              reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    then            reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    loop            reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    comma           reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    in              reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    else            reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    pool            reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    ccur            reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    fi              reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    arroba          shift and go to state 108
   yacc.py:2687:    opar            shift and go to state 110
   yacc.py:2687:    error           shift and go to state 107
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2696:  ! arroba          [ reduce using rule 58 (term -> term div error .) ]
   yacc.py:2700:
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    block                          shift and go to state 109
   yacc.py:2714:    expr                           shift and go to state 111
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 165
   yacc.py:2563:
   yacc.py:2565:    (59) base_call -> factor arroba type . dot func_call
   yacc.py:2566:
   yacc.py:2687:    dot             shift and go to state 193
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 166
   yacc.py:2563:
   yacc.py:2565:    (62) base_call -> factor arroba error . dot func_call
   yacc.py:2566:
   yacc.py:2687:    dot             shift and go to state 194
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 167
   yacc.py:2563:
   yacc.py:2565:    (65) factor -> factor dot func_call .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    dot             reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    star            reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    div             reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    plus            reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    minus           reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    less            reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    lesseq          reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    equal           reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    semi            reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    cpar            reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    of              reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    then            reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    loop            reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    comma           reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    in              reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    else            reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    pool            reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    ccur            reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    fi              reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 168
   yacc.py:2563:
   yacc.py:2565:    (88) func_call -> id . opar args cpar
   yacc.py:2565:    (89) func_call -> id . opar error cpar
   yacc.py:2566:
   yacc.py:2687:    opar            shift and go to state 113
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 169
   yacc.py:2563:
   yacc.py:2565:    (90) func_call -> error . opar args cpar
   yacc.py:2566:
   yacc.py:2687:    opar            shift and go to state 195
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 170
   yacc.py:2563:
   yacc.py:2565:    (64) factor -> opar expr cpar .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    dot             reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    star            reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    div             reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    plus            reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    minus           reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    less            reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    lesseq          reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    equal           reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    semi            reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    cpar            reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    of              reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    then            reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    loop            reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    comma           reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    in              reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    else            reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    pool            reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    ccur            reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    fi              reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 171
   yacc.py:2563:
   yacc.py:2565:    (70) factor -> let let_list in . expr
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 196
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 172
   yacc.py:2563:
   yacc.py:2565:    (37) let_list -> let_assign comma . let_list
   yacc.py:2565:    (36) let_list -> . let_assign
   yacc.py:2565:    (37) let_list -> . let_assign comma let_list
   yacc.py:2565:    (38) let_assign -> . param larrow expr
   yacc.py:2565:    (39) let_assign -> . param
   yacc.py:2565:    (35) param -> . id colon type
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 46
   yacc.py:2689:
   yacc.py:2714:    let_assign                     shift and go to state 129
   yacc.py:2714:    let_list                       shift and go to state 197
   yacc.py:2714:    param                          shift and go to state 130
   yacc.py:2561:
   yacc.py:2562:state 173
   yacc.py:2563:
   yacc.py:2565:    (38) let_assign -> param larrow . expr
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 198
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 174
   yacc.py:2563:
   yacc.py:2565:    (71) factor -> case expr of . cases_list esac
   yacc.py:2565:    (40) cases_list -> . casep semi
   yacc.py:2565:    (41) cases_list -> . casep semi cases_list
   yacc.py:2565:    (42) cases_list -> . error cases_list
   yacc.py:2565:    (43) cases_list -> . error semi
   yacc.py:2565:    (44) casep -> . id colon type rarrow expr
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 201
   yacc.py:2687:    id              shift and go to state 202
   yacc.py:2689:
   yacc.py:2714:    cases_list                     shift and go to state 199
   yacc.py:2714:    casep                          shift and go to state 200
   yacc.py:2561:
   yacc.py:2562:state 175
   yacc.py:2563:
   yacc.py:2565:    (72) factor -> if expr then . expr else expr fi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 203
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 176
   yacc.py:2563:
   yacc.py:2565:    (73) factor -> while expr loop . expr pool
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 204
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 177
   yacc.py:2563:
   yacc.py:2565:    (77) atom -> ocur block ccur .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    dot             reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    star            reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    div             reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    plus            reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    minus           reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    less            reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    lesseq          reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    equal           reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    semi            reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    cpar            reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    of              reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    then            reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    loop            reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    comma           reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    in              reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    else            reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    pool            reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    ccur            reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    fi              reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 178
   yacc.py:2563:
   yacc.py:2565:    (80) atom -> ocur block error .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    dot             reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    star            reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    div             reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    plus            reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    minus           reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    less            reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    lesseq          reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    equal           reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    semi            reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    cpar            reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    of              reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    then            reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    loop            reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    comma           reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    in              reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    else            reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    pool            reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    ccur            reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    fi              reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 179
   yacc.py:2563:
   yacc.py:2565:    (79) atom -> ocur error ccur .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    dot             reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    star            reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    div             reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    plus            reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    minus           reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    less            reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    lesseq          reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    equal           reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    semi            reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    cpar            reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    of              reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    then            reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    loop            reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    comma           reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    in              reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    else            reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    pool            reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    ccur            reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    fi              reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 180
   yacc.py:2563:
   yacc.py:2565:    (26) def_func -> error opar formals cpar colon type ocur . expr ccur
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 205
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 181
   yacc.py:2563:
   yacc.py:2565:    (25) def_func -> id opar formals cpar colon type ocur . expr ccur
   yacc.py:2565:    (29) def_func -> id opar formals cpar colon type ocur . error ccur
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 207
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 206
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 182
   yacc.py:2563:
   yacc.py:2565:    (28) def_func -> id opar formals cpar colon error ocur . expr ccur
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 208
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 183
   yacc.py:2563:
   yacc.py:2565:    (27) def_func -> id opar error cpar colon type ocur . expr ccur
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 209
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 184
   yacc.py:2563:
   yacc.py:2565:    (61) base_call -> error arroba type dot . func_call
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 168
   yacc.py:2687:    error           shift and go to state 169
   yacc.py:2689:
   yacc.py:2714:    func_call                      shift and go to state 210
   yacc.py:2561:
   yacc.py:2562:state 185
   yacc.py:2563:
   yacc.py:2565:    (95) arg_list -> error . arg_list
   yacc.py:2565:    (86) block -> error . block
   yacc.py:2565:    (87) block -> error . semi
   yacc.py:2565:    (61) base_call -> error . arroba type dot func_call
   yacc.py:2565:    (78) atom -> error . block ccur
   yacc.py:2565:    (90) func_call -> error . opar args cpar
   yacc.py:2565:    (93) arg_list -> . expr
   yacc.py:2565:    (94) arg_list -> . expr comma arg_list
   yacc.py:2565:    (95) arg_list -> . error arg_list
   yacc.py:2565:    (84) block -> . expr semi
   yacc.py:2565:    (85) block -> . expr semi block
   yacc.py:2565:    (86) block -> . error block
   yacc.py:2565:    (87) block -> . error semi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    semi            shift and go to state 142
   yacc.py:2687:    arroba          shift and go to state 108
   yacc.py:2687:    opar            shift and go to state 110
   yacc.py:2687:    error           shift and go to state 185
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    arg_list                       shift and go to state 186
   yacc.py:2714:    block                          shift and go to state 141
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    expr                           shift and go to state 187
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 186
   yacc.py:2563:
   yacc.py:2565:    (95) arg_list -> error arg_list .
   yacc.py:2566:
   yacc.py:2687:    cpar            reduce using rule 95 (arg_list -> error arg_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 187
   yacc.py:2563:
   yacc.py:2565:    (93) arg_list -> expr .
   yacc.py:2565:    (94) arg_list -> expr . comma arg_list
   yacc.py:2565:    (84) block -> expr . semi
   yacc.py:2565:    (85) block -> expr . semi block
   yacc.py:2566:
   yacc.py:2687:    cpar            reduce using rule 93 (arg_list -> expr .)
   yacc.py:2687:    comma           shift and go to state 189
   yacc.py:2687:    semi            shift and go to state 151
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 188
   yacc.py:2563:
   yacc.py:2565:    (90) func_call -> error opar args cpar .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    dot             reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    star            reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    div             reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    plus            reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    minus           reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    less            reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    lesseq          reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    equal           reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    semi            reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    cpar            reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    of              reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    then            reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    loop            reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    comma           reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    in              reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    else            reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    pool            reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    ccur            reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    fi              reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 189
   yacc.py:2563:
   yacc.py:2565:    (94) arg_list -> expr comma . arg_list
   yacc.py:2565:    (93) arg_list -> . expr
   yacc.py:2565:    (94) arg_list -> . expr comma arg_list
   yacc.py:2565:    (95) arg_list -> . error arg_list
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 145
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 155
   yacc.py:2714:    arg_list                       shift and go to state 211
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 190
   yacc.py:2563:
   yacc.py:2565:    (85) block -> expr semi block .
   yacc.py:2566:
   yacc.py:2687:    ccur            reduce using rule 85 (block -> expr semi block .)
   yacc.py:2687:    error           reduce using rule 85 (block -> expr semi block .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 191
   yacc.py:2563:
   yacc.py:2565:    (88) func_call -> id opar args cpar .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    dot             reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    star            reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    div             reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    plus            reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    minus           reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    less            reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    lesseq          reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    equal           reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    semi            reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    cpar            reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    of              reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    then            reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    loop            reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    comma           reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    in              reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    else            reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    pool            reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    ccur            reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    fi              reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 192
   yacc.py:2563:
   yacc.py:2565:    (89) func_call -> id opar error cpar .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    dot             reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    star            reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    div             reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    plus            reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    minus           reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    less            reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    lesseq          reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    equal           reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    semi            reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    cpar            reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    of              reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    then            reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    loop            reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    comma           reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    in              reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    else            reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    pool            reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    ccur            reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    fi              reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 193
   yacc.py:2563:
   yacc.py:2565:    (59) base_call -> factor arroba type dot . func_call
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 168
   yacc.py:2687:    error           shift and go to state 169
   yacc.py:2689:
   yacc.py:2714:    func_call                      shift and go to state 212
   yacc.py:2561:
   yacc.py:2562:state 194
   yacc.py:2563:
   yacc.py:2565:    (62) base_call -> factor arroba error dot . func_call
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 168
   yacc.py:2687:    error           shift and go to state 169
   yacc.py:2689:
   yacc.py:2714:    func_call                      shift and go to state 213
   yacc.py:2561:
   yacc.py:2562:state 195
   yacc.py:2563:
   yacc.py:2565:    (90) func_call -> error opar . args cpar
   yacc.py:2565:    (91) args -> . arg_list
   yacc.py:2565:    (92) args -> . arg_list_empty
   yacc.py:2565:    (93) arg_list -> . expr
   yacc.py:2565:    (94) arg_list -> . expr comma arg_list
   yacc.py:2565:    (95) arg_list -> . error arg_list
   yacc.py:2565:    (96) arg_list_empty -> . epsilon
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 145
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    cpar            reduce using rule 2 (epsilon -> .)
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    args                           shift and go to state 146
   yacc.py:2714:    arg_list                       shift and go to state 148
   yacc.py:2714:    arg_list_empty                 shift and go to state 149
   yacc.py:2714:    expr                           shift and go to state 155
   yacc.py:2714:    epsilon                        shift and go to state 150
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 196
   yacc.py:2563:
   yacc.py:2565:    (70) factor -> let let_list in expr .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    dot             reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    star            reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    div             reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    plus            reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    minus           reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    less            reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    lesseq          reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    equal           reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    semi            reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    cpar            reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    of              reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    then            reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    loop            reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    comma           reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    in              reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    else            reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    pool            reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    ccur            reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    fi              reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 197
   yacc.py:2563:
   yacc.py:2565:    (37) let_list -> let_assign comma let_list .
   yacc.py:2566:
   yacc.py:2687:    in              reduce using rule 37 (let_list -> let_assign comma let_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 198
   yacc.py:2563:
   yacc.py:2565:    (38) let_assign -> param larrow expr .
   yacc.py:2566:
   yacc.py:2687:    comma           reduce using rule 38 (let_assign -> param larrow expr .)
   yacc.py:2687:    in              reduce using rule 38 (let_assign -> param larrow expr .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 199
   yacc.py:2563:
   yacc.py:2565:    (71) factor -> case expr of cases_list . esac
   yacc.py:2566:
   yacc.py:2687:    esac            shift and go to state 214
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 200
   yacc.py:2563:
   yacc.py:2565:    (40) cases_list -> casep . semi
   yacc.py:2565:    (41) cases_list -> casep . semi cases_list
   yacc.py:2566:
   yacc.py:2687:    semi            shift and go to state 215
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 201
   yacc.py:2563:
   yacc.py:2565:    (42) cases_list -> error . cases_list
   yacc.py:2565:    (43) cases_list -> error . semi
   yacc.py:2565:    (40) cases_list -> . casep semi
   yacc.py:2565:    (41) cases_list -> . casep semi cases_list
   yacc.py:2565:    (42) cases_list -> . error cases_list
   yacc.py:2565:    (43) cases_list -> . error semi
   yacc.py:2565:    (44) casep -> . id colon type rarrow expr
   yacc.py:2566:
   yacc.py:2687:    semi            shift and go to state 217
   yacc.py:2687:    error           shift and go to state 201
   yacc.py:2687:    id              shift and go to state 202
   yacc.py:2689:
   yacc.py:2714:    cases_list                     shift and go to state 216
   yacc.py:2714:    casep                          shift and go to state 200
   yacc.py:2561:
   yacc.py:2562:state 202
   yacc.py:2563:
   yacc.py:2565:    (44) casep -> id . colon type rarrow expr
   yacc.py:2566:
   yacc.py:2687:    colon           shift and go to state 218
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 203
   yacc.py:2563:
   yacc.py:2565:    (72) factor -> if expr then expr . else expr fi
   yacc.py:2566:
   yacc.py:2687:    else            shift and go to state 219
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 204
   yacc.py:2563:
   yacc.py:2565:    (73) factor -> while expr loop expr . pool
   yacc.py:2566:
   yacc.py:2687:    pool            shift and go to state 220
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 205
   yacc.py:2563:
   yacc.py:2565:    (26) def_func -> error opar formals cpar colon type ocur expr . ccur
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 221
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 206
   yacc.py:2563:
   yacc.py:2565:    (25) def_func -> id opar formals cpar colon type ocur expr . ccur
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 222
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 207
   yacc.py:2563:
   yacc.py:2565:    (29) def_func -> id opar formals cpar colon type ocur error . ccur
   yacc.py:2565:    (61) base_call -> error . arroba type dot func_call
   yacc.py:2565:    (78) atom -> error . block ccur
   yacc.py:2565:    (90) func_call -> error . opar args cpar
   yacc.py:2565:    (84) block -> . expr semi
   yacc.py:2565:    (85) block -> . expr semi block
   yacc.py:2565:    (86) block -> . error block
   yacc.py:2565:    (87) block -> . error semi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 223
   yacc.py:2687:    arroba          shift and go to state 108
   yacc.py:2687:    opar            shift and go to state 110
   yacc.py:2687:    error           shift and go to state 107
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    block                          shift and go to state 109
   yacc.py:2714:    expr                           shift and go to state 111
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 208
   yacc.py:2563:
   yacc.py:2565:    (28) def_func -> id opar formals cpar colon error ocur expr . ccur
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 224
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 209
   yacc.py:2563:
   yacc.py:2565:    (27) def_func -> id opar error cpar colon type ocur expr . ccur
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 225
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 210
   yacc.py:2563:
   yacc.py:2565:    (61) base_call -> error arroba type dot func_call .
   yacc.py:2566:
   yacc.py:2687:    star            reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    div             reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    plus            reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    minus           reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    less            reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    lesseq          reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    equal           reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    semi            reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    cpar            reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    arroba          reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    dot             reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    of              reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    then            reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    loop            reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    comma           reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    in              reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    else            reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    pool            reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    ccur            reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    fi              reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 211
   yacc.py:2563:
   yacc.py:2565:    (94) arg_list -> expr comma arg_list .
   yacc.py:2566:
   yacc.py:2687:    cpar            reduce using rule 94 (arg_list -> expr comma arg_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 212
   yacc.py:2563:
   yacc.py:2565:    (59) base_call -> factor arroba type dot func_call .
   yacc.py:2566:
   yacc.py:2687:    star            reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    div             reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    plus            reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    minus           reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    less            reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    lesseq          reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    equal           reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    semi            reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    cpar            reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    arroba          reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    dot             reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    of              reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    then            reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    loop            reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    comma           reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    in              reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    else            reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    pool            reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    ccur            reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    fi              reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 213
   yacc.py:2563:
   yacc.py:2565:    (62) base_call -> factor arroba error dot func_call .
   yacc.py:2566:
   yacc.py:2687:    star            reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    div             reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    plus            reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    minus           reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    less            reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    lesseq          reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    equal           reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    semi            reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    cpar            reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    arroba          reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    dot             reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    of              reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    then            reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    loop            reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    comma           reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    in              reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    else            reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    pool            reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    ccur            reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    fi              reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 214
   yacc.py:2563:
   yacc.py:2565:    (71) factor -> case expr of cases_list esac .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    dot             reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    star            reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    div             reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    plus            reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    minus           reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    less            reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    lesseq          reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    equal           reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    semi            reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    cpar            reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    of              reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    then            reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    loop            reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    comma           reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    in              reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    else            reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    pool            reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    ccur            reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    fi              reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 215
   yacc.py:2563:
   yacc.py:2565:    (40) cases_list -> casep semi .
   yacc.py:2565:    (41) cases_list -> casep semi . cases_list
   yacc.py:2565:    (40) cases_list -> . casep semi
   yacc.py:2565:    (41) cases_list -> . casep semi cases_list
   yacc.py:2565:    (42) cases_list -> . error cases_list
   yacc.py:2565:    (43) cases_list -> . error semi
   yacc.py:2565:    (44) casep -> . id colon type rarrow expr
   yacc.py:2566:
   yacc.py:2687:    esac            reduce using rule 40 (cases_list -> casep semi .)
   yacc.py:2687:    error           shift and go to state 201
   yacc.py:2687:    id              shift and go to state 202
   yacc.py:2689:
   yacc.py:2714:    casep                          shift and go to state 200
   yacc.py:2714:    cases_list                     shift and go to state 226
   yacc.py:2561:
   yacc.py:2562:state 216
   yacc.py:2563:
   yacc.py:2565:    (42) cases_list -> error cases_list .
   yacc.py:2566:
   yacc.py:2687:    esac            reduce using rule 42 (cases_list -> error cases_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 217
   yacc.py:2563:
   yacc.py:2565:    (43) cases_list -> error semi .
   yacc.py:2566:
   yacc.py:2687:    esac            reduce using rule 43 (cases_list -> error semi .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 218
   yacc.py:2563:
   yacc.py:2565:    (44) casep -> id colon . type rarrow expr
   yacc.py:2566:
   yacc.py:2687:    type            shift and go to state 227
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 219
   yacc.py:2563:
   yacc.py:2565:    (72) factor -> if expr then expr else . expr fi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 228
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 220
   yacc.py:2563:
   yacc.py:2565:    (73) factor -> while expr loop expr pool .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    dot             reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    star            reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    div             reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    plus            reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    minus           reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    less            reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    lesseq          reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    equal           reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    semi            reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    cpar            reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    of              reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    then            reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    loop            reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    comma           reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    in              reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    else            reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    pool            reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    ccur            reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    fi              reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 221
   yacc.py:2563:
   yacc.py:2565:    (26) def_func -> error opar formals cpar colon type ocur expr ccur .
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 26 (def_func -> error opar formals cpar colon type ocur expr ccur .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 222
   yacc.py:2563:
   yacc.py:2565:    (25) def_func -> id opar formals cpar colon type ocur expr ccur .
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 25 (def_func -> id opar formals cpar colon type ocur expr ccur .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 223
   yacc.py:2563:
   yacc.py:2565:    (29) def_func -> id opar formals cpar colon type ocur error ccur .
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 29 (def_func -> id opar formals cpar colon type ocur error ccur .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 224
   yacc.py:2563:
   yacc.py:2565:    (28) def_func -> id opar formals cpar colon error ocur expr ccur .
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 28 (def_func -> id opar formals cpar colon error ocur expr ccur .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 225
   yacc.py:2563:
   yacc.py:2565:    (27) def_func -> id opar error cpar colon type ocur expr ccur .
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 27 (def_func -> id opar error cpar colon type ocur expr ccur .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 226
   yacc.py:2563:
   yacc.py:2565:    (41) cases_list -> casep semi cases_list .
   yacc.py:2566:
   yacc.py:2687:    esac            reduce using rule 41 (cases_list -> casep semi cases_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 227
   yacc.py:2563:
   yacc.py:2565:    (44) casep -> id colon type . rarrow expr
   yacc.py:2566:
   yacc.py:2687:    rarrow          shift and go to state 229
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 228
   yacc.py:2563:
   yacc.py:2565:    (72) factor -> if expr then expr else expr . fi
   yacc.py:2566:
   yacc.py:2687:    fi              shift and go to state 230
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 229
   yacc.py:2563:
   yacc.py:2565:    (44) casep -> id colon type rarrow . expr
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 231
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 230
   yacc.py:2563:
   yacc.py:2565:    (72) factor -> if expr then expr else expr fi .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    dot             reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    star            reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    div             reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    plus            reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    minus           reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    less            reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    lesseq          reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    equal           reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    semi            reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    cpar            reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    of              reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    then            reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    loop            reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    comma           reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    in              reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    else            reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    pool            reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    ccur            reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    fi              reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 231
   yacc.py:2563:
   yacc.py:2565:    (44) casep -> id colon type rarrow expr .
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 44 (casep -> id colon type rarrow expr .)
   yacc.py:2689:
   yacc.py:3447:24 shift/reduce conflicts
   yacc.py:3457:
   yacc.py:3458:Conflicts:
   yacc.py:3459:
   yacc.py:3462:shift/reduce conflict for less in state 73 resolved as shift
   yacc.py:3462:shift/reduce conflict for lesseq in state 73 resolved as shift
   yacc.py:3462:shift/reduce conflict for equal in state 73 resolved as shift
   yacc.py:3462:shift/reduce conflict for plus in state 74 resolved as shift
   yacc.py:3462:shift/reduce conflict for minus in state 74 resolved as shift
   yacc.py:3462:shift/reduce conflict for star in state 75 resolved as shift
   yacc.py:3462:shift/reduce conflict for div in state 75 resolved as shift
   yacc.py:3462:shift/reduce conflict for arroba in state 77 resolved as shift
   yacc.py:3462:shift/reduce conflict for dot in state 77 resolved as shift
   yacc.py:3462:shift/reduce conflict for ccur in state 141 resolved as shift
   yacc.py:3462:shift/reduce conflict for cpar in state 147 resolved as shift
   yacc.py:3462:shift/reduce conflict for error in state 151 resolved as shift
   yacc.py:3462:shift/reduce conflict for plus in state 156 resolved as shift
   yacc.py:3462:shift/reduce conflict for minus in state 156 resolved as shift
   yacc.py:3462:shift/reduce conflict for plus in state 157 resolved as shift
   yacc.py:3462:shift/reduce conflict for minus in state 157 resolved as shift
   yacc.py:3462:shift/reduce conflict for plus in state 158 resolved as shift
   yacc.py:3462:shift/reduce conflict for minus in state 158 resolved as shift
   yacc.py:3462:shift/reduce conflict for star in state 159 resolved as shift
   yacc.py:3462:shift/reduce conflict for div in state 159 resolved as shift
   yacc.py:3462:shift/reduce conflict for star in state 160 resolved as shift
   yacc.py:3462:shift/reduce conflict for div in state 160 resolved as shift
   yacc.py:3462:shift/reduce conflict for arroba in state 162 resolved as shift
   yacc.py:3462:shift/reduce conflict for arroba in state 164 resolved as shift
   yacc.py: 362:PLY: PARSE DEBUG START
   yacc.py: 410:
   yacc.py: 411:State  : 0
   yacc.py: 435:Stack  : . LexToken(class,'class',1,0)
   yacc.py: 445:Action : Shift and goto state 5
   yacc.py: 410:
   yacc.py: 411:State  : 5
   yacc.py: 435:Stack  : class . LexToken(type,'Main',1,6)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 435:Stack  : class type . LexToken(inherits,'inherits',1,11)
   yacc.py: 445:Action : Shift and goto state 11
   yacc.py: 410:
   yacc.py: 411:State  : 11
   yacc.py: 435:Stack  : class type inherits . LexToken(type,'IO',1,20)
   yacc.py: 445:Action : Shift and goto state 20
   yacc.py: 410:
   yacc.py: 411:State  : 20
   yacc.py: 435:Stack  : class type inherits type . LexToken(ocur,'{',1,23)
   yacc.py: 445:Action : Shift and goto state 33
   yacc.py: 410:
   yacc.py: 411:State  : 33
   yacc.py: 435:Stack  : class type inherits type ocur . LexToken(id,'main',3,81)
   yacc.py: 445:Action : Shift and goto state 19
   yacc.py: 410:
   yacc.py: 411:State  : 19
   yacc.py: 435:Stack  : class type inherits type ocur id . LexToken(opar,'(',3,85)
   yacc.py: 445:Action : Shift and goto state 32
   yacc.py: 410:
   yacc.py: 411:State  : 32
   yacc.py: 435:Stack  : class type inherits type ocur id opar . LexToken(cpar,')',3,86)
   yacc.py: 474:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x560028ad00f0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 430:Defaulted state 45: Reduce using 34
   yacc.py: 435:Stack  : class type inherits type ocur id opar epsilon . LexToken(cpar,')',3,86)
   yacc.py: 471:Action : Reduce rule [param_list_empty -> epsilon] with [None] and goto state 43
   yacc.py: 506:Result : <list @ 0x7f2e86ae5808> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 43
   yacc.py: 430:Defaulted state 43: Reduce using 31
   yacc.py: 435:Stack  : class type inherits type ocur id opar param_list_empty . LexToken(cpar,')',3,86)
   yacc.py: 471:Action : Reduce rule [formals -> param_list_empty] with [[]] and goto state 51
   yacc.py: 506:Result : <list @ 0x7f2e86ae5808> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals . LexToken(cpar,')',3,86)
   yacc.py: 445:Action : Shift and goto state 64
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar . LexToken(colon,':',3,87)
   yacc.py: 445:Action : Shift and goto state 100
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon . LexToken(type,'Object',3,89)
   yacc.py: 445:Action : Shift and goto state 138
   yacc.py: 410:
   yacc.py: 411:State  : 138
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type . LexToken(ocur,'{',3,96)
   yacc.py: 445:Action : Shift and goto state 181
   yacc.py: 410:
   yacc.py: 411:State  : 181
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur . LexToken(ocur,'{',4,100)
   yacc.py: 445:Action : Shift and goto state 90
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur . LexToken(id,'out_string',5,105)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur id . LexToken(opar,'(',5,115)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur id opar . LexToken(string,'Enter n to find nth fibonacci number!\n',5,156)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur id opar string . LexToken(cpar,')',5,157)
   yacc.py: 471:Action : Reduce rule [atom -> string] with [<str @ 0x7f2e86beff50>] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7f2e86c5d0f0> (<utils.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur id opar atom . LexToken(cpar,')',5,157)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7f2e86c5d0f0>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7f2e86c5d0f0> (<utils.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur id opar factor . LexToken(cpar,')',5,157)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantStrNode @ 0x7f2e86c5d0f0>] and goto state 76
   yacc.py: 506:Result : <ConstantStrNode @ 0x7f2e86c5d0f0> (<utils.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur id opar base_call . LexToken(cpar,')',5,157)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantStrNode @ 0x7f2e86c5d0f0>] and goto state 75
   yacc.py: 506:Result : <ConstantStrNode @ 0x7f2e86c5d0f0> (<utils.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur id opar term . LexToken(cpar,')',5,157)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantStrNode @ 0x7f2e86c5d0f0>] and goto state 74
   yacc.py: 506:Result : <ConstantStrNode @ 0x7f2e86c5d0f0> (<utils.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur id opar op . LexToken(cpar,')',5,157)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantStrNode @ 0x7f2e86c5d0f0>] and goto state 73
   yacc.py: 506:Result : <ConstantStrNode @ 0x7f2e86c5d0f0> (<utils.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur id opar comp . LexToken(cpar,')',5,157)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantStrNode @ 0x7f2e86c5d0f0>] and goto state 155
   yacc.py: 506:Result : <ConstantStrNode @ 0x7f2e86c5d0f0> (<utils.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur id opar expr . LexToken(cpar,')',5,157)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<ConstantStrNode @ 0x7f2e86c5d0f0>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7f2e86ae57c8> ([<utils.ast.ConstantStrNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur id opar arg_list . LexToken(cpar,')',5,157)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7f2e86ae57c8>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7f2e86ae57c8> ([<utils.ast.ConstantStrNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur id opar args . LexToken(cpar,')',5,157)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur id opar args cpar . LexToken(semi,';',5,158)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['out_string','(',<list @ 0x7f2e86ae57c8>,')'] and goto state 78
   yacc.py: 506:Result : <tuple @ 0x7f2e86aa2c08> ((LexToken(id,'out_string',5,105), [<util ...)
   yacc.py: 410:
   yacc.py: 411:State  : 78
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur func_call . LexToken(semi,';',5,158)
   yacc.py: 471:Action : Reduce rule [factor -> func_call] with [<tuple @ 0x7f2e86aa2c08>] and goto state 77
   yacc.py: 506:Result : <StaticCallNode @ 0x7f2e86bbcb70> (<utils.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur factor . LexToken(semi,';',5,158)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<StaticCallNode @ 0x7f2e86bbcb70>] and goto state 76
   yacc.py: 506:Result : <StaticCallNode @ 0x7f2e86bbcb70> (<utils.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur base_call . LexToken(semi,';',5,158)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<StaticCallNode @ 0x7f2e86bbcb70>] and goto state 75
   yacc.py: 506:Result : <StaticCallNode @ 0x7f2e86bbcb70> (<utils.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur term . LexToken(semi,';',5,158)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<StaticCallNode @ 0x7f2e86bbcb70>] and goto state 74
   yacc.py: 506:Result : <StaticCallNode @ 0x7f2e86bbcb70> (<utils.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur op . LexToken(semi,';',5,158)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<StaticCallNode @ 0x7f2e86bbcb70>] and goto state 73
   yacc.py: 506:Result : <StaticCallNode @ 0x7f2e86bbcb70> (<utils.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur comp . LexToken(semi,';',5,158)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<StaticCallNode @ 0x7f2e86bbcb70>] and goto state 111
   yacc.py: 506:Result : <StaticCallNode @ 0x7f2e86bbcb70> (<utils.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr . LexToken(semi,';',5,158)
   yacc.py: 445:Action : Shift and goto state 151
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi . LexToken(id,'out_int',6,163)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi id . LexToken(opar,'(',6,170)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi id opar . LexToken(id,'fib',6,171)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi id opar id . LexToken(opar,'(',6,174)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi id opar id opar . LexToken(id,'in_int',6,175)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi id opar id opar id . LexToken(opar,'(',6,181)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi id opar id opar id opar . LexToken(cpar,')',6,182)
   yacc.py: 474:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 150
   yacc.py: 548:Result : <NoneType @ 0x560028ad00f0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 150
   yacc.py: 430:Defaulted state 150: Reduce using 96
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi id opar id opar id opar epsilon . LexToken(cpar,')',6,182)
   yacc.py: 471:Action : Reduce rule [arg_list_empty -> epsilon] with [None] and goto state 149
   yacc.py: 506:Result : <list @ 0x7f2e86ae53c8> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 430:Defaulted state 149: Reduce using 92
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi id opar id opar id opar arg_list_empty . LexToken(cpar,')',6,182)
   yacc.py: 471:Action : Reduce rule [args -> arg_list_empty] with [[]] and goto state 153
   yacc.py: 506:Result : <list @ 0x7f2e86ae53c8> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi id opar id opar id opar args . LexToken(cpar,')',6,182)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi id opar id opar id opar args cpar . LexToken(cpar,')',6,183)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['in_int','(',[],')'] and goto state 78
   yacc.py: 506:Result : <tuple @ 0x7f2e86aa2c08> ((LexToken(id,'in_int',6,175), []))
   yacc.py: 410:
   yacc.py: 411:State  : 78
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi id opar id opar func_call . LexToken(cpar,')',6,183)
   yacc.py: 471:Action : Reduce rule [factor -> func_call] with [<tuple @ 0x7f2e86aa2c08>] and goto state 77
   yacc.py: 506:Result : <StaticCallNode @ 0x7f2e86bbcef0> (<utils.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi id opar id opar factor . LexToken(cpar,')',6,183)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<StaticCallNode @ 0x7f2e86bbcef0>] and goto state 76
   yacc.py: 506:Result : <StaticCallNode @ 0x7f2e86bbcef0> (<utils.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi id opar id opar base_call . LexToken(cpar,')',6,183)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<StaticCallNode @ 0x7f2e86bbcef0>] and goto state 75
   yacc.py: 506:Result : <StaticCallNode @ 0x7f2e86bbcef0> (<utils.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi id opar id opar term . LexToken(cpar,')',6,183)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<StaticCallNode @ 0x7f2e86bbcef0>] and goto state 74
   yacc.py: 506:Result : <StaticCallNode @ 0x7f2e86bbcef0> (<utils.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi id opar id opar op . LexToken(cpar,')',6,183)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<StaticCallNode @ 0x7f2e86bbcef0>] and goto state 73
   yacc.py: 506:Result : <StaticCallNode @ 0x7f2e86bbcef0> (<utils.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi id opar id opar comp . LexToken(cpar,')',6,183)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<StaticCallNode @ 0x7f2e86bbcef0>] and goto state 155
   yacc.py: 506:Result : <StaticCallNode @ 0x7f2e86bbcef0> (<utils.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi id opar id opar expr . LexToken(cpar,')',6,183)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<StaticCallNode @ 0x7f2e86bbcef0>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7f2e86ae5348> ([<utils.ast.StaticCallNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi id opar id opar arg_list . LexToken(cpar,')',6,183)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7f2e86ae5348>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7f2e86ae5348> ([<utils.ast.StaticCallNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi id opar id opar args . LexToken(cpar,')',6,183)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi id opar id opar args cpar . LexToken(cpar,')',6,184)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['fib','(',<list @ 0x7f2e86ae5348>,')'] and goto state 78
   yacc.py: 506:Result : <tuple @ 0x7f2e86aa2c08> ((LexToken(id,'fib',6,171), [<utils.ast.S ...)
   yacc.py: 410:
   yacc.py: 411:State  : 78
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi id opar func_call . LexToken(cpar,')',6,184)
   yacc.py: 471:Action : Reduce rule [factor -> func_call] with [<tuple @ 0x7f2e86aa2c08>] and goto state 77
   yacc.py: 506:Result : <StaticCallNode @ 0x7f2e86bbce48> (<utils.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi id opar factor . LexToken(cpar,')',6,184)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<StaticCallNode @ 0x7f2e86bbce48>] and goto state 76
   yacc.py: 506:Result : <StaticCallNode @ 0x7f2e86bbce48> (<utils.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi id opar base_call . LexToken(cpar,')',6,184)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<StaticCallNode @ 0x7f2e86bbce48>] and goto state 75
   yacc.py: 506:Result : <StaticCallNode @ 0x7f2e86bbce48> (<utils.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi id opar term . LexToken(cpar,')',6,184)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<StaticCallNode @ 0x7f2e86bbce48>] and goto state 74
   yacc.py: 506:Result : <StaticCallNode @ 0x7f2e86bbce48> (<utils.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi id opar op . LexToken(cpar,')',6,184)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<StaticCallNode @ 0x7f2e86bbce48>] and goto state 73
   yacc.py: 506:Result : <StaticCallNode @ 0x7f2e86bbce48> (<utils.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi id opar comp . LexToken(cpar,')',6,184)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<StaticCallNode @ 0x7f2e86bbce48>] and goto state 155
   yacc.py: 506:Result : <StaticCallNode @ 0x7f2e86bbce48> (<utils.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi id opar expr . LexToken(cpar,')',6,184)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<StaticCallNode @ 0x7f2e86bbce48>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7f2e86ae5308> ([<utils.ast.StaticCallNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi id opar arg_list . LexToken(cpar,')',6,184)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7f2e86ae5308>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7f2e86ae5308> ([<utils.ast.StaticCallNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi id opar args . LexToken(cpar,')',6,184)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi id opar args cpar . LexToken(semi,';',6,185)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['out_int','(',<list @ 0x7f2e86ae5308>,')'] and goto state 78
   yacc.py: 506:Result : <tuple @ 0x7f2e86aa2c08> ((LexToken(id,'out_int',6,163), [<utils.a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 78
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi func_call . LexToken(semi,';',6,185)
   yacc.py: 471:Action : Reduce rule [factor -> func_call] with [<tuple @ 0x7f2e86aa2c08>] and goto state 77
   yacc.py: 506:Result : <StaticCallNode @ 0x7f2e86bbce10> (<utils.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi factor . LexToken(semi,';',6,185)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<StaticCallNode @ 0x7f2e86bbce10>] and goto state 76
   yacc.py: 506:Result : <StaticCallNode @ 0x7f2e86bbce10> (<utils.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi base_call . LexToken(semi,';',6,185)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<StaticCallNode @ 0x7f2e86bbce10>] and goto state 75
   yacc.py: 506:Result : <StaticCallNode @ 0x7f2e86bbce10> (<utils.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi term . LexToken(semi,';',6,185)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<StaticCallNode @ 0x7f2e86bbce10>] and goto state 74
   yacc.py: 506:Result : <StaticCallNode @ 0x7f2e86bbce10> (<utils.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi op . LexToken(semi,';',6,185)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<StaticCallNode @ 0x7f2e86bbce10>] and goto state 73
   yacc.py: 506:Result : <StaticCallNode @ 0x7f2e86bbce10> (<utils.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi comp . LexToken(semi,';',6,185)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<StaticCallNode @ 0x7f2e86bbce10>] and goto state 111
   yacc.py: 506:Result : <StaticCallNode @ 0x7f2e86bbce10> (<utils.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi expr . LexToken(semi,';',6,185)
   yacc.py: 445:Action : Shift and goto state 151
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi expr semi . LexToken(id,'out_string',7,190)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi expr semi id . LexToken(opar,'(',7,200)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi expr semi id opar . LexToken(string,'\n',7,204)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi expr semi id opar string . LexToken(cpar,')',7,205)
   yacc.py: 471:Action : Reduce rule [atom -> string] with ['\n'] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7f2e86bbcfd0> (<utils.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi expr semi id opar atom . LexToken(cpar,')',7,205)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7f2e86bbcfd0>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7f2e86bbcfd0> (<utils.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi expr semi id opar factor . LexToken(cpar,')',7,205)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantStrNode @ 0x7f2e86bbcfd0>] and goto state 76
   yacc.py: 506:Result : <ConstantStrNode @ 0x7f2e86bbcfd0> (<utils.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi expr semi id opar base_call . LexToken(cpar,')',7,205)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantStrNode @ 0x7f2e86bbcfd0>] and goto state 75
   yacc.py: 506:Result : <ConstantStrNode @ 0x7f2e86bbcfd0> (<utils.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi expr semi id opar term . LexToken(cpar,')',7,205)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantStrNode @ 0x7f2e86bbcfd0>] and goto state 74
   yacc.py: 506:Result : <ConstantStrNode @ 0x7f2e86bbcfd0> (<utils.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi expr semi id opar op . LexToken(cpar,')',7,205)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantStrNode @ 0x7f2e86bbcfd0>] and goto state 73
   yacc.py: 506:Result : <ConstantStrNode @ 0x7f2e86bbcfd0> (<utils.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi expr semi id opar comp . LexToken(cpar,')',7,205)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantStrNode @ 0x7f2e86bbcfd0>] and goto state 155
   yacc.py: 506:Result : <ConstantStrNode @ 0x7f2e86bbcfd0> (<utils.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi expr semi id opar expr . LexToken(cpar,')',7,205)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<ConstantStrNode @ 0x7f2e86bbcfd0>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7f2e86ae5788> ([<utils.ast.ConstantStrNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi expr semi id opar arg_list . LexToken(cpar,')',7,205)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7f2e86ae5788>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7f2e86ae5788> ([<utils.ast.ConstantStrNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi expr semi id opar args . LexToken(cpar,')',7,205)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi expr semi id opar args cpar . LexToken(semi,';',7,206)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['out_string','(',<list @ 0x7f2e86ae5788>,')'] and goto state 78
   yacc.py: 506:Result : <tuple @ 0x7f2e86aa2e08> ((LexToken(id,'out_string',7,190), [<util ...)
   yacc.py: 410:
   yacc.py: 411:State  : 78
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi expr semi func_call . LexToken(semi,';',7,206)
   yacc.py: 471:Action : Reduce rule [factor -> func_call] with [<tuple @ 0x7f2e86aa2e08>] and goto state 77
   yacc.py: 506:Result : <StaticCallNode @ 0x7f2e86bbcf28> (<utils.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi expr semi factor . LexToken(semi,';',7,206)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<StaticCallNode @ 0x7f2e86bbcf28>] and goto state 76
   yacc.py: 506:Result : <StaticCallNode @ 0x7f2e86bbcf28> (<utils.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi expr semi base_call . LexToken(semi,';',7,206)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<StaticCallNode @ 0x7f2e86bbcf28>] and goto state 75
   yacc.py: 506:Result : <StaticCallNode @ 0x7f2e86bbcf28> (<utils.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi expr semi term . LexToken(semi,';',7,206)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<StaticCallNode @ 0x7f2e86bbcf28>] and goto state 74
   yacc.py: 506:Result : <StaticCallNode @ 0x7f2e86bbcf28> (<utils.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi expr semi op . LexToken(semi,';',7,206)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<StaticCallNode @ 0x7f2e86bbcf28>] and goto state 73
   yacc.py: 506:Result : <StaticCallNode @ 0x7f2e86bbcf28> (<utils.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi expr semi comp . LexToken(semi,';',7,206)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<StaticCallNode @ 0x7f2e86bbcf28>] and goto state 111
   yacc.py: 506:Result : <StaticCallNode @ 0x7f2e86bbcf28> (<utils.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi expr semi expr . LexToken(semi,';',7,206)
   yacc.py: 445:Action : Shift and goto state 151
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi expr semi expr semi . LexToken(ccur,'}',8,210)
   yacc.py: 471:Action : Reduce rule [block -> expr semi] with [<StaticCallNode @ 0x7f2e86bbcf28>,';'] and goto state 190
   yacc.py: 506:Result : <list @ 0x7f2e86ae5288> ([<utils.ast.StaticCallNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 190
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi expr semi block . LexToken(ccur,'}',8,210)
   yacc.py: 471:Action : Reduce rule [block -> expr semi block] with [<StaticCallNode @ 0x7f2e86bbce10>,';',<list @ 0x7f2e86ae5288>] and goto state 190
   yacc.py: 506:Result : <list @ 0x7f2e86ae3108> ([<utils.ast.StaticCallNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 190
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur expr semi block . LexToken(ccur,'}',8,210)
   yacc.py: 471:Action : Reduce rule [block -> expr semi block] with [<StaticCallNode @ 0x7f2e86bbcb70>,';',<list @ 0x7f2e86ae3108>] and goto state 135
   yacc.py: 506:Result : <list @ 0x7f2e86ae5288> ([<utils.ast.StaticCallNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 135
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur block . LexToken(ccur,'}',8,210)
   yacc.py: 445:Action : Shift and goto state 177
   yacc.py: 410:
   yacc.py: 411:State  : 177
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur ocur block ccur . LexToken(ccur,'}',9,213)
   yacc.py: 471:Action : Reduce rule [atom -> ocur block ccur] with ['{',<list @ 0x7f2e86ae5288>,'}'] and goto state 79
   yacc.py: 506:Result : <BlockNode @ 0x7f2e86c5d048> (<utils.ast.BlockNode object at 0x7f2e86c ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur atom . LexToken(ccur,'}',9,213)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<BlockNode @ 0x7f2e86c5d048>] and goto state 77
   yacc.py: 506:Result : <BlockNode @ 0x7f2e86c5d048> (<utils.ast.BlockNode object at 0x7f2e86c ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur factor . LexToken(ccur,'}',9,213)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<BlockNode @ 0x7f2e86c5d048>] and goto state 76
   yacc.py: 506:Result : <BlockNode @ 0x7f2e86c5d048> (<utils.ast.BlockNode object at 0x7f2e86c ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur base_call . LexToken(ccur,'}',9,213)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<BlockNode @ 0x7f2e86c5d048>] and goto state 75
   yacc.py: 506:Result : <BlockNode @ 0x7f2e86c5d048> (<utils.ast.BlockNode object at 0x7f2e86c ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur term . LexToken(ccur,'}',9,213)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<BlockNode @ 0x7f2e86c5d048>] and goto state 74
   yacc.py: 506:Result : <BlockNode @ 0x7f2e86c5d048> (<utils.ast.BlockNode object at 0x7f2e86c ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur op . LexToken(ccur,'}',9,213)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<BlockNode @ 0x7f2e86c5d048>] and goto state 73
   yacc.py: 506:Result : <BlockNode @ 0x7f2e86c5d048> (<utils.ast.BlockNode object at 0x7f2e86c ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur comp . LexToken(ccur,'}',9,213)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<BlockNode @ 0x7f2e86c5d048>] and goto state 206
   yacc.py: 506:Result : <BlockNode @ 0x7f2e86c5d048> (<utils.ast.BlockNode object at 0x7f2e86c ...)
   yacc.py: 410:
   yacc.py: 411:State  : 206
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur expr . LexToken(ccur,'}',9,213)
   yacc.py: 445:Action : Shift and goto state 222
   yacc.py: 410:
   yacc.py: 411:State  : 222
   yacc.py: 430:Defaulted state 222: Reduce using 25
   yacc.py: 435:Stack  : class type inherits type ocur id opar formals cpar colon type ocur expr ccur . None
   yacc.py: 471:Action : Reduce rule [def_func -> id opar formals cpar colon type ocur expr ccur] with ['main','(',[],')',':','Object','{',<BlockNode @ 0x7f2e86c5d048>,'}'] and goto state 18
   yacc.py: 506:Result : <FuncDeclarationNode @ 0x7f2e86bbccc0> (<utils.ast.FuncDeclarationNode object at ...)
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 435:Stack  : class type inherits type ocur def_func . LexToken(semi,';',9,214)
   yacc.py: 445:Action : Shift and goto state 30
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi . LexToken(id,'fib',11,218)
   yacc.py: 445:Action : Shift and goto state 19
   yacc.py: 410:
   yacc.py: 411:State  : 19
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id . LexToken(opar,'(',11,221)
   yacc.py: 445:Action : Shift and goto state 32
   yacc.py: 410:
   yacc.py: 411:State  : 32
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar . LexToken(id,'i',11,222)
   yacc.py: 445:Action : Shift and goto state 46
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar id . LexToken(colon,':',11,224)
   yacc.py: 445:Action : Shift and goto state 61
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar id colon . LexToken(type,'Int',11,226)
   yacc.py: 445:Action : Shift and goto state 96
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar id colon type . LexToken(cpar,')',11,229)
   yacc.py: 471:Action : Reduce rule [param -> id colon type] with ['i',':','Int'] and goto state 44
   yacc.py: 506:Result : <tuple @ 0x7f2e86aa2d48> ((LexToken(id,'i',11,222), LexToken(type, ...)
   yacc.py: 410:
   yacc.py: 411:State  : 44
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar param . LexToken(cpar,')',11,229)
   yacc.py: 471:Action : Reduce rule [param_list -> param] with [<tuple @ 0x7f2e86aa2d48>] and goto state 42
   yacc.py: 506:Result : <list @ 0x7f2e86ae52c8> ([(LexToken(id,'i',11,222), LexToken(type ...)
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 430:Defaulted state 42: Reduce using 30
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar param_list . LexToken(cpar,')',11,229)
   yacc.py: 471:Action : Reduce rule [formals -> param_list] with [<list @ 0x7f2e86ae52c8>] and goto state 51
   yacc.py: 506:Result : <list @ 0x7f2e86ae52c8> ([(LexToken(id,'i',11,222), LexToken(type ...)
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals . LexToken(cpar,')',11,229)
   yacc.py: 445:Action : Shift and goto state 64
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar . LexToken(colon,':',11,231)
   yacc.py: 445:Action : Shift and goto state 100
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon . LexToken(type,'Int',11,233)
   yacc.py: 445:Action : Shift and goto state 138
   yacc.py: 410:
   yacc.py: 411:State  : 138
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type . LexToken(ocur,'{',11,237)
   yacc.py: 445:Action : Shift and goto state 181
   yacc.py: 410:
   yacc.py: 411:State  : 181
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur . LexToken(let,'let',12,297)
   yacc.py: 445:Action : Shift and goto state 84
   yacc.py: 410:
   yacc.py: 411:State  : 84
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let . LexToken(id,'a',12,301)
   yacc.py: 445:Action : Shift and goto state 46
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let id . LexToken(colon,':',12,303)
   yacc.py: 445:Action : Shift and goto state 61
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let id colon . LexToken(type,'Int',12,305)
   yacc.py: 445:Action : Shift and goto state 96
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let id colon type . LexToken(larrow,'<-',12,309)
   yacc.py: 471:Action : Reduce rule [param -> id colon type] with ['a',':','Int'] and goto state 130
   yacc.py: 506:Result : <tuple @ 0x7f2e86aa2d08> ((LexToken(id,'a',12,301), LexToken(type, ...)
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let param . LexToken(larrow,'<-',12,309)
   yacc.py: 445:Action : Shift and goto state 173
   yacc.py: 410:
   yacc.py: 411:State  : 173
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let param larrow . LexToken(num,1.0,12,312)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let param larrow num . LexToken(comma,',',12,313)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [1.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7f2e86ad9048> (<utils.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let param larrow atom . LexToken(comma,',',12,313)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7f2e86ad9048>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7f2e86ad9048> (<utils.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let param larrow factor . LexToken(comma,',',12,313)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7f2e86ad9048>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7f2e86ad9048> (<utils.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let param larrow base_call . LexToken(comma,',',12,313)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7f2e86ad9048>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7f2e86ad9048> (<utils.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let param larrow term . LexToken(comma,',',12,313)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7f2e86ad9048>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7f2e86ad9048> (<utils.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let param larrow op . LexToken(comma,',',12,313)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantNumNode @ 0x7f2e86ad9048>] and goto state 73
   yacc.py: 506:Result : <ConstantNumNode @ 0x7f2e86ad9048> (<utils.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let param larrow comp . LexToken(comma,',',12,313)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantNumNode @ 0x7f2e86ad9048>] and goto state 198
   yacc.py: 506:Result : <ConstantNumNode @ 0x7f2e86ad9048> (<utils.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let param larrow expr . LexToken(comma,',',12,313)
   yacc.py: 471:Action : Reduce rule [let_assign -> param larrow expr] with [<tuple @ 0x7f2e86aa2d08>,'<-',<ConstantNumNode @ 0x7f2e86ad9048>] and goto state 129
   yacc.py: 506:Result : <VarDeclarationNode @ 0x7f2e86ad9320> (<utils.ast.VarDeclarationNode object at  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_assign . LexToken(comma,',',12,313)
   yacc.py: 445:Action : Shift and goto state 172
   yacc.py: 410:
   yacc.py: 411:State  : 172
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_assign comma . LexToken(id,'b',13,320)
   yacc.py: 445:Action : Shift and goto state 46
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_assign comma id . LexToken(colon,':',13,322)
   yacc.py: 445:Action : Shift and goto state 61
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_assign comma id colon . LexToken(type,'Int',13,324)
   yacc.py: 445:Action : Shift and goto state 96
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_assign comma id colon type . LexToken(larrow,'<-',13,328)
   yacc.py: 471:Action : Reduce rule [param -> id colon type] with ['b',':','Int'] and goto state 130
   yacc.py: 506:Result : <tuple @ 0x7f2e86aa2d08> ((LexToken(id,'b',13,320), LexToken(type, ...)
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_assign comma param . LexToken(larrow,'<-',13,328)
   yacc.py: 445:Action : Shift and goto state 173
   yacc.py: 410:
   yacc.py: 411:State  : 173
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_assign comma param larrow . LexToken(num,0.0,13,331)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_assign comma param larrow num . LexToken(comma,',',13,332)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [0.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7f2e86ad92e8> (<utils.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_assign comma param larrow atom . LexToken(comma,',',13,332)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7f2e86ad92e8>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7f2e86ad92e8> (<utils.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_assign comma param larrow factor . LexToken(comma,',',13,332)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7f2e86ad92e8>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7f2e86ad92e8> (<utils.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_assign comma param larrow base_call . LexToken(comma,',',13,332)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7f2e86ad92e8>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7f2e86ad92e8> (<utils.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_assign comma param larrow term . LexToken(comma,',',13,332)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7f2e86ad92e8>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7f2e86ad92e8> (<utils.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_assign comma param larrow op . LexToken(comma,',',13,332)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantNumNode @ 0x7f2e86ad92e8>] and goto state 73
   yacc.py: 506:Result : <ConstantNumNode @ 0x7f2e86ad92e8> (<utils.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_assign comma param larrow comp . LexToken(comma,',',13,332)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantNumNode @ 0x7f2e86ad92e8>] and goto state 198
   yacc.py: 506:Result : <ConstantNumNode @ 0x7f2e86ad92e8> (<utils.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_assign comma param larrow expr . LexToken(comma,',',13,332)
   yacc.py: 471:Action : Reduce rule [let_assign -> param larrow expr] with [<tuple @ 0x7f2e86aa2d08>,'<-',<ConstantNumNode @ 0x7f2e86ad92e8>] and goto state 129
   yacc.py: 506:Result : <VarDeclarationNode @ 0x7f2e86c5d208> (<utils.ast.VarDeclarationNode object at  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_assign comma let_assign . LexToken(comma,',',13,332)
   yacc.py: 445:Action : Shift and goto state 172
   yacc.py: 410:
   yacc.py: 411:State  : 172
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_assign comma let_assign comma . LexToken(id,'c',14,339)
   yacc.py: 445:Action : Shift and goto state 46
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_assign comma let_assign comma id . LexToken(colon,':',14,341)
   yacc.py: 445:Action : Shift and goto state 61
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_assign comma let_assign comma id colon . LexToken(type,'Int',14,343)
   yacc.py: 445:Action : Shift and goto state 96
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_assign comma let_assign comma id colon type . LexToken(larrow,'<-',14,347)
   yacc.py: 471:Action : Reduce rule [param -> id colon type] with ['c',':','Int'] and goto state 130
   yacc.py: 506:Result : <tuple @ 0x7f2e86aa2d08> ((LexToken(id,'c',14,339), LexToken(type, ...)
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_assign comma let_assign comma param . LexToken(larrow,'<-',14,347)
   yacc.py: 445:Action : Shift and goto state 173
   yacc.py: 410:
   yacc.py: 411:State  : 173
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_assign comma let_assign comma param larrow . LexToken(num,0.0,14,350)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_assign comma let_assign comma param larrow num . LexToken(in,'in',15,355)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [0.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7f2e86ad9198> (<utils.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_assign comma let_assign comma param larrow atom . LexToken(in,'in',15,355)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7f2e86ad9198>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7f2e86ad9198> (<utils.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_assign comma let_assign comma param larrow factor . LexToken(in,'in',15,355)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7f2e86ad9198>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7f2e86ad9198> (<utils.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_assign comma let_assign comma param larrow base_call . LexToken(in,'in',15,355)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7f2e86ad9198>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7f2e86ad9198> (<utils.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_assign comma let_assign comma param larrow term . LexToken(in,'in',15,355)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7f2e86ad9198>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7f2e86ad9198> (<utils.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_assign comma let_assign comma param larrow op . LexToken(in,'in',15,355)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantNumNode @ 0x7f2e86ad9198>] and goto state 73
   yacc.py: 506:Result : <ConstantNumNode @ 0x7f2e86ad9198> (<utils.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_assign comma let_assign comma param larrow comp . LexToken(in,'in',15,355)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantNumNode @ 0x7f2e86ad9198>] and goto state 198
   yacc.py: 506:Result : <ConstantNumNode @ 0x7f2e86ad9198> (<utils.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_assign comma let_assign comma param larrow expr . LexToken(in,'in',15,355)
   yacc.py: 471:Action : Reduce rule [let_assign -> param larrow expr] with [<tuple @ 0x7f2e86aa2d08>,'<-',<ConstantNumNode @ 0x7f2e86ad9198>] and goto state 129
   yacc.py: 506:Result : <VarDeclarationNode @ 0x7f2e86ad9358> (<utils.ast.VarDeclarationNode object at  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_assign comma let_assign comma let_assign . LexToken(in,'in',15,355)
   yacc.py: 471:Action : Reduce rule [let_list -> let_assign] with [<VarDeclarationNode @ 0x7f2e86ad9358>] and goto state 197
   yacc.py: 506:Result : <list @ 0x7f2e86ae3108> ([<utils.ast.VarDeclarationNode object at ...)
   yacc.py: 410:
   yacc.py: 411:State  : 197
   yacc.py: 430:Defaulted state 197: Reduce using 37
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_assign comma let_assign comma let_list . LexToken(in,'in',15,355)
   yacc.py: 471:Action : Reduce rule [let_list -> let_assign comma let_list] with [<VarDeclarationNode @ 0x7f2e86c5d208>,',',<list @ 0x7f2e86ae3108>] and goto state 197
   yacc.py: 506:Result : <list @ 0x7f2e86ae2fc8> ([<utils.ast.VarDeclarationNode object at ...)
   yacc.py: 410:
   yacc.py: 411:State  : 197
   yacc.py: 430:Defaulted state 197: Reduce using 37
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_assign comma let_list . LexToken(in,'in',15,355)
   yacc.py: 471:Action : Reduce rule [let_list -> let_assign comma let_list] with [<VarDeclarationNode @ 0x7f2e86ad9320>,',',<list @ 0x7f2e86ae2fc8>] and goto state 128
   yacc.py: 506:Result : <list @ 0x7f2e86ae3108> ([<utils.ast.VarDeclarationNode object at ...)
   yacc.py: 410:
   yacc.py: 411:State  : 128
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list . LexToken(in,'in',15,355)
   yacc.py: 445:Action : Shift and goto state 171
   yacc.py: 410:
   yacc.py: 411:State  : 171
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in . LexToken(ocur,'{',16,361)
   yacc.py: 445:Action : Shift and goto state 90
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur . LexToken(while,'while',17,366)
   yacc.py: 445:Action : Shift and goto state 87
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while . LexToken(opar,'(',17,372)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while opar . LexToken(not,'not',17,373)
   yacc.py: 445:Action : Shift and goto state 81
   yacc.py: 410:
   yacc.py: 411:State  : 81
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while opar not . LexToken(opar,'(',17,377)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while opar not opar . LexToken(id,'i',17,378)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while opar not opar id . LexToken(equal,'=',17,380)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['i'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7f2e86bbcf98> (<utils.ast.VariableNode object at 0x7f2e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while opar not opar atom . LexToken(equal,'=',17,380)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7f2e86bbcf98>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7f2e86bbcf98> (<utils.ast.VariableNode object at 0x7f2e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while opar not opar factor . LexToken(equal,'=',17,380)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7f2e86bbcf98>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7f2e86bbcf98> (<utils.ast.VariableNode object at 0x7f2e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while opar not opar base_call . LexToken(equal,'=',17,380)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7f2e86bbcf98>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7f2e86bbcf98> (<utils.ast.VariableNode object at 0x7f2e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while opar not opar term . LexToken(equal,'=',17,380)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7f2e86bbcf98>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7f2e86bbcf98> (<utils.ast.VariableNode object at 0x7f2e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while opar not opar op . LexToken(equal,'=',17,380)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<VariableNode @ 0x7f2e86bbcf98>] and goto state 73
   yacc.py: 506:Result : <VariableNode @ 0x7f2e86bbcf98> (<utils.ast.VariableNode object at 0x7f2e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while opar not opar comp . LexToken(equal,'=',17,380)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while opar not opar comp equal . LexToken(num,0.0,17,382)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while opar not opar comp equal num . LexToken(cpar,')',17,383)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [0.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7f2e86ad92b0> (<utils.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while opar not opar comp equal atom . LexToken(cpar,')',17,383)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7f2e86ad92b0>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7f2e86ad92b0> (<utils.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while opar not opar comp equal factor . LexToken(cpar,')',17,383)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7f2e86ad92b0>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7f2e86ad92b0> (<utils.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while opar not opar comp equal base_call . LexToken(cpar,')',17,383)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7f2e86ad92b0>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7f2e86ad92b0> (<utils.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while opar not opar comp equal term . LexToken(cpar,')',17,383)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7f2e86ad92b0>] and goto state 158
   yacc.py: 506:Result : <ConstantNumNode @ 0x7f2e86ad92b0> (<utils.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while opar not opar comp equal op . LexToken(cpar,')',17,383)
   yacc.py: 471:Action : Reduce rule [comp -> comp equal op] with [<VariableNode @ 0x7f2e86bbcf98>,'=',<ConstantNumNode @ 0x7f2e86ad92b0>] and goto state 73
   yacc.py: 506:Result : <EqualNode @ 0x7f2e86c5d160> (<utils.ast.EqualNode object at 0x7f2e86c ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while opar not opar comp . LexToken(cpar,')',17,383)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<EqualNode @ 0x7f2e86c5d160>] and goto state 123
   yacc.py: 506:Result : <EqualNode @ 0x7f2e86c5d160> (<utils.ast.EqualNode object at 0x7f2e86c ...)
   yacc.py: 410:
   yacc.py: 411:State  : 123
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while opar not opar expr . LexToken(cpar,')',17,383)
   yacc.py: 445:Action : Shift and goto state 170
   yacc.py: 410:
   yacc.py: 411:State  : 170
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while opar not opar expr cpar . LexToken(cpar,')',17,384)
   yacc.py: 471:Action : Reduce rule [factor -> opar expr cpar] with ['(',<EqualNode @ 0x7f2e86c5d160>,')'] and goto state 77
   yacc.py: 506:Result : <EqualNode @ 0x7f2e86c5d160> (<utils.ast.EqualNode object at 0x7f2e86c ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while opar not factor . LexToken(cpar,')',17,384)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<EqualNode @ 0x7f2e86c5d160>] and goto state 76
   yacc.py: 506:Result : <EqualNode @ 0x7f2e86c5d160> (<utils.ast.EqualNode object at 0x7f2e86c ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while opar not base_call . LexToken(cpar,')',17,384)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<EqualNode @ 0x7f2e86c5d160>] and goto state 75
   yacc.py: 506:Result : <EqualNode @ 0x7f2e86c5d160> (<utils.ast.EqualNode object at 0x7f2e86c ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while opar not term . LexToken(cpar,')',17,384)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<EqualNode @ 0x7f2e86c5d160>] and goto state 74
   yacc.py: 506:Result : <EqualNode @ 0x7f2e86c5d160> (<utils.ast.EqualNode object at 0x7f2e86c ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while opar not op . LexToken(cpar,')',17,384)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<EqualNode @ 0x7f2e86c5d160>] and goto state 73
   yacc.py: 506:Result : <EqualNode @ 0x7f2e86c5d160> (<utils.ast.EqualNode object at 0x7f2e86c ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while opar not comp . LexToken(cpar,')',17,384)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<EqualNode @ 0x7f2e86c5d160>] and goto state 124
   yacc.py: 506:Result : <EqualNode @ 0x7f2e86c5d160> (<utils.ast.EqualNode object at 0x7f2e86c ...)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while opar not expr . LexToken(cpar,')',17,384)
   yacc.py: 471:Action : Reduce rule [factor -> not expr] with ['not',<EqualNode @ 0x7f2e86c5d160>] and goto state 77
   yacc.py: 506:Result : <NotNode @ 0x7f2e86ad9438> (<utils.ast.NotNode object at 0x7f2e86ad9 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while opar factor . LexToken(cpar,')',17,384)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<NotNode @ 0x7f2e86ad9438>] and goto state 76
   yacc.py: 506:Result : <NotNode @ 0x7f2e86ad9438> (<utils.ast.NotNode object at 0x7f2e86ad9 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while opar base_call . LexToken(cpar,')',17,384)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<NotNode @ 0x7f2e86ad9438>] and goto state 75
   yacc.py: 506:Result : <NotNode @ 0x7f2e86ad9438> (<utils.ast.NotNode object at 0x7f2e86ad9 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while opar term . LexToken(cpar,')',17,384)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<NotNode @ 0x7f2e86ad9438>] and goto state 74
   yacc.py: 506:Result : <NotNode @ 0x7f2e86ad9438> (<utils.ast.NotNode object at 0x7f2e86ad9 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while opar op . LexToken(cpar,')',17,384)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<NotNode @ 0x7f2e86ad9438>] and goto state 73
   yacc.py: 506:Result : <NotNode @ 0x7f2e86ad9438> (<utils.ast.NotNode object at 0x7f2e86ad9 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while opar comp . LexToken(cpar,')',17,384)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<NotNode @ 0x7f2e86ad9438>] and goto state 123
   yacc.py: 506:Result : <NotNode @ 0x7f2e86ad9438> (<utils.ast.NotNode object at 0x7f2e86ad9 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 123
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while opar expr . LexToken(cpar,')',17,384)
   yacc.py: 445:Action : Shift and goto state 170
   yacc.py: 410:
   yacc.py: 411:State  : 170
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while opar expr cpar . LexToken(loop,'loop',17,386)
   yacc.py: 471:Action : Reduce rule [factor -> opar expr cpar] with ['(',<NotNode @ 0x7f2e86ad9438>,')'] and goto state 77
   yacc.py: 506:Result : <NotNode @ 0x7f2e86ad9438> (<utils.ast.NotNode object at 0x7f2e86ad9 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while factor . LexToken(loop,'loop',17,386)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<NotNode @ 0x7f2e86ad9438>] and goto state 76
   yacc.py: 506:Result : <NotNode @ 0x7f2e86ad9438> (<utils.ast.NotNode object at 0x7f2e86ad9 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while base_call . LexToken(loop,'loop',17,386)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<NotNode @ 0x7f2e86ad9438>] and goto state 75
   yacc.py: 506:Result : <NotNode @ 0x7f2e86ad9438> (<utils.ast.NotNode object at 0x7f2e86ad9 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while term . LexToken(loop,'loop',17,386)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<NotNode @ 0x7f2e86ad9438>] and goto state 74
   yacc.py: 506:Result : <NotNode @ 0x7f2e86ad9438> (<utils.ast.NotNode object at 0x7f2e86ad9 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while op . LexToken(loop,'loop',17,386)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<NotNode @ 0x7f2e86ad9438>] and goto state 73
   yacc.py: 506:Result : <NotNode @ 0x7f2e86ad9438> (<utils.ast.NotNode object at 0x7f2e86ad9 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while comp . LexToken(loop,'loop',17,386)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<NotNode @ 0x7f2e86ad9438>] and goto state 133
   yacc.py: 506:Result : <NotNode @ 0x7f2e86ad9438> (<utils.ast.NotNode object at 0x7f2e86ad9 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr . LexToken(loop,'loop',17,386)
   yacc.py: 445:Action : Shift and goto state 176
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop . LexToken(ocur,'{',18,421)
   yacc.py: 445:Action : Shift and goto state 90
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur . LexToken(id,'c',19,427)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur id . LexToken(larrow,'<-',19,429)
   yacc.py: 445:Action : Shift and goto state 112
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur id larrow . LexToken(id,'a',19,432)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur id larrow id . LexToken(plus,'+',19,434)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['a'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7f2e86ad9278> (<utils.ast.VariableNode object at 0x7f2e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur id larrow atom . LexToken(plus,'+',19,434)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7f2e86ad9278>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7f2e86ad9278> (<utils.ast.VariableNode object at 0x7f2e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur id larrow factor . LexToken(plus,'+',19,434)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7f2e86ad9278>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7f2e86ad9278> (<utils.ast.VariableNode object at 0x7f2e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur id larrow base_call . LexToken(plus,'+',19,434)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7f2e86ad9278>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7f2e86ad9278> (<utils.ast.VariableNode object at 0x7f2e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur id larrow term . LexToken(plus,'+',19,434)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7f2e86ad9278>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7f2e86ad9278> (<utils.ast.VariableNode object at 0x7f2e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur id larrow op . LexToken(plus,'+',19,434)
   yacc.py: 445:Action : Shift and goto state 117
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur id larrow op plus . LexToken(id,'b',19,436)
   yacc.py: 445:Action : Shift and goto state 126
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur id larrow op plus id . LexToken(semi,';',19,437)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['b'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7f2e86ad95c0> (<utils.ast.VariableNode object at 0x7f2e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur id larrow op plus atom . LexToken(semi,';',19,437)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7f2e86ad95c0>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7f2e86ad95c0> (<utils.ast.VariableNode object at 0x7f2e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur id larrow op plus factor . LexToken(semi,';',19,437)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7f2e86ad95c0>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7f2e86ad95c0> (<utils.ast.VariableNode object at 0x7f2e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur id larrow op plus base_call . LexToken(semi,';',19,437)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7f2e86ad95c0>] and goto state 159
   yacc.py: 506:Result : <VariableNode @ 0x7f2e86ad95c0> (<utils.ast.VariableNode object at 0x7f2e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur id larrow op plus term . LexToken(semi,';',19,437)
   yacc.py: 471:Action : Reduce rule [op -> op plus term] with [<VariableNode @ 0x7f2e86ad9278>,'+',<VariableNode @ 0x7f2e86ad95c0>] and goto state 74
   yacc.py: 506:Result : <PlusNode @ 0x7f2e86ad97f0> (<utils.ast.PlusNode object at 0x7f2e86ad ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur id larrow op . LexToken(semi,';',19,437)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<PlusNode @ 0x7f2e86ad97f0>] and goto state 73
   yacc.py: 506:Result : <PlusNode @ 0x7f2e86ad97f0> (<utils.ast.PlusNode object at 0x7f2e86ad ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur id larrow comp . LexToken(semi,';',19,437)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<PlusNode @ 0x7f2e86ad97f0>] and goto state 152
   yacc.py: 506:Result : <PlusNode @ 0x7f2e86ad97f0> (<utils.ast.PlusNode object at 0x7f2e86ad ...)
   yacc.py: 410:
   yacc.py: 411:State  : 152
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur id larrow expr . LexToken(semi,';',19,437)
   yacc.py: 471:Action : Reduce rule [expr -> id larrow expr] with ['c','<-',<PlusNode @ 0x7f2e86ad97f0>] and goto state 111
   yacc.py: 506:Result : <AssignNode @ 0x7f2e86ad9860> (<utils.ast.AssignNode object at 0x7f2e86 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr . LexToken(semi,';',19,437)
   yacc.py: 445:Action : Shift and goto state 151
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi . LexToken(id,'i',20,443)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi id . LexToken(larrow,'<-',20,445)
   yacc.py: 445:Action : Shift and goto state 112
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi id larrow . LexToken(id,'c',20,448)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi id larrow id . LexToken(minus,'-',20,450)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['c'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7f2e86ad9630> (<utils.ast.VariableNode object at 0x7f2e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi id larrow atom . LexToken(minus,'-',20,450)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7f2e86ad9630>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7f2e86ad9630> (<utils.ast.VariableNode object at 0x7f2e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi id larrow factor . LexToken(minus,'-',20,450)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7f2e86ad9630>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7f2e86ad9630> (<utils.ast.VariableNode object at 0x7f2e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi id larrow base_call . LexToken(minus,'-',20,450)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7f2e86ad9630>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7f2e86ad9630> (<utils.ast.VariableNode object at 0x7f2e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi id larrow term . LexToken(minus,'-',20,450)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7f2e86ad9630>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7f2e86ad9630> (<utils.ast.VariableNode object at 0x7f2e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi id larrow op . LexToken(minus,'-',20,450)
   yacc.py: 445:Action : Shift and goto state 118
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi id larrow op minus . LexToken(num,1.0,20,452)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi id larrow op minus num . LexToken(semi,';',20,453)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [1.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7f2e86ad9898> (<utils.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi id larrow op minus atom . LexToken(semi,';',20,453)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7f2e86ad9898>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7f2e86ad9898> (<utils.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi id larrow op minus factor . LexToken(semi,';',20,453)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7f2e86ad9898>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7f2e86ad9898> (<utils.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi id larrow op minus base_call . LexToken(semi,';',20,453)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7f2e86ad9898>] and goto state 160
   yacc.py: 506:Result : <ConstantNumNode @ 0x7f2e86ad9898> (<utils.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 160
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi id larrow op minus term . LexToken(semi,';',20,453)
   yacc.py: 471:Action : Reduce rule [op -> op minus term] with [<VariableNode @ 0x7f2e86ad9630>,'-',<ConstantNumNode @ 0x7f2e86ad9898>] and goto state 74
   yacc.py: 506:Result : <MinusNode @ 0x7f2e86ad9780> (<utils.ast.MinusNode object at 0x7f2e86a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi id larrow op . LexToken(semi,';',20,453)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<MinusNode @ 0x7f2e86ad9780>] and goto state 73
   yacc.py: 506:Result : <MinusNode @ 0x7f2e86ad9780> (<utils.ast.MinusNode object at 0x7f2e86a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi id larrow comp . LexToken(semi,';',20,453)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<MinusNode @ 0x7f2e86ad9780>] and goto state 152
   yacc.py: 506:Result : <MinusNode @ 0x7f2e86ad9780> (<utils.ast.MinusNode object at 0x7f2e86a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 152
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi id larrow expr . LexToken(semi,';',20,453)
   yacc.py: 471:Action : Reduce rule [expr -> id larrow expr] with ['i','<-',<MinusNode @ 0x7f2e86ad9780>] and goto state 111
   yacc.py: 506:Result : <AssignNode @ 0x7f2e86ad99e8> (<utils.ast.AssignNode object at 0x7f2e86 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi expr . LexToken(semi,';',20,453)
   yacc.py: 445:Action : Shift and goto state 151
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi expr semi . LexToken(id,'b',21,459)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi expr semi id . LexToken(larrow,'<-',21,461)
   yacc.py: 445:Action : Shift and goto state 112
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi expr semi id larrow . LexToken(id,'a',21,464)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi expr semi id larrow id . LexToken(semi,';',21,465)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['a'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7f2e86ad96a0> (<utils.ast.VariableNode object at 0x7f2e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi expr semi id larrow atom . LexToken(semi,';',21,465)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7f2e86ad96a0>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7f2e86ad96a0> (<utils.ast.VariableNode object at 0x7f2e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi expr semi id larrow factor . LexToken(semi,';',21,465)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7f2e86ad96a0>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7f2e86ad96a0> (<utils.ast.VariableNode object at 0x7f2e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi expr semi id larrow base_call . LexToken(semi,';',21,465)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7f2e86ad96a0>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7f2e86ad96a0> (<utils.ast.VariableNode object at 0x7f2e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi expr semi id larrow term . LexToken(semi,';',21,465)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7f2e86ad96a0>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7f2e86ad96a0> (<utils.ast.VariableNode object at 0x7f2e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi expr semi id larrow op . LexToken(semi,';',21,465)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<VariableNode @ 0x7f2e86ad96a0>] and goto state 73
   yacc.py: 506:Result : <VariableNode @ 0x7f2e86ad96a0> (<utils.ast.VariableNode object at 0x7f2e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi expr semi id larrow comp . LexToken(semi,';',21,465)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<VariableNode @ 0x7f2e86ad96a0>] and goto state 152
   yacc.py: 506:Result : <VariableNode @ 0x7f2e86ad96a0> (<utils.ast.VariableNode object at 0x7f2e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 152
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi expr semi id larrow expr . LexToken(semi,';',21,465)
   yacc.py: 471:Action : Reduce rule [expr -> id larrow expr] with ['b','<-',<VariableNode @ 0x7f2e86ad96a0>] and goto state 111
   yacc.py: 506:Result : <AssignNode @ 0x7f2e86ad9978> (<utils.ast.AssignNode object at 0x7f2e86 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi expr semi expr . LexToken(semi,';',21,465)
   yacc.py: 445:Action : Shift and goto state 151
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi expr semi expr semi . LexToken(id,'a',22,471)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi expr semi expr semi id . LexToken(larrow,'<-',22,473)
   yacc.py: 445:Action : Shift and goto state 112
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi expr semi expr semi id larrow . LexToken(id,'c',22,476)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi expr semi expr semi id larrow id . LexToken(semi,';',22,477)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['c'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7f2e86ad9908> (<utils.ast.VariableNode object at 0x7f2e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi expr semi expr semi id larrow atom . LexToken(semi,';',22,477)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7f2e86ad9908>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7f2e86ad9908> (<utils.ast.VariableNode object at 0x7f2e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi expr semi expr semi id larrow factor . LexToken(semi,';',22,477)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7f2e86ad9908>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7f2e86ad9908> (<utils.ast.VariableNode object at 0x7f2e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi expr semi expr semi id larrow base_call . LexToken(semi,';',22,477)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7f2e86ad9908>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7f2e86ad9908> (<utils.ast.VariableNode object at 0x7f2e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi expr semi expr semi id larrow term . LexToken(semi,';',22,477)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7f2e86ad9908>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7f2e86ad9908> (<utils.ast.VariableNode object at 0x7f2e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi expr semi expr semi id larrow op . LexToken(semi,';',22,477)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<VariableNode @ 0x7f2e86ad9908>] and goto state 73
   yacc.py: 506:Result : <VariableNode @ 0x7f2e86ad9908> (<utils.ast.VariableNode object at 0x7f2e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi expr semi expr semi id larrow comp . LexToken(semi,';',22,477)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<VariableNode @ 0x7f2e86ad9908>] and goto state 152
   yacc.py: 506:Result : <VariableNode @ 0x7f2e86ad9908> (<utils.ast.VariableNode object at 0x7f2e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 152
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi expr semi expr semi id larrow expr . LexToken(semi,';',22,477)
   yacc.py: 471:Action : Reduce rule [expr -> id larrow expr] with ['a','<-',<VariableNode @ 0x7f2e86ad9908>] and goto state 111
   yacc.py: 506:Result : <AssignNode @ 0x7f2e86ad9b38> (<utils.ast.AssignNode object at 0x7f2e86 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi expr semi expr semi expr . LexToken(semi,';',22,477)
   yacc.py: 445:Action : Shift and goto state 151
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi expr semi expr semi expr semi . LexToken(ccur,'}',23,482)
   yacc.py: 471:Action : Reduce rule [block -> expr semi] with [<AssignNode @ 0x7f2e86ad9b38>,';'] and goto state 190
   yacc.py: 506:Result : <list @ 0x7f2e86ae2f88> ([<utils.ast.AssignNode object at 0x7f2e8 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 190
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi expr semi expr semi block . LexToken(ccur,'}',23,482)
   yacc.py: 471:Action : Reduce rule [block -> expr semi block] with [<AssignNode @ 0x7f2e86ad9978>,';',<list @ 0x7f2e86ae2f88>] and goto state 190
   yacc.py: 506:Result : <list @ 0x7f2e86ae5388> ([<utils.ast.AssignNode object at 0x7f2e8 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 190
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi expr semi block . LexToken(ccur,'}',23,482)
   yacc.py: 471:Action : Reduce rule [block -> expr semi block] with [<AssignNode @ 0x7f2e86ad99e8>,';',<list @ 0x7f2e86ae5388>] and goto state 190
   yacc.py: 506:Result : <list @ 0x7f2e86ae2f88> ([<utils.ast.AssignNode object at 0x7f2e8 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 190
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur expr semi block . LexToken(ccur,'}',23,482)
   yacc.py: 471:Action : Reduce rule [block -> expr semi block] with [<AssignNode @ 0x7f2e86ad9860>,';',<list @ 0x7f2e86ae2f88>] and goto state 135
   yacc.py: 506:Result : <list @ 0x7f2e86ae5388> ([<utils.ast.AssignNode object at 0x7f2e8 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 135
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur block . LexToken(ccur,'}',23,482)
   yacc.py: 445:Action : Shift and goto state 177
   yacc.py: 410:
   yacc.py: 411:State  : 177
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop ocur block ccur . LexToken(pool,'pool',24,487)
   yacc.py: 471:Action : Reduce rule [atom -> ocur block ccur] with ['{',<list @ 0x7f2e86ae5388>,'}'] and goto state 79
   yacc.py: 506:Result : <BlockNode @ 0x7f2e86ad9828> (<utils.ast.BlockNode object at 0x7f2e86a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop atom . LexToken(pool,'pool',24,487)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<BlockNode @ 0x7f2e86ad9828>] and goto state 77
   yacc.py: 506:Result : <BlockNode @ 0x7f2e86ad9828> (<utils.ast.BlockNode object at 0x7f2e86a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop factor . LexToken(pool,'pool',24,487)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<BlockNode @ 0x7f2e86ad9828>] and goto state 76
   yacc.py: 506:Result : <BlockNode @ 0x7f2e86ad9828> (<utils.ast.BlockNode object at 0x7f2e86a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop base_call . LexToken(pool,'pool',24,487)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<BlockNode @ 0x7f2e86ad9828>] and goto state 75
   yacc.py: 506:Result : <BlockNode @ 0x7f2e86ad9828> (<utils.ast.BlockNode object at 0x7f2e86a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop term . LexToken(pool,'pool',24,487)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<BlockNode @ 0x7f2e86ad9828>] and goto state 74
   yacc.py: 506:Result : <BlockNode @ 0x7f2e86ad9828> (<utils.ast.BlockNode object at 0x7f2e86a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop op . LexToken(pool,'pool',24,487)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<BlockNode @ 0x7f2e86ad9828>] and goto state 73
   yacc.py: 506:Result : <BlockNode @ 0x7f2e86ad9828> (<utils.ast.BlockNode object at 0x7f2e86a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop comp . LexToken(pool,'pool',24,487)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<BlockNode @ 0x7f2e86ad9828>] and goto state 204
   yacc.py: 506:Result : <BlockNode @ 0x7f2e86ad9828> (<utils.ast.BlockNode object at 0x7f2e86a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 204
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop expr . LexToken(pool,'pool',24,487)
   yacc.py: 445:Action : Shift and goto state 220
   yacc.py: 410:
   yacc.py: 411:State  : 220
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur while expr loop expr pool . LexToken(semi,';',24,491)
   yacc.py: 471:Action : Reduce rule [factor -> while expr loop expr pool] with ['while',<NotNode @ 0x7f2e86ad9438>,'loop',<BlockNode @ 0x7f2e86ad9828>,'pool'] and goto state 77
   yacc.py: 506:Result : <WhileNode @ 0x7f2e86ad9748> (<utils.ast.WhileNode object at 0x7f2e86a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur factor . LexToken(semi,';',24,491)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<WhileNode @ 0x7f2e86ad9748>] and goto state 76
   yacc.py: 506:Result : <WhileNode @ 0x7f2e86ad9748> (<utils.ast.WhileNode object at 0x7f2e86a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur base_call . LexToken(semi,';',24,491)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<WhileNode @ 0x7f2e86ad9748>] and goto state 75
   yacc.py: 506:Result : <WhileNode @ 0x7f2e86ad9748> (<utils.ast.WhileNode object at 0x7f2e86a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur term . LexToken(semi,';',24,491)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<WhileNode @ 0x7f2e86ad9748>] and goto state 74
   yacc.py: 506:Result : <WhileNode @ 0x7f2e86ad9748> (<utils.ast.WhileNode object at 0x7f2e86a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur op . LexToken(semi,';',24,491)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<WhileNode @ 0x7f2e86ad9748>] and goto state 73
   yacc.py: 506:Result : <WhileNode @ 0x7f2e86ad9748> (<utils.ast.WhileNode object at 0x7f2e86a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur comp . LexToken(semi,';',24,491)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<WhileNode @ 0x7f2e86ad9748>] and goto state 111
   yacc.py: 506:Result : <WhileNode @ 0x7f2e86ad9748> (<utils.ast.WhileNode object at 0x7f2e86a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur expr . LexToken(semi,';',24,491)
   yacc.py: 445:Action : Shift and goto state 151
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi . LexToken(id,'c',25,496)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi id . LexToken(semi,';',25,497)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['c'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7f2e86ad9a20> (<utils.ast.VariableNode object at 0x7f2e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi atom . LexToken(semi,';',25,497)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7f2e86ad9a20>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7f2e86ad9a20> (<utils.ast.VariableNode object at 0x7f2e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi factor . LexToken(semi,';',25,497)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7f2e86ad9a20>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7f2e86ad9a20> (<utils.ast.VariableNode object at 0x7f2e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi base_call . LexToken(semi,';',25,497)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7f2e86ad9a20>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7f2e86ad9a20> (<utils.ast.VariableNode object at 0x7f2e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi term . LexToken(semi,';',25,497)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7f2e86ad9a20>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7f2e86ad9a20> (<utils.ast.VariableNode object at 0x7f2e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi op . LexToken(semi,';',25,497)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<VariableNode @ 0x7f2e86ad9a20>] and goto state 73
   yacc.py: 506:Result : <VariableNode @ 0x7f2e86ad9a20> (<utils.ast.VariableNode object at 0x7f2e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi comp . LexToken(semi,';',25,497)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<VariableNode @ 0x7f2e86ad9a20>] and goto state 111
   yacc.py: 506:Result : <VariableNode @ 0x7f2e86ad9a20> (<utils.ast.VariableNode object at 0x7f2e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr . LexToken(semi,';',25,497)
   yacc.py: 445:Action : Shift and goto state 151
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi . LexToken(ccur,'}',26,502)
   yacc.py: 471:Action : Reduce rule [block -> expr semi] with [<VariableNode @ 0x7f2e86ad9a20>,';'] and goto state 190
   yacc.py: 506:Result : <list @ 0x7f2e86ae2f88> ([<utils.ast.VariableNode object at 0x7f2 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 190
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi block . LexToken(ccur,'}',26,502)
   yacc.py: 471:Action : Reduce rule [block -> expr semi block] with [<WhileNode @ 0x7f2e86ad9748>,';',<list @ 0x7f2e86ae2f88>] and goto state 135
   yacc.py: 506:Result : <list @ 0x7f2e86ae5808> ([<utils.ast.WhileNode object at 0x7f2e86 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 135
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur block . LexToken(ccur,'}',26,502)
   yacc.py: 445:Action : Shift and goto state 177
   yacc.py: 410:
   yacc.py: 411:State  : 177
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in ocur block ccur . LexToken(ccur,'}',27,505)
   yacc.py: 471:Action : Reduce rule [atom -> ocur block ccur] with ['{',<list @ 0x7f2e86ae5808>,'}'] and goto state 79
   yacc.py: 506:Result : <BlockNode @ 0x7f2e86ad94a8> (<utils.ast.BlockNode object at 0x7f2e86a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in atom . LexToken(ccur,'}',27,505)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<BlockNode @ 0x7f2e86ad94a8>] and goto state 77
   yacc.py: 506:Result : <BlockNode @ 0x7f2e86ad94a8> (<utils.ast.BlockNode object at 0x7f2e86a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in factor . LexToken(ccur,'}',27,505)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<BlockNode @ 0x7f2e86ad94a8>] and goto state 76
   yacc.py: 506:Result : <BlockNode @ 0x7f2e86ad94a8> (<utils.ast.BlockNode object at 0x7f2e86a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in base_call . LexToken(ccur,'}',27,505)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<BlockNode @ 0x7f2e86ad94a8>] and goto state 75
   yacc.py: 506:Result : <BlockNode @ 0x7f2e86ad94a8> (<utils.ast.BlockNode object at 0x7f2e86a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in term . LexToken(ccur,'}',27,505)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<BlockNode @ 0x7f2e86ad94a8>] and goto state 74
   yacc.py: 506:Result : <BlockNode @ 0x7f2e86ad94a8> (<utils.ast.BlockNode object at 0x7f2e86a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in op . LexToken(ccur,'}',27,505)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<BlockNode @ 0x7f2e86ad94a8>] and goto state 73
   yacc.py: 506:Result : <BlockNode @ 0x7f2e86ad94a8> (<utils.ast.BlockNode object at 0x7f2e86a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in comp . LexToken(ccur,'}',27,505)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<BlockNode @ 0x7f2e86ad94a8>] and goto state 196
   yacc.py: 506:Result : <BlockNode @ 0x7f2e86ad94a8> (<utils.ast.BlockNode object at 0x7f2e86a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur let let_list in expr . LexToken(ccur,'}',27,505)
   yacc.py: 471:Action : Reduce rule [factor -> let let_list in expr] with ['let',<list @ 0x7f2e86ae3108>,'in',<BlockNode @ 0x7f2e86ad94a8>] and goto state 77
   yacc.py: 506:Result : <LetNode @ 0x7f2e86ad9668> (<utils.ast.LetNode object at 0x7f2e86ad9 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur factor . LexToken(ccur,'}',27,505)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<LetNode @ 0x7f2e86ad9668>] and goto state 76
   yacc.py: 506:Result : <LetNode @ 0x7f2e86ad9668> (<utils.ast.LetNode object at 0x7f2e86ad9 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur base_call . LexToken(ccur,'}',27,505)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<LetNode @ 0x7f2e86ad9668>] and goto state 75
   yacc.py: 506:Result : <LetNode @ 0x7f2e86ad9668> (<utils.ast.LetNode object at 0x7f2e86ad9 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur term . LexToken(ccur,'}',27,505)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<LetNode @ 0x7f2e86ad9668>] and goto state 74
   yacc.py: 506:Result : <LetNode @ 0x7f2e86ad9668> (<utils.ast.LetNode object at 0x7f2e86ad9 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur op . LexToken(ccur,'}',27,505)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<LetNode @ 0x7f2e86ad9668>] and goto state 73
   yacc.py: 506:Result : <LetNode @ 0x7f2e86ad9668> (<utils.ast.LetNode object at 0x7f2e86ad9 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur comp . LexToken(ccur,'}',27,505)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<LetNode @ 0x7f2e86ad9668>] and goto state 206
   yacc.py: 506:Result : <LetNode @ 0x7f2e86ad9668> (<utils.ast.LetNode object at 0x7f2e86ad9 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 206
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur expr . LexToken(ccur,'}',27,505)
   yacc.py: 445:Action : Shift and goto state 222
   yacc.py: 410:
   yacc.py: 411:State  : 222
   yacc.py: 430:Defaulted state 222: Reduce using 25
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi id opar formals cpar colon type ocur expr ccur . None
   yacc.py: 471:Action : Reduce rule [def_func -> id opar formals cpar colon type ocur expr ccur] with ['fib','(',<list @ 0x7f2e86ae52c8>,')',':','Int','{',<LetNode @ 0x7f2e86ad9668>,'}'] and goto state 18
   yacc.py: 506:Result : <FuncDeclarationNode @ 0x7f2e86ad9940> (<utils.ast.FuncDeclarationNode object at ...)
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi def_func . LexToken(semi,';',27,506)
   yacc.py: 445:Action : Shift and goto state 30
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi def_func semi . LexToken(ccur,'}',29,509)
   yacc.py: 474:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 16
   yacc.py: 548:Result : <NoneType @ 0x560028ad00f0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 16
   yacc.py: 430:Defaulted state 16: Reduce using 14
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi def_func semi epsilon . LexToken(ccur,'}',29,509)
   yacc.py: 471:Action : Reduce rule [feature_list -> epsilon] with [None] and goto state 48
   yacc.py: 506:Result : <list @ 0x7f2e86ae2ec8> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 430:Defaulted state 48: Reduce using 16
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi def_func semi feature_list . LexToken(ccur,'}',29,509)
   yacc.py: 471:Action : Reduce rule [feature_list -> def_func semi feature_list] with [<FuncDeclarationNode @ 0x7f2e86ad9940>,';',[]] and goto state 48
   yacc.py: 506:Result : <list @ 0x7f2e86ae2fc8> ([<utils.ast.FuncDeclarationNode object a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 430:Defaulted state 48: Reduce using 16
   yacc.py: 435:Stack  : class type inherits type ocur def_func semi feature_list . LexToken(ccur,'}',29,509)
   yacc.py: 471:Action : Reduce rule [feature_list -> def_func semi feature_list] with [<FuncDeclarationNode @ 0x7f2e86bbccc0>,';',<list @ 0x7f2e86ae2fc8>] and goto state 53
   yacc.py: 506:Result : <list @ 0x7f2e86ae2ec8> ([<utils.ast.FuncDeclarationNode object a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 435:Stack  : class type inherits type ocur feature_list . LexToken(ccur,'}',29,509)
   yacc.py: 445:Action : Shift and goto state 66
   yacc.py: 410:
   yacc.py: 411:State  : 66
   yacc.py: 435:Stack  : class type inherits type ocur feature_list ccur . LexToken(semi,';',29,510)
   yacc.py: 445:Action : Shift and goto state 102
   yacc.py: 410:
   yacc.py: 411:State  : 102
   yacc.py: 435:Stack  : class type inherits type ocur feature_list ccur semi . LexToken(class,'class',31,513)
   yacc.py: 471:Action : Reduce rule [def_class -> class type inherits type ocur feature_list ccur semi] with ['class','Main','inherits','IO','{',<list @ 0x7f2e86ae2ec8>,'}',';'] and goto state 3
   yacc.py: 506:Result : <ClassDeclarationNode @ 0x7f2e86bbccf8> (<utils.ast.ClassDeclarationNode object a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 3
   yacc.py: 435:Stack  : def_class . LexToken(class,'class',31,513)
   yacc.py: 445:Action : Shift and goto state 5
   yacc.py: 410:
   yacc.py: 411:State  : 5
   yacc.py: 435:Stack  : def_class class . LexToken(type,'A',31,519)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 435:Stack  : def_class class type . LexToken(ocur,'{',31,521)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
   yacc.py: 435:Stack  : def_class class type ocur . LexToken(ccur,'}',33,524)
   yacc.py: 474:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 16
   yacc.py: 548:Result : <NoneType @ 0x560028ad00f0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 16
   yacc.py: 430:Defaulted state 16: Reduce using 14
   yacc.py: 435:Stack  : def_class class type ocur epsilon . LexToken(ccur,'}',33,524)
   yacc.py: 471:Action : Reduce rule [feature_list -> epsilon] with [None] and goto state 14
   yacc.py: 506:Result : <list @ 0x7f2e86ae2f88> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 14
   yacc.py: 435:Stack  : def_class class type ocur feature_list . LexToken(ccur,'}',33,524)
   yacc.py: 445:Action : Shift and goto state 25
   yacc.py: 410:
   yacc.py: 411:State  : 25
   yacc.py: 435:Stack  : def_class class type ocur feature_list ccur . LexToken(semi,';',33,525)
   yacc.py: 445:Action : Shift and goto state 38
   yacc.py: 410:
   yacc.py: 411:State  : 38
   yacc.py: 435:Stack  : def_class class type ocur feature_list ccur semi . $end
   yacc.py: 471:Action : Reduce rule [def_class -> class type ocur feature_list ccur semi] with ['class','A','{',[],'}',';'] and goto state 3
   yacc.py: 506:Result : <ClassDeclarationNode @ 0x7f2e86bbce80> (<utils.ast.ClassDeclarationNode object a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 3
   yacc.py: 435:Stack  : def_class def_class . $end
   yacc.py: 471:Action : Reduce rule [class_list -> def_class] with [<ClassDeclarationNode @ 0x7f2e86bbce80>] and goto state 6
   yacc.py: 506:Result : <list @ 0x7f2e86ae2fc8> ([<utils.ast.ClassDeclarationNode object  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 6
   yacc.py: 430:Defaulted state 6: Reduce using 3
   yacc.py: 435:Stack  : def_class class_list . $end
   yacc.py: 471:Action : Reduce rule [class_list -> def_class class_list] with [<ClassDeclarationNode @ 0x7f2e86bbccf8>,<list @ 0x7f2e86ae2fc8>] and goto state 2
   yacc.py: 506:Result : <list @ 0x7f2e86ae2e08> ([<utils.ast.ClassDeclarationNode object  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 2
   yacc.py: 430:Defaulted state 2: Reduce using 1
   yacc.py: 435:Stack  : class_list . $end
   yacc.py: 471:Action : Reduce rule [program -> class_list] with [<list @ 0x7f2e86ae2e08>] and goto state 1
   yacc.py: 506:Result : <ProgramNode @ 0x7f2e86c5d198> (<utils.ast.ProgramNode object at 0x7f2e8 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 1
   yacc.py: 435:Stack  : program . $end
   yacc.py: 571:Done   : Returning <ProgramNode @ 0x7f2e86c5d198> (<utils.ast.ProgramNode object at 0x7f2e8 ...)
   yacc.py: 572:PLY: PARSE DEBUG END

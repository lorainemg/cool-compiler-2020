   yacc.py:3317:Created by PLY version 3.11 (http://www.dabeaz.com/ply)
   yacc.py:3377:
   yacc.py:3378:Grammar
   yacc.py:3379:
   yacc.py:3381:Rule 0     S' -> program
   yacc.py:3381:Rule 1     program -> class_list
   yacc.py:3381:Rule 2     epsilon -> <empty>
   yacc.py:3381:Rule 3     class_list -> def_class class_list
   yacc.py:3381:Rule 4     class_list -> def_class
   yacc.py:3381:Rule 5     class_list -> error class_list
   yacc.py:3381:Rule 6     def_class -> class type ocur feature_list ccur semi
   yacc.py:3381:Rule 7     def_class -> class type inherits type ocur feature_list ccur semi
   yacc.py:3381:Rule 8     def_class -> class error ocur feature_list ccur semi
   yacc.py:3381:Rule 9     def_class -> class type ocur feature_list ccur error
   yacc.py:3381:Rule 10    def_class -> class error inherits type ocur feature_list ccur semi
   yacc.py:3381:Rule 11    def_class -> class error inherits error ocur feature_list ccur semi
   yacc.py:3381:Rule 12    def_class -> class type inherits error ocur feature_list ccur semi
   yacc.py:3381:Rule 13    def_class -> class type inherits type ocur feature_list ccur error
   yacc.py:3381:Rule 14    feature_list -> epsilon
   yacc.py:3381:Rule 15    feature_list -> def_attr semi feature_list
   yacc.py:3381:Rule 16    feature_list -> def_func semi feature_list
   yacc.py:3381:Rule 17    feature_list -> error feature_list
   yacc.py:3381:Rule 18    def_attr -> id colon type
   yacc.py:3381:Rule 19    def_attr -> id colon type larrow expr
   yacc.py:3381:Rule 20    def_attr -> error colon type
   yacc.py:3381:Rule 21    def_attr -> id colon error
   yacc.py:3381:Rule 22    def_attr -> error colon type larrow expr
   yacc.py:3381:Rule 23    def_attr -> id colon error larrow expr
   yacc.py:3381:Rule 24    def_attr -> id colon type larrow error
   yacc.py:3381:Rule 25    def_func -> id opar formals cpar colon type ocur expr ccur
   yacc.py:3381:Rule 26    def_func -> error opar formals cpar colon type ocur expr ccur
   yacc.py:3381:Rule 27    def_func -> id opar error cpar colon type ocur expr ccur
   yacc.py:3381:Rule 28    def_func -> id opar formals cpar colon error ocur expr ccur
   yacc.py:3381:Rule 29    def_func -> id opar formals cpar colon type ocur error ccur
   yacc.py:3381:Rule 30    formals -> param_list
   yacc.py:3381:Rule 31    formals -> param_list_empty
   yacc.py:3381:Rule 32    param_list -> param
   yacc.py:3381:Rule 33    param_list -> param comma param_list
   yacc.py:3381:Rule 34    param_list_empty -> epsilon
   yacc.py:3381:Rule 35    param -> id colon type
   yacc.py:3381:Rule 36    let_list -> let_assign
   yacc.py:3381:Rule 37    let_list -> let_assign comma let_list
   yacc.py:3381:Rule 38    let_assign -> param larrow expr
   yacc.py:3381:Rule 39    let_assign -> param
   yacc.py:3381:Rule 40    cases_list -> casep semi
   yacc.py:3381:Rule 41    cases_list -> casep semi cases_list
   yacc.py:3381:Rule 42    cases_list -> error cases_list
   yacc.py:3381:Rule 43    cases_list -> error semi
   yacc.py:3381:Rule 44    casep -> id colon type rarrow expr
   yacc.py:3381:Rule 45    expr -> id larrow expr
   yacc.py:3381:Rule 46    expr -> comp
   yacc.py:3381:Rule 47    comp -> comp less op
   yacc.py:3381:Rule 48    comp -> comp lesseq op
   yacc.py:3381:Rule 49    comp -> comp equal op
   yacc.py:3381:Rule 50    comp -> op
   yacc.py:3381:Rule 51    op -> op plus term
   yacc.py:3381:Rule 52    op -> op minus term
   yacc.py:3381:Rule 53    op -> term
   yacc.py:3381:Rule 54    term -> term star base_call
   yacc.py:3381:Rule 55    term -> term div base_call
   yacc.py:3381:Rule 56    term -> base_call
   yacc.py:3381:Rule 57    term -> term star error
   yacc.py:3381:Rule 58    term -> term div error
   yacc.py:3381:Rule 59    base_call -> factor arroba type dot func_call
   yacc.py:3381:Rule 60    base_call -> factor
   yacc.py:3381:Rule 61    base_call -> error arroba type dot func_call
   yacc.py:3381:Rule 62    base_call -> factor arroba error dot func_call
   yacc.py:3381:Rule 63    factor -> atom
   yacc.py:3381:Rule 64    factor -> opar expr cpar
   yacc.py:3381:Rule 65    factor -> factor dot func_call
   yacc.py:3381:Rule 66    factor -> not expr
   yacc.py:3381:Rule 67    factor -> func_call
   yacc.py:3381:Rule 68    factor -> isvoid base_call
   yacc.py:3381:Rule 69    factor -> nox base_call
   yacc.py:3381:Rule 70    factor -> let let_list in expr
   yacc.py:3381:Rule 71    factor -> case expr of cases_list esac
   yacc.py:3381:Rule 72    factor -> if expr then expr else expr fi
   yacc.py:3381:Rule 73    factor -> while expr loop expr pool
   yacc.py:3381:Rule 74    atom -> num
   yacc.py:3381:Rule 75    atom -> id
   yacc.py:3381:Rule 76    atom -> new type
   yacc.py:3381:Rule 77    atom -> ocur block ccur
   yacc.py:3381:Rule 78    atom -> error block ccur
   yacc.py:3381:Rule 79    atom -> ocur error ccur
   yacc.py:3381:Rule 80    atom -> ocur block error
   yacc.py:3381:Rule 81    atom -> true
   yacc.py:3381:Rule 82    atom -> false
   yacc.py:3381:Rule 83    atom -> string
   yacc.py:3381:Rule 84    block -> expr semi
   yacc.py:3381:Rule 85    block -> expr semi block
   yacc.py:3381:Rule 86    block -> error block
   yacc.py:3381:Rule 87    block -> error semi
   yacc.py:3381:Rule 88    func_call -> id opar args cpar
   yacc.py:3381:Rule 89    func_call -> id opar error cpar
   yacc.py:3381:Rule 90    func_call -> error opar args cpar
   yacc.py:3381:Rule 91    args -> arg_list
   yacc.py:3381:Rule 92    args -> arg_list_empty
   yacc.py:3381:Rule 93    arg_list -> expr
   yacc.py:3381:Rule 94    arg_list -> expr comma arg_list
   yacc.py:3381:Rule 95    arg_list -> error arg_list
   yacc.py:3381:Rule 96    arg_list_empty -> epsilon
   yacc.py:3399:
   yacc.py:3400:Terminals, with rules where they appear
   yacc.py:3401:
   yacc.py:3405:arroba               : 59 61 62
   yacc.py:3405:case                 : 71
   yacc.py:3405:ccur                 : 6 7 8 9 10 11 12 13 25 26 27 28 29 77 78 79
   yacc.py:3405:class                : 6 7 8 9 10 11 12 13
   yacc.py:3405:colon                : 18 19 20 21 22 23 24 25 26 27 28 29 35 44
   yacc.py:3405:comma                : 33 37 94
   yacc.py:3405:cpar                 : 25 26 27 28 29 64 88 89 90
   yacc.py:3405:div                  : 55 58
   yacc.py:3405:dot                  : 59 61 62 65
   yacc.py:3405:else                 : 72
   yacc.py:3405:equal                : 49
   yacc.py:3405:error                : 5 8 9 10 11 11 12 13 17 20 21 22 23 24 26 27 28 29 42 43 57 58 61 62 78 79 80 86 87 89 90 95
   yacc.py:3405:esac                 : 71
   yacc.py:3405:false                : 82
   yacc.py:3405:fi                   : 72
   yacc.py:3405:id                   : 18 19 21 23 24 25 27 28 29 35 44 45 75 88 89
   yacc.py:3405:if                   : 72
   yacc.py:3405:in                   : 70
   yacc.py:3405:inherits             : 7 10 11 12 13
   yacc.py:3405:isvoid               : 68
   yacc.py:3405:larrow               : 19 22 23 24 38 45
   yacc.py:3405:less                 : 47
   yacc.py:3405:lesseq               : 48
   yacc.py:3405:let                  : 70
   yacc.py:3405:loop                 : 73
   yacc.py:3405:minus                : 52
   yacc.py:3405:new                  : 76
   yacc.py:3405:not                  : 66
   yacc.py:3405:nox                  : 69
   yacc.py:3405:num                  : 74
   yacc.py:3405:ocur                 : 6 7 8 9 10 11 12 13 25 26 27 28 29 77 79 80
   yacc.py:3405:of                   : 71
   yacc.py:3405:opar                 : 25 26 27 28 29 64 88 89 90
   yacc.py:3405:plus                 : 51
   yacc.py:3405:pool                 : 73
   yacc.py:3405:rarrow               : 44
   yacc.py:3405:semi                 : 6 7 8 10 11 12 15 16 40 41 43 84 85 87
   yacc.py:3405:star                 : 54 57
   yacc.py:3405:string               : 83
   yacc.py:3405:then                 : 72
   yacc.py:3405:true                 : 81
   yacc.py:3405:type                 : 6 7 7 9 10 12 13 13 18 19 20 22 24 25 26 27 29 35 44 59 61 76
   yacc.py:3405:while                : 73
   yacc.py:3407:
   yacc.py:3408:Nonterminals, with rules where they appear
   yacc.py:3409:
   yacc.py:3413:arg_list             : 91 94 95
   yacc.py:3413:arg_list_empty       : 92
   yacc.py:3413:args                 : 88 90
   yacc.py:3413:atom                 : 63
   yacc.py:3413:base_call            : 54 55 56 68 69
   yacc.py:3413:block                : 77 78 80 85 86
   yacc.py:3413:casep                : 40 41
   yacc.py:3413:cases_list           : 41 42 71
   yacc.py:3413:class_list           : 1 3 5
   yacc.py:3413:comp                 : 46 47 48 49
   yacc.py:3413:def_attr             : 15
   yacc.py:3413:def_class            : 3 4
   yacc.py:3413:def_func             : 16
   yacc.py:3413:epsilon              : 14 34 96
   yacc.py:3413:expr                 : 19 22 23 25 26 27 28 38 44 45 64 66 70 71 72 72 72 73 73 84 85 93 94
   yacc.py:3413:factor               : 59 60 62 65
   yacc.py:3413:feature_list         : 6 7 8 9 10 11 12 13 15 16 17
   yacc.py:3413:formals              : 25 26 28 29
   yacc.py:3413:func_call            : 59 61 62 65 67
   yacc.py:3413:let_assign           : 36 37
   yacc.py:3413:let_list             : 37 70
   yacc.py:3413:op                   : 47 48 49 50 51 52
   yacc.py:3413:param                : 32 33 38 39
   yacc.py:3413:param_list           : 30 33
   yacc.py:3413:param_list_empty     : 31
   yacc.py:3413:program              : 0
   yacc.py:3413:term                 : 51 52 53 54 55 57 58
   yacc.py:3414:
   yacc.py:3436:Generating LALR tables
   yacc.py:2543:Parsing method: LALR
   yacc.py:2561:
   yacc.py:2562:state 0
   yacc.py:2563:
   yacc.py:2565:    (0) S' -> . program
   yacc.py:2565:    (1) program -> . class_list
   yacc.py:2565:    (3) class_list -> . def_class class_list
   yacc.py:2565:    (4) class_list -> . def_class
   yacc.py:2565:    (5) class_list -> . error class_list
   yacc.py:2565:    (6) def_class -> . class type ocur feature_list ccur semi
   yacc.py:2565:    (7) def_class -> . class type inherits type ocur feature_list ccur semi
   yacc.py:2565:    (8) def_class -> . class error ocur feature_list ccur semi
   yacc.py:2565:    (9) def_class -> . class type ocur feature_list ccur error
   yacc.py:2565:    (10) def_class -> . class error inherits type ocur feature_list ccur semi
   yacc.py:2565:    (11) def_class -> . class error inherits error ocur feature_list ccur semi
   yacc.py:2565:    (12) def_class -> . class type inherits error ocur feature_list ccur semi
   yacc.py:2565:    (13) def_class -> . class type inherits type ocur feature_list ccur error
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 4
   yacc.py:2687:    class           shift and go to state 5
   yacc.py:2689:
   yacc.py:2714:    program                        shift and go to state 1
   yacc.py:2714:    class_list                     shift and go to state 2
   yacc.py:2714:    def_class                      shift and go to state 3
   yacc.py:2561:
   yacc.py:2562:state 1
   yacc.py:2563:
   yacc.py:2565:    (0) S' -> program .
   yacc.py:2566:
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 2
   yacc.py:2563:
   yacc.py:2565:    (1) program -> class_list .
   yacc.py:2566:
   yacc.py:2687:    $end            reduce using rule 1 (program -> class_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 3
   yacc.py:2563:
   yacc.py:2565:    (3) class_list -> def_class . class_list
   yacc.py:2565:    (4) class_list -> def_class .
   yacc.py:2565:    (3) class_list -> . def_class class_list
   yacc.py:2565:    (4) class_list -> . def_class
   yacc.py:2565:    (5) class_list -> . error class_list
   yacc.py:2565:    (6) def_class -> . class type ocur feature_list ccur semi
   yacc.py:2565:    (7) def_class -> . class type inherits type ocur feature_list ccur semi
   yacc.py:2565:    (8) def_class -> . class error ocur feature_list ccur semi
   yacc.py:2565:    (9) def_class -> . class type ocur feature_list ccur error
   yacc.py:2565:    (10) def_class -> . class error inherits type ocur feature_list ccur semi
   yacc.py:2565:    (11) def_class -> . class error inherits error ocur feature_list ccur semi
   yacc.py:2565:    (12) def_class -> . class type inherits error ocur feature_list ccur semi
   yacc.py:2565:    (13) def_class -> . class type inherits type ocur feature_list ccur error
   yacc.py:2566:
   yacc.py:2687:    $end            reduce using rule 4 (class_list -> def_class .)
   yacc.py:2687:    error           shift and go to state 4
   yacc.py:2687:    class           shift and go to state 5
   yacc.py:2689:
   yacc.py:2714:    def_class                      shift and go to state 3
   yacc.py:2714:    class_list                     shift and go to state 6
   yacc.py:2561:
   yacc.py:2562:state 4
   yacc.py:2563:
   yacc.py:2565:    (5) class_list -> error . class_list
   yacc.py:2565:    (3) class_list -> . def_class class_list
   yacc.py:2565:    (4) class_list -> . def_class
   yacc.py:2565:    (5) class_list -> . error class_list
   yacc.py:2565:    (6) def_class -> . class type ocur feature_list ccur semi
   yacc.py:2565:    (7) def_class -> . class type inherits type ocur feature_list ccur semi
   yacc.py:2565:    (8) def_class -> . class error ocur feature_list ccur semi
   yacc.py:2565:    (9) def_class -> . class type ocur feature_list ccur error
   yacc.py:2565:    (10) def_class -> . class error inherits type ocur feature_list ccur semi
   yacc.py:2565:    (11) def_class -> . class error inherits error ocur feature_list ccur semi
   yacc.py:2565:    (12) def_class -> . class type inherits error ocur feature_list ccur semi
   yacc.py:2565:    (13) def_class -> . class type inherits type ocur feature_list ccur error
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 4
   yacc.py:2687:    class           shift and go to state 5
   yacc.py:2689:
   yacc.py:2714:    class_list                     shift and go to state 7
   yacc.py:2714:    def_class                      shift and go to state 3
   yacc.py:2561:
   yacc.py:2562:state 5
   yacc.py:2563:
   yacc.py:2565:    (6) def_class -> class . type ocur feature_list ccur semi
   yacc.py:2565:    (7) def_class -> class . type inherits type ocur feature_list ccur semi
   yacc.py:2565:    (8) def_class -> class . error ocur feature_list ccur semi
   yacc.py:2565:    (9) def_class -> class . type ocur feature_list ccur error
   yacc.py:2565:    (10) def_class -> class . error inherits type ocur feature_list ccur semi
   yacc.py:2565:    (11) def_class -> class . error inherits error ocur feature_list ccur semi
   yacc.py:2565:    (12) def_class -> class . type inherits error ocur feature_list ccur semi
   yacc.py:2565:    (13) def_class -> class . type inherits type ocur feature_list ccur error
   yacc.py:2566:
   yacc.py:2687:    type            shift and go to state 8
   yacc.py:2687:    error           shift and go to state 9
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 6
   yacc.py:2563:
   yacc.py:2565:    (3) class_list -> def_class class_list .
   yacc.py:2566:
   yacc.py:2687:    $end            reduce using rule 3 (class_list -> def_class class_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 7
   yacc.py:2563:
   yacc.py:2565:    (5) class_list -> error class_list .
   yacc.py:2566:
   yacc.py:2687:    $end            reduce using rule 5 (class_list -> error class_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 8
   yacc.py:2563:
   yacc.py:2565:    (6) def_class -> class type . ocur feature_list ccur semi
   yacc.py:2565:    (7) def_class -> class type . inherits type ocur feature_list ccur semi
   yacc.py:2565:    (9) def_class -> class type . ocur feature_list ccur error
   yacc.py:2565:    (12) def_class -> class type . inherits error ocur feature_list ccur semi
   yacc.py:2565:    (13) def_class -> class type . inherits type ocur feature_list ccur error
   yacc.py:2566:
   yacc.py:2687:    ocur            shift and go to state 10
   yacc.py:2687:    inherits        shift and go to state 11
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 9
   yacc.py:2563:
   yacc.py:2565:    (8) def_class -> class error . ocur feature_list ccur semi
   yacc.py:2565:    (10) def_class -> class error . inherits type ocur feature_list ccur semi
   yacc.py:2565:    (11) def_class -> class error . inherits error ocur feature_list ccur semi
   yacc.py:2566:
   yacc.py:2687:    ocur            shift and go to state 12
   yacc.py:2687:    inherits        shift and go to state 13
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 10
   yacc.py:2563:
   yacc.py:2565:    (6) def_class -> class type ocur . feature_list ccur semi
   yacc.py:2565:    (9) def_class -> class type ocur . feature_list ccur error
   yacc.py:2565:    (14) feature_list -> . epsilon
   yacc.py:2565:    (15) feature_list -> . def_attr semi feature_list
   yacc.py:2565:    (16) feature_list -> . def_func semi feature_list
   yacc.py:2565:    (17) feature_list -> . error feature_list
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2565:    (18) def_attr -> . id colon type
   yacc.py:2565:    (19) def_attr -> . id colon type larrow expr
   yacc.py:2565:    (20) def_attr -> . error colon type
   yacc.py:2565:    (21) def_attr -> . id colon error
   yacc.py:2565:    (22) def_attr -> . error colon type larrow expr
   yacc.py:2565:    (23) def_attr -> . id colon error larrow expr
   yacc.py:2565:    (24) def_attr -> . id colon type larrow error
   yacc.py:2565:    (25) def_func -> . id opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (26) def_func -> . error opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (27) def_func -> . id opar error cpar colon type ocur expr ccur
   yacc.py:2565:    (28) def_func -> . id opar formals cpar colon error ocur expr ccur
   yacc.py:2565:    (29) def_func -> . id opar formals cpar colon type ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 15
   yacc.py:2687:    ccur            reduce using rule 2 (epsilon -> .)
   yacc.py:2687:    id              shift and go to state 19
   yacc.py:2689:
   yacc.py:2714:    feature_list                   shift and go to state 14
   yacc.py:2714:    epsilon                        shift and go to state 16
   yacc.py:2714:    def_attr                       shift and go to state 17
   yacc.py:2714:    def_func                       shift and go to state 18
   yacc.py:2561:
   yacc.py:2562:state 11
   yacc.py:2563:
   yacc.py:2565:    (7) def_class -> class type inherits . type ocur feature_list ccur semi
   yacc.py:2565:    (12) def_class -> class type inherits . error ocur feature_list ccur semi
   yacc.py:2565:    (13) def_class -> class type inherits . type ocur feature_list ccur error
   yacc.py:2566:
   yacc.py:2687:    type            shift and go to state 20
   yacc.py:2687:    error           shift and go to state 21
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 12
   yacc.py:2563:
   yacc.py:2565:    (8) def_class -> class error ocur . feature_list ccur semi
   yacc.py:2565:    (14) feature_list -> . epsilon
   yacc.py:2565:    (15) feature_list -> . def_attr semi feature_list
   yacc.py:2565:    (16) feature_list -> . def_func semi feature_list
   yacc.py:2565:    (17) feature_list -> . error feature_list
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2565:    (18) def_attr -> . id colon type
   yacc.py:2565:    (19) def_attr -> . id colon type larrow expr
   yacc.py:2565:    (20) def_attr -> . error colon type
   yacc.py:2565:    (21) def_attr -> . id colon error
   yacc.py:2565:    (22) def_attr -> . error colon type larrow expr
   yacc.py:2565:    (23) def_attr -> . id colon error larrow expr
   yacc.py:2565:    (24) def_attr -> . id colon type larrow error
   yacc.py:2565:    (25) def_func -> . id opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (26) def_func -> . error opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (27) def_func -> . id opar error cpar colon type ocur expr ccur
   yacc.py:2565:    (28) def_func -> . id opar formals cpar colon error ocur expr ccur
   yacc.py:2565:    (29) def_func -> . id opar formals cpar colon type ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 15
   yacc.py:2687:    ccur            reduce using rule 2 (epsilon -> .)
   yacc.py:2687:    id              shift and go to state 19
   yacc.py:2689:
   yacc.py:2714:    feature_list                   shift and go to state 22
   yacc.py:2714:    epsilon                        shift and go to state 16
   yacc.py:2714:    def_attr                       shift and go to state 17
   yacc.py:2714:    def_func                       shift and go to state 18
   yacc.py:2561:
   yacc.py:2562:state 13
   yacc.py:2563:
   yacc.py:2565:    (10) def_class -> class error inherits . type ocur feature_list ccur semi
   yacc.py:2565:    (11) def_class -> class error inherits . error ocur feature_list ccur semi
   yacc.py:2566:
   yacc.py:2687:    type            shift and go to state 24
   yacc.py:2687:    error           shift and go to state 23
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 14
   yacc.py:2563:
   yacc.py:2565:    (6) def_class -> class type ocur feature_list . ccur semi
   yacc.py:2565:    (9) def_class -> class type ocur feature_list . ccur error
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 25
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 15
   yacc.py:2563:
   yacc.py:2565:    (17) feature_list -> error . feature_list
   yacc.py:2565:    (20) def_attr -> error . colon type
   yacc.py:2565:    (22) def_attr -> error . colon type larrow expr
   yacc.py:2565:    (26) def_func -> error . opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (14) feature_list -> . epsilon
   yacc.py:2565:    (15) feature_list -> . def_attr semi feature_list
   yacc.py:2565:    (16) feature_list -> . def_func semi feature_list
   yacc.py:2565:    (17) feature_list -> . error feature_list
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2565:    (18) def_attr -> . id colon type
   yacc.py:2565:    (19) def_attr -> . id colon type larrow expr
   yacc.py:2565:    (20) def_attr -> . error colon type
   yacc.py:2565:    (21) def_attr -> . id colon error
   yacc.py:2565:    (22) def_attr -> . error colon type larrow expr
   yacc.py:2565:    (23) def_attr -> . id colon error larrow expr
   yacc.py:2565:    (24) def_attr -> . id colon type larrow error
   yacc.py:2565:    (25) def_func -> . id opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (26) def_func -> . error opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (27) def_func -> . id opar error cpar colon type ocur expr ccur
   yacc.py:2565:    (28) def_func -> . id opar formals cpar colon error ocur expr ccur
   yacc.py:2565:    (29) def_func -> . id opar formals cpar colon type ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    colon           shift and go to state 27
   yacc.py:2687:    opar            shift and go to state 28
   yacc.py:2687:    error           shift and go to state 15
   yacc.py:2687:    ccur            reduce using rule 2 (epsilon -> .)
   yacc.py:2687:    id              shift and go to state 19
   yacc.py:2689:
   yacc.py:2714:    feature_list                   shift and go to state 26
   yacc.py:2714:    epsilon                        shift and go to state 16
   yacc.py:2714:    def_attr                       shift and go to state 17
   yacc.py:2714:    def_func                       shift and go to state 18
   yacc.py:2561:
   yacc.py:2562:state 16
   yacc.py:2563:
   yacc.py:2565:    (14) feature_list -> epsilon .
   yacc.py:2566:
   yacc.py:2687:    ccur            reduce using rule 14 (feature_list -> epsilon .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 17
   yacc.py:2563:
   yacc.py:2565:    (15) feature_list -> def_attr . semi feature_list
   yacc.py:2566:
   yacc.py:2687:    semi            shift and go to state 29
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 18
   yacc.py:2563:
   yacc.py:2565:    (16) feature_list -> def_func . semi feature_list
   yacc.py:2566:
   yacc.py:2687:    semi            shift and go to state 30
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 19
   yacc.py:2563:
   yacc.py:2565:    (18) def_attr -> id . colon type
   yacc.py:2565:    (19) def_attr -> id . colon type larrow expr
   yacc.py:2565:    (21) def_attr -> id . colon error
   yacc.py:2565:    (23) def_attr -> id . colon error larrow expr
   yacc.py:2565:    (24) def_attr -> id . colon type larrow error
   yacc.py:2565:    (25) def_func -> id . opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (27) def_func -> id . opar error cpar colon type ocur expr ccur
   yacc.py:2565:    (28) def_func -> id . opar formals cpar colon error ocur expr ccur
   yacc.py:2565:    (29) def_func -> id . opar formals cpar colon type ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    colon           shift and go to state 31
   yacc.py:2687:    opar            shift and go to state 32
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 20
   yacc.py:2563:
   yacc.py:2565:    (7) def_class -> class type inherits type . ocur feature_list ccur semi
   yacc.py:2565:    (13) def_class -> class type inherits type . ocur feature_list ccur error
   yacc.py:2566:
   yacc.py:2687:    ocur            shift and go to state 33
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 21
   yacc.py:2563:
   yacc.py:2565:    (12) def_class -> class type inherits error . ocur feature_list ccur semi
   yacc.py:2566:
   yacc.py:2687:    ocur            shift and go to state 34
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 22
   yacc.py:2563:
   yacc.py:2565:    (8) def_class -> class error ocur feature_list . ccur semi
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 35
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 23
   yacc.py:2563:
   yacc.py:2565:    (11) def_class -> class error inherits error . ocur feature_list ccur semi
   yacc.py:2566:
   yacc.py:2687:    ocur            shift and go to state 36
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 24
   yacc.py:2563:
   yacc.py:2565:    (10) def_class -> class error inherits type . ocur feature_list ccur semi
   yacc.py:2566:
   yacc.py:2687:    ocur            shift and go to state 37
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 25
   yacc.py:2563:
   yacc.py:2565:    (6) def_class -> class type ocur feature_list ccur . semi
   yacc.py:2565:    (9) def_class -> class type ocur feature_list ccur . error
   yacc.py:2566:
   yacc.py:2687:    semi            shift and go to state 38
   yacc.py:2687:    error           shift and go to state 39
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 26
   yacc.py:2563:
   yacc.py:2565:    (17) feature_list -> error feature_list .
   yacc.py:2566:
   yacc.py:2687:    ccur            reduce using rule 17 (feature_list -> error feature_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 27
   yacc.py:2563:
   yacc.py:2565:    (20) def_attr -> error colon . type
   yacc.py:2565:    (22) def_attr -> error colon . type larrow expr
   yacc.py:2566:
   yacc.py:2687:    type            shift and go to state 40
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 28
   yacc.py:2563:
   yacc.py:2565:    (26) def_func -> error opar . formals cpar colon type ocur expr ccur
   yacc.py:2565:    (30) formals -> . param_list
   yacc.py:2565:    (31) formals -> . param_list_empty
   yacc.py:2565:    (32) param_list -> . param
   yacc.py:2565:    (33) param_list -> . param comma param_list
   yacc.py:2565:    (34) param_list_empty -> . epsilon
   yacc.py:2565:    (35) param -> . id colon type
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 46
   yacc.py:2687:    cpar            reduce using rule 2 (epsilon -> .)
   yacc.py:2689:
   yacc.py:2714:    formals                        shift and go to state 41
   yacc.py:2714:    param_list                     shift and go to state 42
   yacc.py:2714:    param_list_empty               shift and go to state 43
   yacc.py:2714:    param                          shift and go to state 44
   yacc.py:2714:    epsilon                        shift and go to state 45
   yacc.py:2561:
   yacc.py:2562:state 29
   yacc.py:2563:
   yacc.py:2565:    (15) feature_list -> def_attr semi . feature_list
   yacc.py:2565:    (14) feature_list -> . epsilon
   yacc.py:2565:    (15) feature_list -> . def_attr semi feature_list
   yacc.py:2565:    (16) feature_list -> . def_func semi feature_list
   yacc.py:2565:    (17) feature_list -> . error feature_list
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2565:    (18) def_attr -> . id colon type
   yacc.py:2565:    (19) def_attr -> . id colon type larrow expr
   yacc.py:2565:    (20) def_attr -> . error colon type
   yacc.py:2565:    (21) def_attr -> . id colon error
   yacc.py:2565:    (22) def_attr -> . error colon type larrow expr
   yacc.py:2565:    (23) def_attr -> . id colon error larrow expr
   yacc.py:2565:    (24) def_attr -> . id colon type larrow error
   yacc.py:2565:    (25) def_func -> . id opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (26) def_func -> . error opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (27) def_func -> . id opar error cpar colon type ocur expr ccur
   yacc.py:2565:    (28) def_func -> . id opar formals cpar colon error ocur expr ccur
   yacc.py:2565:    (29) def_func -> . id opar formals cpar colon type ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 15
   yacc.py:2687:    ccur            reduce using rule 2 (epsilon -> .)
   yacc.py:2687:    id              shift and go to state 19
   yacc.py:2689:
   yacc.py:2714:    def_attr                       shift and go to state 17
   yacc.py:2714:    feature_list                   shift and go to state 47
   yacc.py:2714:    epsilon                        shift and go to state 16
   yacc.py:2714:    def_func                       shift and go to state 18
   yacc.py:2561:
   yacc.py:2562:state 30
   yacc.py:2563:
   yacc.py:2565:    (16) feature_list -> def_func semi . feature_list
   yacc.py:2565:    (14) feature_list -> . epsilon
   yacc.py:2565:    (15) feature_list -> . def_attr semi feature_list
   yacc.py:2565:    (16) feature_list -> . def_func semi feature_list
   yacc.py:2565:    (17) feature_list -> . error feature_list
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2565:    (18) def_attr -> . id colon type
   yacc.py:2565:    (19) def_attr -> . id colon type larrow expr
   yacc.py:2565:    (20) def_attr -> . error colon type
   yacc.py:2565:    (21) def_attr -> . id colon error
   yacc.py:2565:    (22) def_attr -> . error colon type larrow expr
   yacc.py:2565:    (23) def_attr -> . id colon error larrow expr
   yacc.py:2565:    (24) def_attr -> . id colon type larrow error
   yacc.py:2565:    (25) def_func -> . id opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (26) def_func -> . error opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (27) def_func -> . id opar error cpar colon type ocur expr ccur
   yacc.py:2565:    (28) def_func -> . id opar formals cpar colon error ocur expr ccur
   yacc.py:2565:    (29) def_func -> . id opar formals cpar colon type ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 15
   yacc.py:2687:    ccur            reduce using rule 2 (epsilon -> .)
   yacc.py:2687:    id              shift and go to state 19
   yacc.py:2689:
   yacc.py:2714:    def_func                       shift and go to state 18
   yacc.py:2714:    feature_list                   shift and go to state 48
   yacc.py:2714:    epsilon                        shift and go to state 16
   yacc.py:2714:    def_attr                       shift and go to state 17
   yacc.py:2561:
   yacc.py:2562:state 31
   yacc.py:2563:
   yacc.py:2565:    (18) def_attr -> id colon . type
   yacc.py:2565:    (19) def_attr -> id colon . type larrow expr
   yacc.py:2565:    (21) def_attr -> id colon . error
   yacc.py:2565:    (23) def_attr -> id colon . error larrow expr
   yacc.py:2565:    (24) def_attr -> id colon . type larrow error
   yacc.py:2566:
   yacc.py:2687:    type            shift and go to state 49
   yacc.py:2687:    error           shift and go to state 50
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 32
   yacc.py:2563:
   yacc.py:2565:    (25) def_func -> id opar . formals cpar colon type ocur expr ccur
   yacc.py:2565:    (27) def_func -> id opar . error cpar colon type ocur expr ccur
   yacc.py:2565:    (28) def_func -> id opar . formals cpar colon error ocur expr ccur
   yacc.py:2565:    (29) def_func -> id opar . formals cpar colon type ocur error ccur
   yacc.py:2565:    (30) formals -> . param_list
   yacc.py:2565:    (31) formals -> . param_list_empty
   yacc.py:2565:    (32) param_list -> . param
   yacc.py:2565:    (33) param_list -> . param comma param_list
   yacc.py:2565:    (34) param_list_empty -> . epsilon
   yacc.py:2565:    (35) param -> . id colon type
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 52
   yacc.py:2687:    id              shift and go to state 46
   yacc.py:2687:    cpar            reduce using rule 2 (epsilon -> .)
   yacc.py:2689:
   yacc.py:2714:    formals                        shift and go to state 51
   yacc.py:2714:    param_list                     shift and go to state 42
   yacc.py:2714:    param_list_empty               shift and go to state 43
   yacc.py:2714:    param                          shift and go to state 44
   yacc.py:2714:    epsilon                        shift and go to state 45
   yacc.py:2561:
   yacc.py:2562:state 33
   yacc.py:2563:
   yacc.py:2565:    (7) def_class -> class type inherits type ocur . feature_list ccur semi
   yacc.py:2565:    (13) def_class -> class type inherits type ocur . feature_list ccur error
   yacc.py:2565:    (14) feature_list -> . epsilon
   yacc.py:2565:    (15) feature_list -> . def_attr semi feature_list
   yacc.py:2565:    (16) feature_list -> . def_func semi feature_list
   yacc.py:2565:    (17) feature_list -> . error feature_list
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2565:    (18) def_attr -> . id colon type
   yacc.py:2565:    (19) def_attr -> . id colon type larrow expr
   yacc.py:2565:    (20) def_attr -> . error colon type
   yacc.py:2565:    (21) def_attr -> . id colon error
   yacc.py:2565:    (22) def_attr -> . error colon type larrow expr
   yacc.py:2565:    (23) def_attr -> . id colon error larrow expr
   yacc.py:2565:    (24) def_attr -> . id colon type larrow error
   yacc.py:2565:    (25) def_func -> . id opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (26) def_func -> . error opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (27) def_func -> . id opar error cpar colon type ocur expr ccur
   yacc.py:2565:    (28) def_func -> . id opar formals cpar colon error ocur expr ccur
   yacc.py:2565:    (29) def_func -> . id opar formals cpar colon type ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 15
   yacc.py:2687:    ccur            reduce using rule 2 (epsilon -> .)
   yacc.py:2687:    id              shift and go to state 19
   yacc.py:2689:
   yacc.py:2714:    feature_list                   shift and go to state 53
   yacc.py:2714:    epsilon                        shift and go to state 16
   yacc.py:2714:    def_attr                       shift and go to state 17
   yacc.py:2714:    def_func                       shift and go to state 18
   yacc.py:2561:
   yacc.py:2562:state 34
   yacc.py:2563:
   yacc.py:2565:    (12) def_class -> class type inherits error ocur . feature_list ccur semi
   yacc.py:2565:    (14) feature_list -> . epsilon
   yacc.py:2565:    (15) feature_list -> . def_attr semi feature_list
   yacc.py:2565:    (16) feature_list -> . def_func semi feature_list
   yacc.py:2565:    (17) feature_list -> . error feature_list
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2565:    (18) def_attr -> . id colon type
   yacc.py:2565:    (19) def_attr -> . id colon type larrow expr
   yacc.py:2565:    (20) def_attr -> . error colon type
   yacc.py:2565:    (21) def_attr -> . id colon error
   yacc.py:2565:    (22) def_attr -> . error colon type larrow expr
   yacc.py:2565:    (23) def_attr -> . id colon error larrow expr
   yacc.py:2565:    (24) def_attr -> . id colon type larrow error
   yacc.py:2565:    (25) def_func -> . id opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (26) def_func -> . error opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (27) def_func -> . id opar error cpar colon type ocur expr ccur
   yacc.py:2565:    (28) def_func -> . id opar formals cpar colon error ocur expr ccur
   yacc.py:2565:    (29) def_func -> . id opar formals cpar colon type ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 15
   yacc.py:2687:    ccur            reduce using rule 2 (epsilon -> .)
   yacc.py:2687:    id              shift and go to state 19
   yacc.py:2689:
   yacc.py:2714:    feature_list                   shift and go to state 54
   yacc.py:2714:    epsilon                        shift and go to state 16
   yacc.py:2714:    def_attr                       shift and go to state 17
   yacc.py:2714:    def_func                       shift and go to state 18
   yacc.py:2561:
   yacc.py:2562:state 35
   yacc.py:2563:
   yacc.py:2565:    (8) def_class -> class error ocur feature_list ccur . semi
   yacc.py:2566:
   yacc.py:2687:    semi            shift and go to state 55
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 36
   yacc.py:2563:
   yacc.py:2565:    (11) def_class -> class error inherits error ocur . feature_list ccur semi
   yacc.py:2565:    (14) feature_list -> . epsilon
   yacc.py:2565:    (15) feature_list -> . def_attr semi feature_list
   yacc.py:2565:    (16) feature_list -> . def_func semi feature_list
   yacc.py:2565:    (17) feature_list -> . error feature_list
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2565:    (18) def_attr -> . id colon type
   yacc.py:2565:    (19) def_attr -> . id colon type larrow expr
   yacc.py:2565:    (20) def_attr -> . error colon type
   yacc.py:2565:    (21) def_attr -> . id colon error
   yacc.py:2565:    (22) def_attr -> . error colon type larrow expr
   yacc.py:2565:    (23) def_attr -> . id colon error larrow expr
   yacc.py:2565:    (24) def_attr -> . id colon type larrow error
   yacc.py:2565:    (25) def_func -> . id opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (26) def_func -> . error opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (27) def_func -> . id opar error cpar colon type ocur expr ccur
   yacc.py:2565:    (28) def_func -> . id opar formals cpar colon error ocur expr ccur
   yacc.py:2565:    (29) def_func -> . id opar formals cpar colon type ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 15
   yacc.py:2687:    ccur            reduce using rule 2 (epsilon -> .)
   yacc.py:2687:    id              shift and go to state 19
   yacc.py:2689:
   yacc.py:2714:    feature_list                   shift and go to state 56
   yacc.py:2714:    epsilon                        shift and go to state 16
   yacc.py:2714:    def_attr                       shift and go to state 17
   yacc.py:2714:    def_func                       shift and go to state 18
   yacc.py:2561:
   yacc.py:2562:state 37
   yacc.py:2563:
   yacc.py:2565:    (10) def_class -> class error inherits type ocur . feature_list ccur semi
   yacc.py:2565:    (14) feature_list -> . epsilon
   yacc.py:2565:    (15) feature_list -> . def_attr semi feature_list
   yacc.py:2565:    (16) feature_list -> . def_func semi feature_list
   yacc.py:2565:    (17) feature_list -> . error feature_list
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2565:    (18) def_attr -> . id colon type
   yacc.py:2565:    (19) def_attr -> . id colon type larrow expr
   yacc.py:2565:    (20) def_attr -> . error colon type
   yacc.py:2565:    (21) def_attr -> . id colon error
   yacc.py:2565:    (22) def_attr -> . error colon type larrow expr
   yacc.py:2565:    (23) def_attr -> . id colon error larrow expr
   yacc.py:2565:    (24) def_attr -> . id colon type larrow error
   yacc.py:2565:    (25) def_func -> . id opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (26) def_func -> . error opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (27) def_func -> . id opar error cpar colon type ocur expr ccur
   yacc.py:2565:    (28) def_func -> . id opar formals cpar colon error ocur expr ccur
   yacc.py:2565:    (29) def_func -> . id opar formals cpar colon type ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 15
   yacc.py:2687:    ccur            reduce using rule 2 (epsilon -> .)
   yacc.py:2687:    id              shift and go to state 19
   yacc.py:2689:
   yacc.py:2714:    feature_list                   shift and go to state 57
   yacc.py:2714:    epsilon                        shift and go to state 16
   yacc.py:2714:    def_attr                       shift and go to state 17
   yacc.py:2714:    def_func                       shift and go to state 18
   yacc.py:2561:
   yacc.py:2562:state 38
   yacc.py:2563:
   yacc.py:2565:    (6) def_class -> class type ocur feature_list ccur semi .
   yacc.py:2566:
   yacc.py:2687:    error           reduce using rule 6 (def_class -> class type ocur feature_list ccur semi .)
   yacc.py:2687:    class           reduce using rule 6 (def_class -> class type ocur feature_list ccur semi .)
   yacc.py:2687:    $end            reduce using rule 6 (def_class -> class type ocur feature_list ccur semi .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 39
   yacc.py:2563:
   yacc.py:2565:    (9) def_class -> class type ocur feature_list ccur error .
   yacc.py:2566:
   yacc.py:2687:    error           reduce using rule 9 (def_class -> class type ocur feature_list ccur error .)
   yacc.py:2687:    class           reduce using rule 9 (def_class -> class type ocur feature_list ccur error .)
   yacc.py:2687:    $end            reduce using rule 9 (def_class -> class type ocur feature_list ccur error .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 40
   yacc.py:2563:
   yacc.py:2565:    (20) def_attr -> error colon type .
   yacc.py:2565:    (22) def_attr -> error colon type . larrow expr
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 20 (def_attr -> error colon type .)
   yacc.py:2687:    larrow          shift and go to state 58
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 41
   yacc.py:2563:
   yacc.py:2565:    (26) def_func -> error opar formals . cpar colon type ocur expr ccur
   yacc.py:2566:
   yacc.py:2687:    cpar            shift and go to state 59
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 42
   yacc.py:2563:
   yacc.py:2565:    (30) formals -> param_list .
   yacc.py:2566:
   yacc.py:2687:    cpar            reduce using rule 30 (formals -> param_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 43
   yacc.py:2563:
   yacc.py:2565:    (31) formals -> param_list_empty .
   yacc.py:2566:
   yacc.py:2687:    cpar            reduce using rule 31 (formals -> param_list_empty .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 44
   yacc.py:2563:
   yacc.py:2565:    (32) param_list -> param .
   yacc.py:2565:    (33) param_list -> param . comma param_list
   yacc.py:2566:
   yacc.py:2687:    cpar            reduce using rule 32 (param_list -> param .)
   yacc.py:2687:    comma           shift and go to state 60
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 45
   yacc.py:2563:
   yacc.py:2565:    (34) param_list_empty -> epsilon .
   yacc.py:2566:
   yacc.py:2687:    cpar            reduce using rule 34 (param_list_empty -> epsilon .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 46
   yacc.py:2563:
   yacc.py:2565:    (35) param -> id . colon type
   yacc.py:2566:
   yacc.py:2687:    colon           shift and go to state 61
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 47
   yacc.py:2563:
   yacc.py:2565:    (15) feature_list -> def_attr semi feature_list .
   yacc.py:2566:
   yacc.py:2687:    ccur            reduce using rule 15 (feature_list -> def_attr semi feature_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 48
   yacc.py:2563:
   yacc.py:2565:    (16) feature_list -> def_func semi feature_list .
   yacc.py:2566:
   yacc.py:2687:    ccur            reduce using rule 16 (feature_list -> def_func semi feature_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 49
   yacc.py:2563:
   yacc.py:2565:    (18) def_attr -> id colon type .
   yacc.py:2565:    (19) def_attr -> id colon type . larrow expr
   yacc.py:2565:    (24) def_attr -> id colon type . larrow error
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 18 (def_attr -> id colon type .)
   yacc.py:2687:    larrow          shift and go to state 62
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 50
   yacc.py:2563:
   yacc.py:2565:    (21) def_attr -> id colon error .
   yacc.py:2565:    (23) def_attr -> id colon error . larrow expr
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 21 (def_attr -> id colon error .)
   yacc.py:2687:    larrow          shift and go to state 63
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 51
   yacc.py:2563:
   yacc.py:2565:    (25) def_func -> id opar formals . cpar colon type ocur expr ccur
   yacc.py:2565:    (28) def_func -> id opar formals . cpar colon error ocur expr ccur
   yacc.py:2565:    (29) def_func -> id opar formals . cpar colon type ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    cpar            shift and go to state 64
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 52
   yacc.py:2563:
   yacc.py:2565:    (27) def_func -> id opar error . cpar colon type ocur expr ccur
   yacc.py:2566:
   yacc.py:2687:    cpar            shift and go to state 65
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 53
   yacc.py:2563:
   yacc.py:2565:    (7) def_class -> class type inherits type ocur feature_list . ccur semi
   yacc.py:2565:    (13) def_class -> class type inherits type ocur feature_list . ccur error
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 66
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 54
   yacc.py:2563:
   yacc.py:2565:    (12) def_class -> class type inherits error ocur feature_list . ccur semi
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 67
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 55
   yacc.py:2563:
   yacc.py:2565:    (8) def_class -> class error ocur feature_list ccur semi .
   yacc.py:2566:
   yacc.py:2687:    error           reduce using rule 8 (def_class -> class error ocur feature_list ccur semi .)
   yacc.py:2687:    class           reduce using rule 8 (def_class -> class error ocur feature_list ccur semi .)
   yacc.py:2687:    $end            reduce using rule 8 (def_class -> class error ocur feature_list ccur semi .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 56
   yacc.py:2563:
   yacc.py:2565:    (11) def_class -> class error inherits error ocur feature_list . ccur semi
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 68
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 57
   yacc.py:2563:
   yacc.py:2565:    (10) def_class -> class error inherits type ocur feature_list . ccur semi
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 69
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 58
   yacc.py:2563:
   yacc.py:2565:    (22) def_attr -> error colon type larrow . expr
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 71
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 59
   yacc.py:2563:
   yacc.py:2565:    (26) def_func -> error opar formals cpar . colon type ocur expr ccur
   yacc.py:2566:
   yacc.py:2687:    colon           shift and go to state 94
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 60
   yacc.py:2563:
   yacc.py:2565:    (33) param_list -> param comma . param_list
   yacc.py:2565:    (32) param_list -> . param
   yacc.py:2565:    (33) param_list -> . param comma param_list
   yacc.py:2565:    (35) param -> . id colon type
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 46
   yacc.py:2689:
   yacc.py:2714:    param                          shift and go to state 44
   yacc.py:2714:    param_list                     shift and go to state 95
   yacc.py:2561:
   yacc.py:2562:state 61
   yacc.py:2563:
   yacc.py:2565:    (35) param -> id colon . type
   yacc.py:2566:
   yacc.py:2687:    type            shift and go to state 96
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 62
   yacc.py:2563:
   yacc.py:2565:    (19) def_attr -> id colon type larrow . expr
   yacc.py:2565:    (24) def_attr -> id colon type larrow . error
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 98
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 97
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 63
   yacc.py:2563:
   yacc.py:2565:    (23) def_attr -> id colon error larrow . expr
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 99
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 64
   yacc.py:2563:
   yacc.py:2565:    (25) def_func -> id opar formals cpar . colon type ocur expr ccur
   yacc.py:2565:    (28) def_func -> id opar formals cpar . colon error ocur expr ccur
   yacc.py:2565:    (29) def_func -> id opar formals cpar . colon type ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    colon           shift and go to state 100
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 65
   yacc.py:2563:
   yacc.py:2565:    (27) def_func -> id opar error cpar . colon type ocur expr ccur
   yacc.py:2566:
   yacc.py:2687:    colon           shift and go to state 101
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 66
   yacc.py:2563:
   yacc.py:2565:    (7) def_class -> class type inherits type ocur feature_list ccur . semi
   yacc.py:2565:    (13) def_class -> class type inherits type ocur feature_list ccur . error
   yacc.py:2566:
   yacc.py:2687:    semi            shift and go to state 102
   yacc.py:2687:    error           shift and go to state 103
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 67
   yacc.py:2563:
   yacc.py:2565:    (12) def_class -> class type inherits error ocur feature_list ccur . semi
   yacc.py:2566:
   yacc.py:2687:    semi            shift and go to state 104
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 68
   yacc.py:2563:
   yacc.py:2565:    (11) def_class -> class error inherits error ocur feature_list ccur . semi
   yacc.py:2566:
   yacc.py:2687:    semi            shift and go to state 105
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 69
   yacc.py:2563:
   yacc.py:2565:    (10) def_class -> class error inherits type ocur feature_list ccur . semi
   yacc.py:2566:
   yacc.py:2687:    semi            shift and go to state 106
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 70
   yacc.py:2563:
   yacc.py:2565:    (61) base_call -> error . arroba type dot func_call
   yacc.py:2565:    (78) atom -> error . block ccur
   yacc.py:2565:    (90) func_call -> error . opar args cpar
   yacc.py:2565:    (84) block -> . expr semi
   yacc.py:2565:    (85) block -> . expr semi block
   yacc.py:2565:    (86) block -> . error block
   yacc.py:2565:    (87) block -> . error semi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    arroba          shift and go to state 108
   yacc.py:2687:    opar            shift and go to state 110
   yacc.py:2687:    error           shift and go to state 107
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    block                          shift and go to state 109
   yacc.py:2714:    expr                           shift and go to state 111
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 71
   yacc.py:2563:
   yacc.py:2565:    (22) def_attr -> error colon type larrow expr .
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 22 (def_attr -> error colon type larrow expr .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 72
   yacc.py:2563:
   yacc.py:2565:    (45) expr -> id . larrow expr
   yacc.py:2565:    (75) atom -> id .
   yacc.py:2565:    (88) func_call -> id . opar args cpar
   yacc.py:2565:    (89) func_call -> id . opar error cpar
   yacc.py:2566:
   yacc.py:2687:    larrow          shift and go to state 112
   yacc.py:2687:    arroba          reduce using rule 75 (atom -> id .)
   yacc.py:2687:    dot             reduce using rule 75 (atom -> id .)
   yacc.py:2687:    star            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    div             reduce using rule 75 (atom -> id .)
   yacc.py:2687:    plus            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    minus           reduce using rule 75 (atom -> id .)
   yacc.py:2687:    less            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    lesseq          reduce using rule 75 (atom -> id .)
   yacc.py:2687:    equal           reduce using rule 75 (atom -> id .)
   yacc.py:2687:    semi            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    cpar            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    of              reduce using rule 75 (atom -> id .)
   yacc.py:2687:    then            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    loop            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    comma           reduce using rule 75 (atom -> id .)
   yacc.py:2687:    in              reduce using rule 75 (atom -> id .)
   yacc.py:2687:    else            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    pool            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    ccur            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    fi              reduce using rule 75 (atom -> id .)
   yacc.py:2687:    opar            shift and go to state 113
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 73
   yacc.py:2563:
   yacc.py:2565:    (46) expr -> comp .
   yacc.py:2565:    (47) comp -> comp . less op
   yacc.py:2565:    (48) comp -> comp . lesseq op
   yacc.py:2565:    (49) comp -> comp . equal op
   yacc.py:2566:
   yacc.py:2666:  ! shift/reduce conflict for less resolved as shift
   yacc.py:2666:  ! shift/reduce conflict for lesseq resolved as shift
   yacc.py:2666:  ! shift/reduce conflict for equal resolved as shift
   yacc.py:2687:    semi            reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    cpar            reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    arroba          reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    dot             reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    star            reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    div             reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    plus            reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    minus           reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    of              reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    then            reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    loop            reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    comma           reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    in              reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    else            reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    pool            reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    ccur            reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    fi              reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    less            shift and go to state 114
   yacc.py:2687:    lesseq          shift and go to state 115
   yacc.py:2687:    equal           shift and go to state 116
   yacc.py:2689:
   yacc.py:2696:  ! less            [ reduce using rule 46 (expr -> comp .) ]
   yacc.py:2696:  ! lesseq          [ reduce using rule 46 (expr -> comp .) ]
   yacc.py:2696:  ! equal           [ reduce using rule 46 (expr -> comp .) ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 74
   yacc.py:2563:
   yacc.py:2565:    (50) comp -> op .
   yacc.py:2565:    (51) op -> op . plus term
   yacc.py:2565:    (52) op -> op . minus term
   yacc.py:2566:
   yacc.py:2666:  ! shift/reduce conflict for plus resolved as shift
   yacc.py:2666:  ! shift/reduce conflict for minus resolved as shift
   yacc.py:2687:    less            reduce using rule 50 (comp -> op .)
   yacc.py:2687:    lesseq          reduce using rule 50 (comp -> op .)
   yacc.py:2687:    equal           reduce using rule 50 (comp -> op .)
   yacc.py:2687:    semi            reduce using rule 50 (comp -> op .)
   yacc.py:2687:    cpar            reduce using rule 50 (comp -> op .)
   yacc.py:2687:    arroba          reduce using rule 50 (comp -> op .)
   yacc.py:2687:    dot             reduce using rule 50 (comp -> op .)
   yacc.py:2687:    star            reduce using rule 50 (comp -> op .)
   yacc.py:2687:    div             reduce using rule 50 (comp -> op .)
   yacc.py:2687:    of              reduce using rule 50 (comp -> op .)
   yacc.py:2687:    then            reduce using rule 50 (comp -> op .)
   yacc.py:2687:    loop            reduce using rule 50 (comp -> op .)
   yacc.py:2687:    comma           reduce using rule 50 (comp -> op .)
   yacc.py:2687:    in              reduce using rule 50 (comp -> op .)
   yacc.py:2687:    else            reduce using rule 50 (comp -> op .)
   yacc.py:2687:    pool            reduce using rule 50 (comp -> op .)
   yacc.py:2687:    ccur            reduce using rule 50 (comp -> op .)
   yacc.py:2687:    fi              reduce using rule 50 (comp -> op .)
   yacc.py:2687:    plus            shift and go to state 117
   yacc.py:2687:    minus           shift and go to state 118
   yacc.py:2689:
   yacc.py:2696:  ! plus            [ reduce using rule 50 (comp -> op .) ]
   yacc.py:2696:  ! minus           [ reduce using rule 50 (comp -> op .) ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 75
   yacc.py:2563:
   yacc.py:2565:    (53) op -> term .
   yacc.py:2565:    (54) term -> term . star base_call
   yacc.py:2565:    (55) term -> term . div base_call
   yacc.py:2565:    (57) term -> term . star error
   yacc.py:2565:    (58) term -> term . div error
   yacc.py:2566:
   yacc.py:2666:  ! shift/reduce conflict for star resolved as shift
   yacc.py:2666:  ! shift/reduce conflict for div resolved as shift
   yacc.py:2687:    plus            reduce using rule 53 (op -> term .)
   yacc.py:2687:    minus           reduce using rule 53 (op -> term .)
   yacc.py:2687:    less            reduce using rule 53 (op -> term .)
   yacc.py:2687:    lesseq          reduce using rule 53 (op -> term .)
   yacc.py:2687:    equal           reduce using rule 53 (op -> term .)
   yacc.py:2687:    semi            reduce using rule 53 (op -> term .)
   yacc.py:2687:    cpar            reduce using rule 53 (op -> term .)
   yacc.py:2687:    arroba          reduce using rule 53 (op -> term .)
   yacc.py:2687:    dot             reduce using rule 53 (op -> term .)
   yacc.py:2687:    of              reduce using rule 53 (op -> term .)
   yacc.py:2687:    then            reduce using rule 53 (op -> term .)
   yacc.py:2687:    loop            reduce using rule 53 (op -> term .)
   yacc.py:2687:    comma           reduce using rule 53 (op -> term .)
   yacc.py:2687:    in              reduce using rule 53 (op -> term .)
   yacc.py:2687:    else            reduce using rule 53 (op -> term .)
   yacc.py:2687:    pool            reduce using rule 53 (op -> term .)
   yacc.py:2687:    ccur            reduce using rule 53 (op -> term .)
   yacc.py:2687:    fi              reduce using rule 53 (op -> term .)
   yacc.py:2687:    star            shift and go to state 119
   yacc.py:2687:    div             shift and go to state 120
   yacc.py:2689:
   yacc.py:2696:  ! star            [ reduce using rule 53 (op -> term .) ]
   yacc.py:2696:  ! div             [ reduce using rule 53 (op -> term .) ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 76
   yacc.py:2563:
   yacc.py:2565:    (56) term -> base_call .
   yacc.py:2566:
   yacc.py:2687:    star            reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    div             reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    plus            reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    minus           reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    less            reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    lesseq          reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    equal           reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    semi            reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    cpar            reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    arroba          reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    dot             reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    of              reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    then            reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    loop            reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    comma           reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    in              reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    else            reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    pool            reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    ccur            reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    fi              reduce using rule 56 (term -> base_call .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 77
   yacc.py:2563:
   yacc.py:2565:    (59) base_call -> factor . arroba type dot func_call
   yacc.py:2565:    (60) base_call -> factor .
   yacc.py:2565:    (62) base_call -> factor . arroba error dot func_call
   yacc.py:2565:    (65) factor -> factor . dot func_call
   yacc.py:2566:
   yacc.py:2609:  ! shift/reduce conflict for arroba resolved as shift
   yacc.py:2666:  ! shift/reduce conflict for dot resolved as shift
   yacc.py:2687:    arroba          shift and go to state 121
   yacc.py:2687:    star            reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    div             reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    plus            reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    minus           reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    less            reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    lesseq          reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    equal           reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    semi            reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    cpar            reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    of              reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    then            reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    loop            reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    comma           reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    in              reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    else            reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    pool            reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    ccur            reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    fi              reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    dot             shift and go to state 122
   yacc.py:2689:
   yacc.py:2696:  ! arroba          [ reduce using rule 60 (base_call -> factor .) ]
   yacc.py:2696:  ! dot             [ reduce using rule 60 (base_call -> factor .) ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 78
   yacc.py:2563:
   yacc.py:2565:    (67) factor -> func_call .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    dot             reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    star            reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    div             reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    plus            reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    minus           reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    less            reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    lesseq          reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    equal           reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    semi            reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    cpar            reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    of              reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    then            reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    loop            reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    comma           reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    in              reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    else            reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    pool            reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    ccur            reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    fi              reduce using rule 67 (factor -> func_call .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 79
   yacc.py:2563:
   yacc.py:2565:    (63) factor -> atom .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    dot             reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    star            reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    div             reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    plus            reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    minus           reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    less            reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    lesseq          reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    equal           reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    semi            reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    cpar            reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    of              reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    then            reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    loop            reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    comma           reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    in              reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    else            reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    pool            reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    ccur            reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    fi              reduce using rule 63 (factor -> atom .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 80
   yacc.py:2563:
   yacc.py:2565:    (64) factor -> opar . expr cpar
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 123
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 81
   yacc.py:2563:
   yacc.py:2565:    (66) factor -> not . expr
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 124
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 82
   yacc.py:2563:
   yacc.py:2565:    (68) factor -> isvoid . base_call
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    id              shift and go to state 126
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    base_call                      shift and go to state 125
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 83
   yacc.py:2563:
   yacc.py:2565:    (69) factor -> nox . base_call
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    id              shift and go to state 126
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    base_call                      shift and go to state 127
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 84
   yacc.py:2563:
   yacc.py:2565:    (70) factor -> let . let_list in expr
   yacc.py:2565:    (36) let_list -> . let_assign
   yacc.py:2565:    (37) let_list -> . let_assign comma let_list
   yacc.py:2565:    (38) let_assign -> . param larrow expr
   yacc.py:2565:    (39) let_assign -> . param
   yacc.py:2565:    (35) param -> . id colon type
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 46
   yacc.py:2689:
   yacc.py:2714:    let_list                       shift and go to state 128
   yacc.py:2714:    let_assign                     shift and go to state 129
   yacc.py:2714:    param                          shift and go to state 130
   yacc.py:2561:
   yacc.py:2562:state 85
   yacc.py:2563:
   yacc.py:2565:    (71) factor -> case . expr of cases_list esac
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 131
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 86
   yacc.py:2563:
   yacc.py:2565:    (72) factor -> if . expr then expr else expr fi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 132
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 87
   yacc.py:2563:
   yacc.py:2565:    (73) factor -> while . expr loop expr pool
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 133
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 88
   yacc.py:2563:
   yacc.py:2565:    (74) atom -> num .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 74 (atom -> num .)
   yacc.py:2687:    dot             reduce using rule 74 (atom -> num .)
   yacc.py:2687:    star            reduce using rule 74 (atom -> num .)
   yacc.py:2687:    div             reduce using rule 74 (atom -> num .)
   yacc.py:2687:    plus            reduce using rule 74 (atom -> num .)
   yacc.py:2687:    minus           reduce using rule 74 (atom -> num .)
   yacc.py:2687:    less            reduce using rule 74 (atom -> num .)
   yacc.py:2687:    lesseq          reduce using rule 74 (atom -> num .)
   yacc.py:2687:    equal           reduce using rule 74 (atom -> num .)
   yacc.py:2687:    semi            reduce using rule 74 (atom -> num .)
   yacc.py:2687:    cpar            reduce using rule 74 (atom -> num .)
   yacc.py:2687:    of              reduce using rule 74 (atom -> num .)
   yacc.py:2687:    then            reduce using rule 74 (atom -> num .)
   yacc.py:2687:    loop            reduce using rule 74 (atom -> num .)
   yacc.py:2687:    comma           reduce using rule 74 (atom -> num .)
   yacc.py:2687:    in              reduce using rule 74 (atom -> num .)
   yacc.py:2687:    else            reduce using rule 74 (atom -> num .)
   yacc.py:2687:    pool            reduce using rule 74 (atom -> num .)
   yacc.py:2687:    ccur            reduce using rule 74 (atom -> num .)
   yacc.py:2687:    fi              reduce using rule 74 (atom -> num .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 89
   yacc.py:2563:
   yacc.py:2565:    (76) atom -> new . type
   yacc.py:2566:
   yacc.py:2687:    type            shift and go to state 134
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 90
   yacc.py:2563:
   yacc.py:2565:    (77) atom -> ocur . block ccur
   yacc.py:2565:    (79) atom -> ocur . error ccur
   yacc.py:2565:    (80) atom -> ocur . block error
   yacc.py:2565:    (84) block -> . expr semi
   yacc.py:2565:    (85) block -> . expr semi block
   yacc.py:2565:    (86) block -> . error block
   yacc.py:2565:    (87) block -> . error semi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 136
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    block                          shift and go to state 135
   yacc.py:2714:    expr                           shift and go to state 111
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 91
   yacc.py:2563:
   yacc.py:2565:    (81) atom -> true .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 81 (atom -> true .)
   yacc.py:2687:    dot             reduce using rule 81 (atom -> true .)
   yacc.py:2687:    star            reduce using rule 81 (atom -> true .)
   yacc.py:2687:    div             reduce using rule 81 (atom -> true .)
   yacc.py:2687:    plus            reduce using rule 81 (atom -> true .)
   yacc.py:2687:    minus           reduce using rule 81 (atom -> true .)
   yacc.py:2687:    less            reduce using rule 81 (atom -> true .)
   yacc.py:2687:    lesseq          reduce using rule 81 (atom -> true .)
   yacc.py:2687:    equal           reduce using rule 81 (atom -> true .)
   yacc.py:2687:    semi            reduce using rule 81 (atom -> true .)
   yacc.py:2687:    cpar            reduce using rule 81 (atom -> true .)
   yacc.py:2687:    of              reduce using rule 81 (atom -> true .)
   yacc.py:2687:    then            reduce using rule 81 (atom -> true .)
   yacc.py:2687:    loop            reduce using rule 81 (atom -> true .)
   yacc.py:2687:    comma           reduce using rule 81 (atom -> true .)
   yacc.py:2687:    in              reduce using rule 81 (atom -> true .)
   yacc.py:2687:    else            reduce using rule 81 (atom -> true .)
   yacc.py:2687:    pool            reduce using rule 81 (atom -> true .)
   yacc.py:2687:    ccur            reduce using rule 81 (atom -> true .)
   yacc.py:2687:    fi              reduce using rule 81 (atom -> true .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 92
   yacc.py:2563:
   yacc.py:2565:    (82) atom -> false .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 82 (atom -> false .)
   yacc.py:2687:    dot             reduce using rule 82 (atom -> false .)
   yacc.py:2687:    star            reduce using rule 82 (atom -> false .)
   yacc.py:2687:    div             reduce using rule 82 (atom -> false .)
   yacc.py:2687:    plus            reduce using rule 82 (atom -> false .)
   yacc.py:2687:    minus           reduce using rule 82 (atom -> false .)
   yacc.py:2687:    less            reduce using rule 82 (atom -> false .)
   yacc.py:2687:    lesseq          reduce using rule 82 (atom -> false .)
   yacc.py:2687:    equal           reduce using rule 82 (atom -> false .)
   yacc.py:2687:    semi            reduce using rule 82 (atom -> false .)
   yacc.py:2687:    cpar            reduce using rule 82 (atom -> false .)
   yacc.py:2687:    of              reduce using rule 82 (atom -> false .)
   yacc.py:2687:    then            reduce using rule 82 (atom -> false .)
   yacc.py:2687:    loop            reduce using rule 82 (atom -> false .)
   yacc.py:2687:    comma           reduce using rule 82 (atom -> false .)
   yacc.py:2687:    in              reduce using rule 82 (atom -> false .)
   yacc.py:2687:    else            reduce using rule 82 (atom -> false .)
   yacc.py:2687:    pool            reduce using rule 82 (atom -> false .)
   yacc.py:2687:    ccur            reduce using rule 82 (atom -> false .)
   yacc.py:2687:    fi              reduce using rule 82 (atom -> false .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 93
   yacc.py:2563:
   yacc.py:2565:    (83) atom -> string .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 83 (atom -> string .)
   yacc.py:2687:    dot             reduce using rule 83 (atom -> string .)
   yacc.py:2687:    star            reduce using rule 83 (atom -> string .)
   yacc.py:2687:    div             reduce using rule 83 (atom -> string .)
   yacc.py:2687:    plus            reduce using rule 83 (atom -> string .)
   yacc.py:2687:    minus           reduce using rule 83 (atom -> string .)
   yacc.py:2687:    less            reduce using rule 83 (atom -> string .)
   yacc.py:2687:    lesseq          reduce using rule 83 (atom -> string .)
   yacc.py:2687:    equal           reduce using rule 83 (atom -> string .)
   yacc.py:2687:    semi            reduce using rule 83 (atom -> string .)
   yacc.py:2687:    cpar            reduce using rule 83 (atom -> string .)
   yacc.py:2687:    of              reduce using rule 83 (atom -> string .)
   yacc.py:2687:    then            reduce using rule 83 (atom -> string .)
   yacc.py:2687:    loop            reduce using rule 83 (atom -> string .)
   yacc.py:2687:    comma           reduce using rule 83 (atom -> string .)
   yacc.py:2687:    in              reduce using rule 83 (atom -> string .)
   yacc.py:2687:    else            reduce using rule 83 (atom -> string .)
   yacc.py:2687:    pool            reduce using rule 83 (atom -> string .)
   yacc.py:2687:    ccur            reduce using rule 83 (atom -> string .)
   yacc.py:2687:    fi              reduce using rule 83 (atom -> string .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 94
   yacc.py:2563:
   yacc.py:2565:    (26) def_func -> error opar formals cpar colon . type ocur expr ccur
   yacc.py:2566:
   yacc.py:2687:    type            shift and go to state 137
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 95
   yacc.py:2563:
   yacc.py:2565:    (33) param_list -> param comma param_list .
   yacc.py:2566:
   yacc.py:2687:    cpar            reduce using rule 33 (param_list -> param comma param_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 96
   yacc.py:2563:
   yacc.py:2565:    (35) param -> id colon type .
   yacc.py:2566:
   yacc.py:2687:    comma           reduce using rule 35 (param -> id colon type .)
   yacc.py:2687:    cpar            reduce using rule 35 (param -> id colon type .)
   yacc.py:2687:    larrow          reduce using rule 35 (param -> id colon type .)
   yacc.py:2687:    in              reduce using rule 35 (param -> id colon type .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 97
   yacc.py:2563:
   yacc.py:2565:    (19) def_attr -> id colon type larrow expr .
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 19 (def_attr -> id colon type larrow expr .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 98
   yacc.py:2563:
   yacc.py:2565:    (24) def_attr -> id colon type larrow error .
   yacc.py:2565:    (61) base_call -> error . arroba type dot func_call
   yacc.py:2565:    (78) atom -> error . block ccur
   yacc.py:2565:    (90) func_call -> error . opar args cpar
   yacc.py:2565:    (84) block -> . expr semi
   yacc.py:2565:    (85) block -> . expr semi block
   yacc.py:2565:    (86) block -> . error block
   yacc.py:2565:    (87) block -> . error semi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 24 (def_attr -> id colon type larrow error .)
   yacc.py:2687:    arroba          shift and go to state 108
   yacc.py:2687:    opar            shift and go to state 110
   yacc.py:2687:    error           shift and go to state 107
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    block                          shift and go to state 109
   yacc.py:2714:    expr                           shift and go to state 111
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 99
   yacc.py:2563:
   yacc.py:2565:    (23) def_attr -> id colon error larrow expr .
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 23 (def_attr -> id colon error larrow expr .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 100
   yacc.py:2563:
   yacc.py:2565:    (25) def_func -> id opar formals cpar colon . type ocur expr ccur
   yacc.py:2565:    (28) def_func -> id opar formals cpar colon . error ocur expr ccur
   yacc.py:2565:    (29) def_func -> id opar formals cpar colon . type ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    type            shift and go to state 138
   yacc.py:2687:    error           shift and go to state 139
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 101
   yacc.py:2563:
   yacc.py:2565:    (27) def_func -> id opar error cpar colon . type ocur expr ccur
   yacc.py:2566:
   yacc.py:2687:    type            shift and go to state 140
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 102
   yacc.py:2563:
   yacc.py:2565:    (7) def_class -> class type inherits type ocur feature_list ccur semi .
   yacc.py:2566:
   yacc.py:2687:    error           reduce using rule 7 (def_class -> class type inherits type ocur feature_list ccur semi .)
   yacc.py:2687:    class           reduce using rule 7 (def_class -> class type inherits type ocur feature_list ccur semi .)
   yacc.py:2687:    $end            reduce using rule 7 (def_class -> class type inherits type ocur feature_list ccur semi .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 103
   yacc.py:2563:
   yacc.py:2565:    (13) def_class -> class type inherits type ocur feature_list ccur error .
   yacc.py:2566:
   yacc.py:2687:    error           reduce using rule 13 (def_class -> class type inherits type ocur feature_list ccur error .)
   yacc.py:2687:    class           reduce using rule 13 (def_class -> class type inherits type ocur feature_list ccur error .)
   yacc.py:2687:    $end            reduce using rule 13 (def_class -> class type inherits type ocur feature_list ccur error .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 104
   yacc.py:2563:
   yacc.py:2565:    (12) def_class -> class type inherits error ocur feature_list ccur semi .
   yacc.py:2566:
   yacc.py:2687:    error           reduce using rule 12 (def_class -> class type inherits error ocur feature_list ccur semi .)
   yacc.py:2687:    class           reduce using rule 12 (def_class -> class type inherits error ocur feature_list ccur semi .)
   yacc.py:2687:    $end            reduce using rule 12 (def_class -> class type inherits error ocur feature_list ccur semi .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 105
   yacc.py:2563:
   yacc.py:2565:    (11) def_class -> class error inherits error ocur feature_list ccur semi .
   yacc.py:2566:
   yacc.py:2687:    error           reduce using rule 11 (def_class -> class error inherits error ocur feature_list ccur semi .)
   yacc.py:2687:    class           reduce using rule 11 (def_class -> class error inherits error ocur feature_list ccur semi .)
   yacc.py:2687:    $end            reduce using rule 11 (def_class -> class error inherits error ocur feature_list ccur semi .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 106
   yacc.py:2563:
   yacc.py:2565:    (10) def_class -> class error inherits type ocur feature_list ccur semi .
   yacc.py:2566:
   yacc.py:2687:    error           reduce using rule 10 (def_class -> class error inherits type ocur feature_list ccur semi .)
   yacc.py:2687:    class           reduce using rule 10 (def_class -> class error inherits type ocur feature_list ccur semi .)
   yacc.py:2687:    $end            reduce using rule 10 (def_class -> class error inherits type ocur feature_list ccur semi .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 107
   yacc.py:2563:
   yacc.py:2565:    (86) block -> error . block
   yacc.py:2565:    (87) block -> error . semi
   yacc.py:2565:    (61) base_call -> error . arroba type dot func_call
   yacc.py:2565:    (78) atom -> error . block ccur
   yacc.py:2565:    (90) func_call -> error . opar args cpar
   yacc.py:2565:    (84) block -> . expr semi
   yacc.py:2565:    (85) block -> . expr semi block
   yacc.py:2565:    (86) block -> . error block
   yacc.py:2565:    (87) block -> . error semi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    semi            shift and go to state 142
   yacc.py:2687:    arroba          shift and go to state 108
   yacc.py:2687:    opar            shift and go to state 110
   yacc.py:2687:    error           shift and go to state 107
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    block                          shift and go to state 141
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    expr                           shift and go to state 111
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 108
   yacc.py:2563:
   yacc.py:2565:    (61) base_call -> error arroba . type dot func_call
   yacc.py:2566:
   yacc.py:2687:    type            shift and go to state 143
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 109
   yacc.py:2563:
   yacc.py:2565:    (78) atom -> error block . ccur
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 144
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 110
   yacc.py:2563:
   yacc.py:2565:    (90) func_call -> error opar . args cpar
   yacc.py:2565:    (64) factor -> opar . expr cpar
   yacc.py:2565:    (91) args -> . arg_list
   yacc.py:2565:    (92) args -> . arg_list_empty
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (93) arg_list -> . expr
   yacc.py:2565:    (94) arg_list -> . expr comma arg_list
   yacc.py:2565:    (95) arg_list -> . error arg_list
   yacc.py:2565:    (96) arg_list_empty -> . epsilon
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 145
   yacc.py:2687:    cpar            reduce using rule 2 (epsilon -> .)
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    args                           shift and go to state 146
   yacc.py:2714:    expr                           shift and go to state 147
   yacc.py:2714:    arg_list                       shift and go to state 148
   yacc.py:2714:    arg_list_empty                 shift and go to state 149
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    epsilon                        shift and go to state 150
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 111
   yacc.py:2563:
   yacc.py:2565:    (84) block -> expr . semi
   yacc.py:2565:    (85) block -> expr . semi block
   yacc.py:2566:
   yacc.py:2687:    semi            shift and go to state 151
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 112
   yacc.py:2563:
   yacc.py:2565:    (45) expr -> id larrow . expr
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 152
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 113
   yacc.py:2563:
   yacc.py:2565:    (88) func_call -> id opar . args cpar
   yacc.py:2565:    (89) func_call -> id opar . error cpar
   yacc.py:2565:    (91) args -> . arg_list
   yacc.py:2565:    (92) args -> . arg_list_empty
   yacc.py:2565:    (93) arg_list -> . expr
   yacc.py:2565:    (94) arg_list -> . expr comma arg_list
   yacc.py:2565:    (95) arg_list -> . error arg_list
   yacc.py:2565:    (96) arg_list_empty -> . epsilon
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 154
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    cpar            reduce using rule 2 (epsilon -> .)
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    args                           shift and go to state 153
   yacc.py:2714:    arg_list                       shift and go to state 148
   yacc.py:2714:    arg_list_empty                 shift and go to state 149
   yacc.py:2714:    expr                           shift and go to state 155
   yacc.py:2714:    epsilon                        shift and go to state 150
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 114
   yacc.py:2563:
   yacc.py:2565:    (47) comp -> comp less . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    id              shift and go to state 126
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    op                             shift and go to state 156
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 115
   yacc.py:2563:
   yacc.py:2565:    (48) comp -> comp lesseq . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    id              shift and go to state 126
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    op                             shift and go to state 157
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 116
   yacc.py:2563:
   yacc.py:2565:    (49) comp -> comp equal . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    id              shift and go to state 126
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    op                             shift and go to state 158
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 117
   yacc.py:2563:
   yacc.py:2565:    (51) op -> op plus . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    id              shift and go to state 126
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    term                           shift and go to state 159
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 118
   yacc.py:2563:
   yacc.py:2565:    (52) op -> op minus . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    id              shift and go to state 126
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    term                           shift and go to state 160
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 119
   yacc.py:2563:
   yacc.py:2565:    (54) term -> term star . base_call
   yacc.py:2565:    (57) term -> term star . error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 162
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    id              shift and go to state 126
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    base_call                      shift and go to state 161
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 120
   yacc.py:2563:
   yacc.py:2565:    (55) term -> term div . base_call
   yacc.py:2565:    (58) term -> term div . error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 164
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    id              shift and go to state 126
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    base_call                      shift and go to state 163
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 121
   yacc.py:2563:
   yacc.py:2565:    (59) base_call -> factor arroba . type dot func_call
   yacc.py:2565:    (62) base_call -> factor arroba . error dot func_call
   yacc.py:2566:
   yacc.py:2687:    type            shift and go to state 165
   yacc.py:2687:    error           shift and go to state 166
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 122
   yacc.py:2563:
   yacc.py:2565:    (65) factor -> factor dot . func_call
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 168
   yacc.py:2687:    error           shift and go to state 169
   yacc.py:2689:
   yacc.py:2714:    func_call                      shift and go to state 167
   yacc.py:2561:
   yacc.py:2562:state 123
   yacc.py:2563:
   yacc.py:2565:    (64) factor -> opar expr . cpar
   yacc.py:2566:
   yacc.py:2687:    cpar            shift and go to state 170
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 124
   yacc.py:2563:
   yacc.py:2565:    (66) factor -> not expr .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    dot             reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    star            reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    div             reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    plus            reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    minus           reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    less            reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    lesseq          reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    equal           reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    semi            reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    cpar            reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    of              reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    then            reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    loop            reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    comma           reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    in              reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    else            reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    pool            reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    ccur            reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    fi              reduce using rule 66 (factor -> not expr .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 125
   yacc.py:2563:
   yacc.py:2565:    (68) factor -> isvoid base_call .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    dot             reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    star            reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    div             reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    plus            reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    minus           reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    less            reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    lesseq          reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    equal           reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    semi            reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    cpar            reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    of              reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    then            reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    loop            reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    comma           reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    in              reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    else            reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    pool            reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    ccur            reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    fi              reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 126
   yacc.py:2563:
   yacc.py:2565:    (75) atom -> id .
   yacc.py:2565:    (88) func_call -> id . opar args cpar
   yacc.py:2565:    (89) func_call -> id . opar error cpar
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 75 (atom -> id .)
   yacc.py:2687:    dot             reduce using rule 75 (atom -> id .)
   yacc.py:2687:    star            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    div             reduce using rule 75 (atom -> id .)
   yacc.py:2687:    plus            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    minus           reduce using rule 75 (atom -> id .)
   yacc.py:2687:    less            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    lesseq          reduce using rule 75 (atom -> id .)
   yacc.py:2687:    equal           reduce using rule 75 (atom -> id .)
   yacc.py:2687:    semi            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    cpar            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    of              reduce using rule 75 (atom -> id .)
   yacc.py:2687:    then            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    loop            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    comma           reduce using rule 75 (atom -> id .)
   yacc.py:2687:    in              reduce using rule 75 (atom -> id .)
   yacc.py:2687:    else            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    pool            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    ccur            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    fi              reduce using rule 75 (atom -> id .)
   yacc.py:2687:    opar            shift and go to state 113
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 127
   yacc.py:2563:
   yacc.py:2565:    (69) factor -> nox base_call .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    dot             reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    star            reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    div             reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    plus            reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    minus           reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    less            reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    lesseq          reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    equal           reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    semi            reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    cpar            reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    of              reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    then            reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    loop            reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    comma           reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    in              reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    else            reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    pool            reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    ccur            reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    fi              reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 128
   yacc.py:2563:
   yacc.py:2565:    (70) factor -> let let_list . in expr
   yacc.py:2566:
   yacc.py:2687:    in              shift and go to state 171
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 129
   yacc.py:2563:
   yacc.py:2565:    (36) let_list -> let_assign .
   yacc.py:2565:    (37) let_list -> let_assign . comma let_list
   yacc.py:2566:
   yacc.py:2687:    in              reduce using rule 36 (let_list -> let_assign .)
   yacc.py:2687:    comma           shift and go to state 172
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 130
   yacc.py:2563:
   yacc.py:2565:    (38) let_assign -> param . larrow expr
   yacc.py:2565:    (39) let_assign -> param .
   yacc.py:2566:
   yacc.py:2687:    larrow          shift and go to state 173
   yacc.py:2687:    comma           reduce using rule 39 (let_assign -> param .)
   yacc.py:2687:    in              reduce using rule 39 (let_assign -> param .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 131
   yacc.py:2563:
   yacc.py:2565:    (71) factor -> case expr . of cases_list esac
   yacc.py:2566:
   yacc.py:2687:    of              shift and go to state 174
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 132
   yacc.py:2563:
   yacc.py:2565:    (72) factor -> if expr . then expr else expr fi
   yacc.py:2566:
   yacc.py:2687:    then            shift and go to state 175
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 133
   yacc.py:2563:
   yacc.py:2565:    (73) factor -> while expr . loop expr pool
   yacc.py:2566:
   yacc.py:2687:    loop            shift and go to state 176
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 134
   yacc.py:2563:
   yacc.py:2565:    (76) atom -> new type .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    dot             reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    star            reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    div             reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    plus            reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    minus           reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    less            reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    lesseq          reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    equal           reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    semi            reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    cpar            reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    of              reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    then            reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    loop            reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    comma           reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    in              reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    else            reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    pool            reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    ccur            reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    fi              reduce using rule 76 (atom -> new type .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 135
   yacc.py:2563:
   yacc.py:2565:    (77) atom -> ocur block . ccur
   yacc.py:2565:    (80) atom -> ocur block . error
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 177
   yacc.py:2687:    error           shift and go to state 178
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 136
   yacc.py:2563:
   yacc.py:2565:    (79) atom -> ocur error . ccur
   yacc.py:2565:    (86) block -> error . block
   yacc.py:2565:    (87) block -> error . semi
   yacc.py:2565:    (61) base_call -> error . arroba type dot func_call
   yacc.py:2565:    (78) atom -> error . block ccur
   yacc.py:2565:    (90) func_call -> error . opar args cpar
   yacc.py:2565:    (84) block -> . expr semi
   yacc.py:2565:    (85) block -> . expr semi block
   yacc.py:2565:    (86) block -> . error block
   yacc.py:2565:    (87) block -> . error semi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 179
   yacc.py:2687:    semi            shift and go to state 142
   yacc.py:2687:    arroba          shift and go to state 108
   yacc.py:2687:    opar            shift and go to state 110
   yacc.py:2687:    error           shift and go to state 107
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    block                          shift and go to state 141
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    expr                           shift and go to state 111
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 137
   yacc.py:2563:
   yacc.py:2565:    (26) def_func -> error opar formals cpar colon type . ocur expr ccur
   yacc.py:2566:
   yacc.py:2687:    ocur            shift and go to state 180
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 138
   yacc.py:2563:
   yacc.py:2565:    (25) def_func -> id opar formals cpar colon type . ocur expr ccur
   yacc.py:2565:    (29) def_func -> id opar formals cpar colon type . ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    ocur            shift and go to state 181
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 139
   yacc.py:2563:
   yacc.py:2565:    (28) def_func -> id opar formals cpar colon error . ocur expr ccur
   yacc.py:2566:
   yacc.py:2687:    ocur            shift and go to state 182
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 140
   yacc.py:2563:
   yacc.py:2565:    (27) def_func -> id opar error cpar colon type . ocur expr ccur
   yacc.py:2566:
   yacc.py:2687:    ocur            shift and go to state 183
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 141
   yacc.py:2563:
   yacc.py:2565:    (86) block -> error block .
   yacc.py:2565:    (78) atom -> error block . ccur
   yacc.py:2566:
   yacc.py:2666:  ! shift/reduce conflict for ccur resolved as shift
   yacc.py:2687:    error           reduce using rule 86 (block -> error block .)
   yacc.py:2687:    ccur            shift and go to state 144
   yacc.py:2689:
   yacc.py:2696:  ! ccur            [ reduce using rule 86 (block -> error block .) ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 142
   yacc.py:2563:
   yacc.py:2565:    (87) block -> error semi .
   yacc.py:2566:
   yacc.py:2687:    ccur            reduce using rule 87 (block -> error semi .)
   yacc.py:2687:    error           reduce using rule 87 (block -> error semi .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 143
   yacc.py:2563:
   yacc.py:2565:    (61) base_call -> error arroba type . dot func_call
   yacc.py:2566:
   yacc.py:2687:    dot             shift and go to state 184
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 144
   yacc.py:2563:
   yacc.py:2565:    (78) atom -> error block ccur .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    dot             reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    star            reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    div             reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    plus            reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    minus           reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    less            reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    lesseq          reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    equal           reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    semi            reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    cpar            reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    of              reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    then            reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    loop            reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    comma           reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    in              reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    else            reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    pool            reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    ccur            reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    fi              reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 145
   yacc.py:2563:
   yacc.py:2565:    (95) arg_list -> error . arg_list
   yacc.py:2565:    (61) base_call -> error . arroba type dot func_call
   yacc.py:2565:    (78) atom -> error . block ccur
   yacc.py:2565:    (90) func_call -> error . opar args cpar
   yacc.py:2565:    (93) arg_list -> . expr
   yacc.py:2565:    (94) arg_list -> . expr comma arg_list
   yacc.py:2565:    (95) arg_list -> . error arg_list
   yacc.py:2565:    (84) block -> . expr semi
   yacc.py:2565:    (85) block -> . expr semi block
   yacc.py:2565:    (86) block -> . error block
   yacc.py:2565:    (87) block -> . error semi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    arroba          shift and go to state 108
   yacc.py:2687:    opar            shift and go to state 110
   yacc.py:2687:    error           shift and go to state 185
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    arg_list                       shift and go to state 186
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    block                          shift and go to state 109
   yacc.py:2714:    expr                           shift and go to state 187
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 146
   yacc.py:2563:
   yacc.py:2565:    (90) func_call -> error opar args . cpar
   yacc.py:2566:
   yacc.py:2687:    cpar            shift and go to state 188
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 147
   yacc.py:2563:
   yacc.py:2565:    (64) factor -> opar expr . cpar
   yacc.py:2565:    (93) arg_list -> expr .
   yacc.py:2565:    (94) arg_list -> expr . comma arg_list
   yacc.py:2566:
   yacc.py:2609:  ! shift/reduce conflict for cpar resolved as shift
   yacc.py:2687:    cpar            shift and go to state 170
   yacc.py:2687:    comma           shift and go to state 189
   yacc.py:2689:
   yacc.py:2696:  ! cpar            [ reduce using rule 93 (arg_list -> expr .) ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 148
   yacc.py:2563:
   yacc.py:2565:    (91) args -> arg_list .
   yacc.py:2566:
   yacc.py:2687:    cpar            reduce using rule 91 (args -> arg_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 149
   yacc.py:2563:
   yacc.py:2565:    (92) args -> arg_list_empty .
   yacc.py:2566:
   yacc.py:2687:    cpar            reduce using rule 92 (args -> arg_list_empty .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 150
   yacc.py:2563:
   yacc.py:2565:    (96) arg_list_empty -> epsilon .
   yacc.py:2566:
   yacc.py:2687:    cpar            reduce using rule 96 (arg_list_empty -> epsilon .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 151
   yacc.py:2563:
   yacc.py:2565:    (84) block -> expr semi .
   yacc.py:2565:    (85) block -> expr semi . block
   yacc.py:2565:    (84) block -> . expr semi
   yacc.py:2565:    (85) block -> . expr semi block
   yacc.py:2565:    (86) block -> . error block
   yacc.py:2565:    (87) block -> . error semi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2666:  ! shift/reduce conflict for error resolved as shift
   yacc.py:2687:    ccur            reduce using rule 84 (block -> expr semi .)
   yacc.py:2687:    error           shift and go to state 107
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2696:  ! error           [ reduce using rule 84 (block -> expr semi .) ]
   yacc.py:2700:
   yacc.py:2714:    expr                           shift and go to state 111
   yacc.py:2714:    block                          shift and go to state 190
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 152
   yacc.py:2563:
   yacc.py:2565:    (45) expr -> id larrow expr .
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    cpar            reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    arroba          reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    dot             reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    star            reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    div             reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    plus            reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    minus           reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    less            reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    lesseq          reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    equal           reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    of              reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    then            reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    loop            reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    comma           reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    in              reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    else            reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    pool            reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    ccur            reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    fi              reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 153
   yacc.py:2563:
   yacc.py:2565:    (88) func_call -> id opar args . cpar
   yacc.py:2566:
   yacc.py:2687:    cpar            shift and go to state 191
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 154
   yacc.py:2563:
   yacc.py:2565:    (89) func_call -> id opar error . cpar
   yacc.py:2565:    (95) arg_list -> error . arg_list
   yacc.py:2565:    (61) base_call -> error . arroba type dot func_call
   yacc.py:2565:    (78) atom -> error . block ccur
   yacc.py:2565:    (90) func_call -> error . opar args cpar
   yacc.py:2565:    (93) arg_list -> . expr
   yacc.py:2565:    (94) arg_list -> . expr comma arg_list
   yacc.py:2565:    (95) arg_list -> . error arg_list
   yacc.py:2565:    (84) block -> . expr semi
   yacc.py:2565:    (85) block -> . expr semi block
   yacc.py:2565:    (86) block -> . error block
   yacc.py:2565:    (87) block -> . error semi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    cpar            shift and go to state 192
   yacc.py:2687:    arroba          shift and go to state 108
   yacc.py:2687:    opar            shift and go to state 110
   yacc.py:2687:    error           shift and go to state 185
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    arg_list                       shift and go to state 186
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    block                          shift and go to state 109
   yacc.py:2714:    expr                           shift and go to state 187
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 155
   yacc.py:2563:
   yacc.py:2565:    (93) arg_list -> expr .
   yacc.py:2565:    (94) arg_list -> expr . comma arg_list
   yacc.py:2566:
   yacc.py:2687:    cpar            reduce using rule 93 (arg_list -> expr .)
   yacc.py:2687:    comma           shift and go to state 189
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 156
   yacc.py:2563:
   yacc.py:2565:    (47) comp -> comp less op .
   yacc.py:2565:    (51) op -> op . plus term
   yacc.py:2565:    (52) op -> op . minus term
   yacc.py:2566:
   yacc.py:2666:  ! shift/reduce conflict for plus resolved as shift
   yacc.py:2666:  ! shift/reduce conflict for minus resolved as shift
   yacc.py:2687:    less            reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    lesseq          reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    equal           reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    semi            reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    cpar            reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    arroba          reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    dot             reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    star            reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    div             reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    of              reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    then            reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    loop            reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    comma           reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    in              reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    else            reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    pool            reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    ccur            reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    fi              reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    plus            shift and go to state 117
   yacc.py:2687:    minus           shift and go to state 118
   yacc.py:2689:
   yacc.py:2696:  ! plus            [ reduce using rule 47 (comp -> comp less op .) ]
   yacc.py:2696:  ! minus           [ reduce using rule 47 (comp -> comp less op .) ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 157
   yacc.py:2563:
   yacc.py:2565:    (48) comp -> comp lesseq op .
   yacc.py:2565:    (51) op -> op . plus term
   yacc.py:2565:    (52) op -> op . minus term
   yacc.py:2566:
   yacc.py:2666:  ! shift/reduce conflict for plus resolved as shift
   yacc.py:2666:  ! shift/reduce conflict for minus resolved as shift
   yacc.py:2687:    less            reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    lesseq          reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    equal           reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    semi            reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    cpar            reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    arroba          reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    dot             reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    star            reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    div             reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    of              reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    then            reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    loop            reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    comma           reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    in              reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    else            reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    pool            reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    ccur            reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    fi              reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    plus            shift and go to state 117
   yacc.py:2687:    minus           shift and go to state 118
   yacc.py:2689:
   yacc.py:2696:  ! plus            [ reduce using rule 48 (comp -> comp lesseq op .) ]
   yacc.py:2696:  ! minus           [ reduce using rule 48 (comp -> comp lesseq op .) ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 158
   yacc.py:2563:
   yacc.py:2565:    (49) comp -> comp equal op .
   yacc.py:2565:    (51) op -> op . plus term
   yacc.py:2565:    (52) op -> op . minus term
   yacc.py:2566:
   yacc.py:2666:  ! shift/reduce conflict for plus resolved as shift
   yacc.py:2666:  ! shift/reduce conflict for minus resolved as shift
   yacc.py:2687:    less            reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    lesseq          reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    equal           reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    semi            reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    cpar            reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    arroba          reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    dot             reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    star            reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    div             reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    of              reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    then            reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    loop            reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    comma           reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    in              reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    else            reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    pool            reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    ccur            reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    fi              reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    plus            shift and go to state 117
   yacc.py:2687:    minus           shift and go to state 118
   yacc.py:2689:
   yacc.py:2696:  ! plus            [ reduce using rule 49 (comp -> comp equal op .) ]
   yacc.py:2696:  ! minus           [ reduce using rule 49 (comp -> comp equal op .) ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 159
   yacc.py:2563:
   yacc.py:2565:    (51) op -> op plus term .
   yacc.py:2565:    (54) term -> term . star base_call
   yacc.py:2565:    (55) term -> term . div base_call
   yacc.py:2565:    (57) term -> term . star error
   yacc.py:2565:    (58) term -> term . div error
   yacc.py:2566:
   yacc.py:2666:  ! shift/reduce conflict for star resolved as shift
   yacc.py:2666:  ! shift/reduce conflict for div resolved as shift
   yacc.py:2687:    plus            reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    minus           reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    less            reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    lesseq          reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    equal           reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    semi            reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    cpar            reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    arroba          reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    dot             reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    of              reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    then            reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    loop            reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    comma           reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    in              reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    else            reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    pool            reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    ccur            reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    fi              reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    star            shift and go to state 119
   yacc.py:2687:    div             shift and go to state 120
   yacc.py:2689:
   yacc.py:2696:  ! star            [ reduce using rule 51 (op -> op plus term .) ]
   yacc.py:2696:  ! div             [ reduce using rule 51 (op -> op plus term .) ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 160
   yacc.py:2563:
   yacc.py:2565:    (52) op -> op minus term .
   yacc.py:2565:    (54) term -> term . star base_call
   yacc.py:2565:    (55) term -> term . div base_call
   yacc.py:2565:    (57) term -> term . star error
   yacc.py:2565:    (58) term -> term . div error
   yacc.py:2566:
   yacc.py:2666:  ! shift/reduce conflict for star resolved as shift
   yacc.py:2666:  ! shift/reduce conflict for div resolved as shift
   yacc.py:2687:    plus            reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    minus           reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    less            reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    lesseq          reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    equal           reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    semi            reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    cpar            reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    arroba          reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    dot             reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    of              reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    then            reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    loop            reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    comma           reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    in              reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    else            reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    pool            reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    ccur            reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    fi              reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    star            shift and go to state 119
   yacc.py:2687:    div             shift and go to state 120
   yacc.py:2689:
   yacc.py:2696:  ! star            [ reduce using rule 52 (op -> op minus term .) ]
   yacc.py:2696:  ! div             [ reduce using rule 52 (op -> op minus term .) ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 161
   yacc.py:2563:
   yacc.py:2565:    (54) term -> term star base_call .
   yacc.py:2566:
   yacc.py:2687:    star            reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    div             reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    plus            reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    minus           reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    less            reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    lesseq          reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    equal           reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    semi            reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    cpar            reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    arroba          reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    dot             reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    of              reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    then            reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    loop            reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    comma           reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    in              reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    else            reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    pool            reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    ccur            reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    fi              reduce using rule 54 (term -> term star base_call .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 162
   yacc.py:2563:
   yacc.py:2565:    (57) term -> term star error .
   yacc.py:2565:    (61) base_call -> error . arroba type dot func_call
   yacc.py:2565:    (78) atom -> error . block ccur
   yacc.py:2565:    (90) func_call -> error . opar args cpar
   yacc.py:2565:    (84) block -> . expr semi
   yacc.py:2565:    (85) block -> . expr semi block
   yacc.py:2565:    (86) block -> . error block
   yacc.py:2565:    (87) block -> . error semi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2666:  ! shift/reduce conflict for arroba resolved as shift
   yacc.py:2687:    star            reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    div             reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    plus            reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    minus           reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    less            reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    lesseq          reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    equal           reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    semi            reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    cpar            reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    dot             reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    of              reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    then            reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    loop            reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    comma           reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    in              reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    else            reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    pool            reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    ccur            reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    fi              reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    arroba          shift and go to state 108
   yacc.py:2687:    opar            shift and go to state 110
   yacc.py:2687:    error           shift and go to state 107
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2696:  ! arroba          [ reduce using rule 57 (term -> term star error .) ]
   yacc.py:2700:
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    block                          shift and go to state 109
   yacc.py:2714:    expr                           shift and go to state 111
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 163
   yacc.py:2563:
   yacc.py:2565:    (55) term -> term div base_call .
   yacc.py:2566:
   yacc.py:2687:    star            reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    div             reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    plus            reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    minus           reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    less            reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    lesseq          reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    equal           reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    semi            reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    cpar            reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    arroba          reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    dot             reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    of              reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    then            reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    loop            reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    comma           reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    in              reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    else            reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    pool            reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    ccur            reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    fi              reduce using rule 55 (term -> term div base_call .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 164
   yacc.py:2563:
   yacc.py:2565:    (58) term -> term div error .
   yacc.py:2565:    (61) base_call -> error . arroba type dot func_call
   yacc.py:2565:    (78) atom -> error . block ccur
   yacc.py:2565:    (90) func_call -> error . opar args cpar
   yacc.py:2565:    (84) block -> . expr semi
   yacc.py:2565:    (85) block -> . expr semi block
   yacc.py:2565:    (86) block -> . error block
   yacc.py:2565:    (87) block -> . error semi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2666:  ! shift/reduce conflict for arroba resolved as shift
   yacc.py:2687:    star            reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    div             reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    plus            reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    minus           reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    less            reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    lesseq          reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    equal           reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    semi            reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    cpar            reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    dot             reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    of              reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    then            reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    loop            reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    comma           reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    in              reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    else            reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    pool            reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    ccur            reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    fi              reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    arroba          shift and go to state 108
   yacc.py:2687:    opar            shift and go to state 110
   yacc.py:2687:    error           shift and go to state 107
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2696:  ! arroba          [ reduce using rule 58 (term -> term div error .) ]
   yacc.py:2700:
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    block                          shift and go to state 109
   yacc.py:2714:    expr                           shift and go to state 111
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 165
   yacc.py:2563:
   yacc.py:2565:    (59) base_call -> factor arroba type . dot func_call
   yacc.py:2566:
   yacc.py:2687:    dot             shift and go to state 193
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 166
   yacc.py:2563:
   yacc.py:2565:    (62) base_call -> factor arroba error . dot func_call
   yacc.py:2566:
   yacc.py:2687:    dot             shift and go to state 194
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 167
   yacc.py:2563:
   yacc.py:2565:    (65) factor -> factor dot func_call .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    dot             reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    star            reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    div             reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    plus            reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    minus           reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    less            reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    lesseq          reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    equal           reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    semi            reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    cpar            reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    of              reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    then            reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    loop            reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    comma           reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    in              reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    else            reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    pool            reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    ccur            reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    fi              reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 168
   yacc.py:2563:
   yacc.py:2565:    (88) func_call -> id . opar args cpar
   yacc.py:2565:    (89) func_call -> id . opar error cpar
   yacc.py:2566:
   yacc.py:2687:    opar            shift and go to state 113
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 169
   yacc.py:2563:
   yacc.py:2565:    (90) func_call -> error . opar args cpar
   yacc.py:2566:
   yacc.py:2687:    opar            shift and go to state 195
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 170
   yacc.py:2563:
   yacc.py:2565:    (64) factor -> opar expr cpar .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    dot             reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    star            reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    div             reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    plus            reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    minus           reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    less            reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    lesseq          reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    equal           reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    semi            reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    cpar            reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    of              reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    then            reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    loop            reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    comma           reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    in              reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    else            reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    pool            reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    ccur            reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    fi              reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 171
   yacc.py:2563:
   yacc.py:2565:    (70) factor -> let let_list in . expr
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 196
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 172
   yacc.py:2563:
   yacc.py:2565:    (37) let_list -> let_assign comma . let_list
   yacc.py:2565:    (36) let_list -> . let_assign
   yacc.py:2565:    (37) let_list -> . let_assign comma let_list
   yacc.py:2565:    (38) let_assign -> . param larrow expr
   yacc.py:2565:    (39) let_assign -> . param
   yacc.py:2565:    (35) param -> . id colon type
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 46
   yacc.py:2689:
   yacc.py:2714:    let_assign                     shift and go to state 129
   yacc.py:2714:    let_list                       shift and go to state 197
   yacc.py:2714:    param                          shift and go to state 130
   yacc.py:2561:
   yacc.py:2562:state 173
   yacc.py:2563:
   yacc.py:2565:    (38) let_assign -> param larrow . expr
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 198
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 174
   yacc.py:2563:
   yacc.py:2565:    (71) factor -> case expr of . cases_list esac
   yacc.py:2565:    (40) cases_list -> . casep semi
   yacc.py:2565:    (41) cases_list -> . casep semi cases_list
   yacc.py:2565:    (42) cases_list -> . error cases_list
   yacc.py:2565:    (43) cases_list -> . error semi
   yacc.py:2565:    (44) casep -> . id colon type rarrow expr
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 201
   yacc.py:2687:    id              shift and go to state 202
   yacc.py:2689:
   yacc.py:2714:    cases_list                     shift and go to state 199
   yacc.py:2714:    casep                          shift and go to state 200
   yacc.py:2561:
   yacc.py:2562:state 175
   yacc.py:2563:
   yacc.py:2565:    (72) factor -> if expr then . expr else expr fi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 203
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 176
   yacc.py:2563:
   yacc.py:2565:    (73) factor -> while expr loop . expr pool
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 204
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 177
   yacc.py:2563:
   yacc.py:2565:    (77) atom -> ocur block ccur .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    dot             reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    star            reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    div             reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    plus            reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    minus           reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    less            reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    lesseq          reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    equal           reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    semi            reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    cpar            reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    of              reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    then            reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    loop            reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    comma           reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    in              reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    else            reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    pool            reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    ccur            reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    fi              reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 178
   yacc.py:2563:
   yacc.py:2565:    (80) atom -> ocur block error .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    dot             reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    star            reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    div             reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    plus            reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    minus           reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    less            reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    lesseq          reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    equal           reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    semi            reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    cpar            reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    of              reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    then            reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    loop            reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    comma           reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    in              reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    else            reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    pool            reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    ccur            reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    fi              reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 179
   yacc.py:2563:
   yacc.py:2565:    (79) atom -> ocur error ccur .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    dot             reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    star            reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    div             reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    plus            reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    minus           reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    less            reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    lesseq          reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    equal           reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    semi            reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    cpar            reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    of              reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    then            reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    loop            reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    comma           reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    in              reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    else            reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    pool            reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    ccur            reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    fi              reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 180
   yacc.py:2563:
   yacc.py:2565:    (26) def_func -> error opar formals cpar colon type ocur . expr ccur
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 205
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 181
   yacc.py:2563:
   yacc.py:2565:    (25) def_func -> id opar formals cpar colon type ocur . expr ccur
   yacc.py:2565:    (29) def_func -> id opar formals cpar colon type ocur . error ccur
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 207
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 206
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 182
   yacc.py:2563:
   yacc.py:2565:    (28) def_func -> id opar formals cpar colon error ocur . expr ccur
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 208
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 183
   yacc.py:2563:
   yacc.py:2565:    (27) def_func -> id opar error cpar colon type ocur . expr ccur
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 209
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 184
   yacc.py:2563:
   yacc.py:2565:    (61) base_call -> error arroba type dot . func_call
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 168
   yacc.py:2687:    error           shift and go to state 169
   yacc.py:2689:
   yacc.py:2714:    func_call                      shift and go to state 210
   yacc.py:2561:
   yacc.py:2562:state 185
   yacc.py:2563:
   yacc.py:2565:    (95) arg_list -> error . arg_list
   yacc.py:2565:    (86) block -> error . block
   yacc.py:2565:    (87) block -> error . semi
   yacc.py:2565:    (61) base_call -> error . arroba type dot func_call
   yacc.py:2565:    (78) atom -> error . block ccur
   yacc.py:2565:    (90) func_call -> error . opar args cpar
   yacc.py:2565:    (93) arg_list -> . expr
   yacc.py:2565:    (94) arg_list -> . expr comma arg_list
   yacc.py:2565:    (95) arg_list -> . error arg_list
   yacc.py:2565:    (84) block -> . expr semi
   yacc.py:2565:    (85) block -> . expr semi block
   yacc.py:2565:    (86) block -> . error block
   yacc.py:2565:    (87) block -> . error semi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    semi            shift and go to state 142
   yacc.py:2687:    arroba          shift and go to state 108
   yacc.py:2687:    opar            shift and go to state 110
   yacc.py:2687:    error           shift and go to state 185
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    arg_list                       shift and go to state 186
   yacc.py:2714:    block                          shift and go to state 141
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    expr                           shift and go to state 187
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 186
   yacc.py:2563:
   yacc.py:2565:    (95) arg_list -> error arg_list .
   yacc.py:2566:
   yacc.py:2687:    cpar            reduce using rule 95 (arg_list -> error arg_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 187
   yacc.py:2563:
   yacc.py:2565:    (93) arg_list -> expr .
   yacc.py:2565:    (94) arg_list -> expr . comma arg_list
   yacc.py:2565:    (84) block -> expr . semi
   yacc.py:2565:    (85) block -> expr . semi block
   yacc.py:2566:
   yacc.py:2687:    cpar            reduce using rule 93 (arg_list -> expr .)
   yacc.py:2687:    comma           shift and go to state 189
   yacc.py:2687:    semi            shift and go to state 151
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 188
   yacc.py:2563:
   yacc.py:2565:    (90) func_call -> error opar args cpar .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    dot             reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    star            reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    div             reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    plus            reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    minus           reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    less            reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    lesseq          reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    equal           reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    semi            reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    cpar            reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    of              reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    then            reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    loop            reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    comma           reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    in              reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    else            reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    pool            reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    ccur            reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    fi              reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 189
   yacc.py:2563:
   yacc.py:2565:    (94) arg_list -> expr comma . arg_list
   yacc.py:2565:    (93) arg_list -> . expr
   yacc.py:2565:    (94) arg_list -> . expr comma arg_list
   yacc.py:2565:    (95) arg_list -> . error arg_list
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 145
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 155
   yacc.py:2714:    arg_list                       shift and go to state 211
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 190
   yacc.py:2563:
   yacc.py:2565:    (85) block -> expr semi block .
   yacc.py:2566:
   yacc.py:2687:    ccur            reduce using rule 85 (block -> expr semi block .)
   yacc.py:2687:    error           reduce using rule 85 (block -> expr semi block .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 191
   yacc.py:2563:
   yacc.py:2565:    (88) func_call -> id opar args cpar .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    dot             reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    star            reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    div             reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    plus            reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    minus           reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    less            reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    lesseq          reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    equal           reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    semi            reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    cpar            reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    of              reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    then            reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    loop            reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    comma           reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    in              reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    else            reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    pool            reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    ccur            reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    fi              reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 192
   yacc.py:2563:
   yacc.py:2565:    (89) func_call -> id opar error cpar .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    dot             reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    star            reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    div             reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    plus            reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    minus           reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    less            reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    lesseq          reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    equal           reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    semi            reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    cpar            reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    of              reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    then            reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    loop            reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    comma           reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    in              reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    else            reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    pool            reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    ccur            reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    fi              reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 193
   yacc.py:2563:
   yacc.py:2565:    (59) base_call -> factor arroba type dot . func_call
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 168
   yacc.py:2687:    error           shift and go to state 169
   yacc.py:2689:
   yacc.py:2714:    func_call                      shift and go to state 212
   yacc.py:2561:
   yacc.py:2562:state 194
   yacc.py:2563:
   yacc.py:2565:    (62) base_call -> factor arroba error dot . func_call
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 168
   yacc.py:2687:    error           shift and go to state 169
   yacc.py:2689:
   yacc.py:2714:    func_call                      shift and go to state 213
   yacc.py:2561:
   yacc.py:2562:state 195
   yacc.py:2563:
   yacc.py:2565:    (90) func_call -> error opar . args cpar
   yacc.py:2565:    (91) args -> . arg_list
   yacc.py:2565:    (92) args -> . arg_list_empty
   yacc.py:2565:    (93) arg_list -> . expr
   yacc.py:2565:    (94) arg_list -> . expr comma arg_list
   yacc.py:2565:    (95) arg_list -> . error arg_list
   yacc.py:2565:    (96) arg_list_empty -> . epsilon
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 145
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    cpar            reduce using rule 2 (epsilon -> .)
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    args                           shift and go to state 146
   yacc.py:2714:    arg_list                       shift and go to state 148
   yacc.py:2714:    arg_list_empty                 shift and go to state 149
   yacc.py:2714:    expr                           shift and go to state 155
   yacc.py:2714:    epsilon                        shift and go to state 150
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 196
   yacc.py:2563:
   yacc.py:2565:    (70) factor -> let let_list in expr .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    dot             reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    star            reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    div             reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    plus            reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    minus           reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    less            reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    lesseq          reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    equal           reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    semi            reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    cpar            reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    of              reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    then            reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    loop            reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    comma           reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    in              reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    else            reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    pool            reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    ccur            reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    fi              reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 197
   yacc.py:2563:
   yacc.py:2565:    (37) let_list -> let_assign comma let_list .
   yacc.py:2566:
   yacc.py:2687:    in              reduce using rule 37 (let_list -> let_assign comma let_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 198
   yacc.py:2563:
   yacc.py:2565:    (38) let_assign -> param larrow expr .
   yacc.py:2566:
   yacc.py:2687:    comma           reduce using rule 38 (let_assign -> param larrow expr .)
   yacc.py:2687:    in              reduce using rule 38 (let_assign -> param larrow expr .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 199
   yacc.py:2563:
   yacc.py:2565:    (71) factor -> case expr of cases_list . esac
   yacc.py:2566:
   yacc.py:2687:    esac            shift and go to state 214
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 200
   yacc.py:2563:
   yacc.py:2565:    (40) cases_list -> casep . semi
   yacc.py:2565:    (41) cases_list -> casep . semi cases_list
   yacc.py:2566:
   yacc.py:2687:    semi            shift and go to state 215
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 201
   yacc.py:2563:
   yacc.py:2565:    (42) cases_list -> error . cases_list
   yacc.py:2565:    (43) cases_list -> error . semi
   yacc.py:2565:    (40) cases_list -> . casep semi
   yacc.py:2565:    (41) cases_list -> . casep semi cases_list
   yacc.py:2565:    (42) cases_list -> . error cases_list
   yacc.py:2565:    (43) cases_list -> . error semi
   yacc.py:2565:    (44) casep -> . id colon type rarrow expr
   yacc.py:2566:
   yacc.py:2687:    semi            shift and go to state 217
   yacc.py:2687:    error           shift and go to state 201
   yacc.py:2687:    id              shift and go to state 202
   yacc.py:2689:
   yacc.py:2714:    cases_list                     shift and go to state 216
   yacc.py:2714:    casep                          shift and go to state 200
   yacc.py:2561:
   yacc.py:2562:state 202
   yacc.py:2563:
   yacc.py:2565:    (44) casep -> id . colon type rarrow expr
   yacc.py:2566:
   yacc.py:2687:    colon           shift and go to state 218
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 203
   yacc.py:2563:
   yacc.py:2565:    (72) factor -> if expr then expr . else expr fi
   yacc.py:2566:
   yacc.py:2687:    else            shift and go to state 219
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 204
   yacc.py:2563:
   yacc.py:2565:    (73) factor -> while expr loop expr . pool
   yacc.py:2566:
   yacc.py:2687:    pool            shift and go to state 220
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 205
   yacc.py:2563:
   yacc.py:2565:    (26) def_func -> error opar formals cpar colon type ocur expr . ccur
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 221
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 206
   yacc.py:2563:
   yacc.py:2565:    (25) def_func -> id opar formals cpar colon type ocur expr . ccur
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 222
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 207
   yacc.py:2563:
   yacc.py:2565:    (29) def_func -> id opar formals cpar colon type ocur error . ccur
   yacc.py:2565:    (61) base_call -> error . arroba type dot func_call
   yacc.py:2565:    (78) atom -> error . block ccur
   yacc.py:2565:    (90) func_call -> error . opar args cpar
   yacc.py:2565:    (84) block -> . expr semi
   yacc.py:2565:    (85) block -> . expr semi block
   yacc.py:2565:    (86) block -> . error block
   yacc.py:2565:    (87) block -> . error semi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 223
   yacc.py:2687:    arroba          shift and go to state 108
   yacc.py:2687:    opar            shift and go to state 110
   yacc.py:2687:    error           shift and go to state 107
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    block                          shift and go to state 109
   yacc.py:2714:    expr                           shift and go to state 111
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 208
   yacc.py:2563:
   yacc.py:2565:    (28) def_func -> id opar formals cpar colon error ocur expr . ccur
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 224
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 209
   yacc.py:2563:
   yacc.py:2565:    (27) def_func -> id opar error cpar colon type ocur expr . ccur
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 225
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 210
   yacc.py:2563:
   yacc.py:2565:    (61) base_call -> error arroba type dot func_call .
   yacc.py:2566:
   yacc.py:2687:    star            reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    div             reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    plus            reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    minus           reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    less            reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    lesseq          reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    equal           reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    semi            reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    cpar            reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    arroba          reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    dot             reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    of              reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    then            reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    loop            reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    comma           reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    in              reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    else            reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    pool            reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    ccur            reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    fi              reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 211
   yacc.py:2563:
   yacc.py:2565:    (94) arg_list -> expr comma arg_list .
   yacc.py:2566:
   yacc.py:2687:    cpar            reduce using rule 94 (arg_list -> expr comma arg_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 212
   yacc.py:2563:
   yacc.py:2565:    (59) base_call -> factor arroba type dot func_call .
   yacc.py:2566:
   yacc.py:2687:    star            reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    div             reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    plus            reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    minus           reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    less            reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    lesseq          reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    equal           reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    semi            reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    cpar            reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    arroba          reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    dot             reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    of              reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    then            reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    loop            reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    comma           reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    in              reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    else            reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    pool            reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    ccur            reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    fi              reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 213
   yacc.py:2563:
   yacc.py:2565:    (62) base_call -> factor arroba error dot func_call .
   yacc.py:2566:
   yacc.py:2687:    star            reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    div             reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    plus            reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    minus           reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    less            reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    lesseq          reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    equal           reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    semi            reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    cpar            reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    arroba          reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    dot             reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    of              reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    then            reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    loop            reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    comma           reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    in              reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    else            reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    pool            reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    ccur            reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    fi              reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 214
   yacc.py:2563:
   yacc.py:2565:    (71) factor -> case expr of cases_list esac .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    dot             reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    star            reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    div             reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    plus            reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    minus           reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    less            reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    lesseq          reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    equal           reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    semi            reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    cpar            reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    of              reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    then            reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    loop            reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    comma           reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    in              reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    else            reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    pool            reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    ccur            reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    fi              reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 215
   yacc.py:2563:
   yacc.py:2565:    (40) cases_list -> casep semi .
   yacc.py:2565:    (41) cases_list -> casep semi . cases_list
   yacc.py:2565:    (40) cases_list -> . casep semi
   yacc.py:2565:    (41) cases_list -> . casep semi cases_list
   yacc.py:2565:    (42) cases_list -> . error cases_list
   yacc.py:2565:    (43) cases_list -> . error semi
   yacc.py:2565:    (44) casep -> . id colon type rarrow expr
   yacc.py:2566:
   yacc.py:2687:    esac            reduce using rule 40 (cases_list -> casep semi .)
   yacc.py:2687:    error           shift and go to state 201
   yacc.py:2687:    id              shift and go to state 202
   yacc.py:2689:
   yacc.py:2714:    casep                          shift and go to state 200
   yacc.py:2714:    cases_list                     shift and go to state 226
   yacc.py:2561:
   yacc.py:2562:state 216
   yacc.py:2563:
   yacc.py:2565:    (42) cases_list -> error cases_list .
   yacc.py:2566:
   yacc.py:2687:    esac            reduce using rule 42 (cases_list -> error cases_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 217
   yacc.py:2563:
   yacc.py:2565:    (43) cases_list -> error semi .
   yacc.py:2566:
   yacc.py:2687:    esac            reduce using rule 43 (cases_list -> error semi .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 218
   yacc.py:2563:
   yacc.py:2565:    (44) casep -> id colon . type rarrow expr
   yacc.py:2566:
   yacc.py:2687:    type            shift and go to state 227
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 219
   yacc.py:2563:
   yacc.py:2565:    (72) factor -> if expr then expr else . expr fi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 228
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 220
   yacc.py:2563:
   yacc.py:2565:    (73) factor -> while expr loop expr pool .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    dot             reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    star            reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    div             reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    plus            reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    minus           reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    less            reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    lesseq          reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    equal           reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    semi            reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    cpar            reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    of              reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    then            reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    loop            reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    comma           reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    in              reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    else            reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    pool            reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    ccur            reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    fi              reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 221
   yacc.py:2563:
   yacc.py:2565:    (26) def_func -> error opar formals cpar colon type ocur expr ccur .
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 26 (def_func -> error opar formals cpar colon type ocur expr ccur .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 222
   yacc.py:2563:
   yacc.py:2565:    (25) def_func -> id opar formals cpar colon type ocur expr ccur .
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 25 (def_func -> id opar formals cpar colon type ocur expr ccur .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 223
   yacc.py:2563:
   yacc.py:2565:    (29) def_func -> id opar formals cpar colon type ocur error ccur .
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 29 (def_func -> id opar formals cpar colon type ocur error ccur .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 224
   yacc.py:2563:
   yacc.py:2565:    (28) def_func -> id opar formals cpar colon error ocur expr ccur .
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 28 (def_func -> id opar formals cpar colon error ocur expr ccur .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 225
   yacc.py:2563:
   yacc.py:2565:    (27) def_func -> id opar error cpar colon type ocur expr ccur .
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 27 (def_func -> id opar error cpar colon type ocur expr ccur .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 226
   yacc.py:2563:
   yacc.py:2565:    (41) cases_list -> casep semi cases_list .
   yacc.py:2566:
   yacc.py:2687:    esac            reduce using rule 41 (cases_list -> casep semi cases_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 227
   yacc.py:2563:
   yacc.py:2565:    (44) casep -> id colon type . rarrow expr
   yacc.py:2566:
   yacc.py:2687:    rarrow          shift and go to state 229
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 228
   yacc.py:2563:
   yacc.py:2565:    (72) factor -> if expr then expr else expr . fi
   yacc.py:2566:
   yacc.py:2687:    fi              shift and go to state 230
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 229
   yacc.py:2563:
   yacc.py:2565:    (44) casep -> id colon type rarrow . expr
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 231
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 230
   yacc.py:2563:
   yacc.py:2565:    (72) factor -> if expr then expr else expr fi .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    dot             reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    star            reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    div             reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    plus            reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    minus           reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    less            reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    lesseq          reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    equal           reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    semi            reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    cpar            reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    of              reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    then            reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    loop            reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    comma           reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    in              reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    else            reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    pool            reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    ccur            reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    fi              reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 231
   yacc.py:2563:
   yacc.py:2565:    (44) casep -> id colon type rarrow expr .
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 44 (casep -> id colon type rarrow expr .)
   yacc.py:2689:
   yacc.py:3447:24 shift/reduce conflicts
   yacc.py:3457:
   yacc.py:3458:Conflicts:
   yacc.py:3459:
   yacc.py:3462:shift/reduce conflict for less in state 73 resolved as shift
   yacc.py:3462:shift/reduce conflict for lesseq in state 73 resolved as shift
   yacc.py:3462:shift/reduce conflict for equal in state 73 resolved as shift
   yacc.py:3462:shift/reduce conflict for plus in state 74 resolved as shift
   yacc.py:3462:shift/reduce conflict for minus in state 74 resolved as shift
   yacc.py:3462:shift/reduce conflict for star in state 75 resolved as shift
   yacc.py:3462:shift/reduce conflict for div in state 75 resolved as shift
   yacc.py:3462:shift/reduce conflict for arroba in state 77 resolved as shift
   yacc.py:3462:shift/reduce conflict for dot in state 77 resolved as shift
   yacc.py:3462:shift/reduce conflict for ccur in state 141 resolved as shift
   yacc.py:3462:shift/reduce conflict for cpar in state 147 resolved as shift
   yacc.py:3462:shift/reduce conflict for error in state 151 resolved as shift
   yacc.py:3462:shift/reduce conflict for plus in state 156 resolved as shift
   yacc.py:3462:shift/reduce conflict for minus in state 156 resolved as shift
   yacc.py:3462:shift/reduce conflict for plus in state 157 resolved as shift
   yacc.py:3462:shift/reduce conflict for minus in state 157 resolved as shift
   yacc.py:3462:shift/reduce conflict for plus in state 158 resolved as shift
   yacc.py:3462:shift/reduce conflict for minus in state 158 resolved as shift
   yacc.py:3462:shift/reduce conflict for star in state 159 resolved as shift
   yacc.py:3462:shift/reduce conflict for div in state 159 resolved as shift
   yacc.py:3462:shift/reduce conflict for star in state 160 resolved as shift
   yacc.py:3462:shift/reduce conflict for div in state 160 resolved as shift
   yacc.py:3462:shift/reduce conflict for arroba in state 162 resolved as shift
   yacc.py:3462:shift/reduce conflict for arroba in state 164 resolved as shift
   yacc.py:3488:Couldn't create 'parsetab'. [Errno 2] No such file or directory: 'src/output_parser/parsetab.py'
   yacc.py: 362:PLY: PARSE DEBUG START
   yacc.py: 410:
   yacc.py: 411:State  : 0
   yacc.py: 435:Stack  : . LexToken(class,'class',13,377)
   yacc.py: 445:Action : Shift and goto state 5
   yacc.py: 410:
   yacc.py: 411:State  : 5
   yacc.py: 435:Stack  : class . LexToken(type,'A2I',13,383)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 435:Stack  : class type . LexToken(ocur,'{',13,387)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
   yacc.py: 435:Stack  : class type ocur . LexToken(id,'c2i',15,395)
   yacc.py: 445:Action : Shift and goto state 19
   yacc.py: 410:
   yacc.py: 411:State  : 19
   yacc.py: 435:Stack  : class type ocur id . LexToken(opar,'(',15,398)
   yacc.py: 445:Action : Shift and goto state 32
   yacc.py: 410:
   yacc.py: 411:State  : 32
   yacc.py: 435:Stack  : class type ocur id opar . LexToken(id,'char',15,399)
   yacc.py: 445:Action : Shift and goto state 46
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 435:Stack  : class type ocur id opar id . LexToken(colon,':',15,404)
   yacc.py: 445:Action : Shift and goto state 61
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 435:Stack  : class type ocur id opar id colon . LexToken(type,'String',15,406)
   yacc.py: 445:Action : Shift and goto state 96
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : class type ocur id opar id colon type . LexToken(cpar,')',15,412)
   yacc.py: 471:Action : Reduce rule [param -> id colon type] with ['char',':','String'] and goto state 44
   yacc.py: 506:Result : <tuple @ 0x7fa112804188> (('char', 'String'))
   yacc.py: 410:
   yacc.py: 411:State  : 44
   yacc.py: 435:Stack  : class type ocur id opar param . LexToken(cpar,')',15,412)
   yacc.py: 471:Action : Reduce rule [param_list -> param] with [<tuple @ 0x7fa112804188>] and goto state 42
   yacc.py: 506:Result : <list @ 0x7fa11283fb88> ([('char', 'String')])
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 430:Defaulted state 42: Reduce using 30
   yacc.py: 435:Stack  : class type ocur id opar param_list . LexToken(cpar,')',15,412)
   yacc.py: 471:Action : Reduce rule [formals -> param_list] with [<list @ 0x7fa11283fb88>] and goto state 51
   yacc.py: 506:Result : <list @ 0x7fa11283fb88> ([('char', 'String')])
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : class type ocur id opar formals . LexToken(cpar,')',15,412)
   yacc.py: 445:Action : Shift and goto state 64
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 435:Stack  : class type ocur id opar formals cpar . LexToken(colon,':',15,414)
   yacc.py: 445:Action : Shift and goto state 100
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon . LexToken(type,'Int',15,416)
   yacc.py: 445:Action : Shift and goto state 138
   yacc.py: 410:
   yacc.py: 411:State  : 138
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type . LexToken(ocur,'{',15,420)
   yacc.py: 445:Action : Shift and goto state 181
   yacc.py: 410:
   yacc.py: 411:State  : 181
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur . LexToken(if,'if',16,423)
   yacc.py: 445:Action : Shift and goto state 86
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if . LexToken(id,'char',16,426)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if id . LexToken(equal,'=',16,431)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['char'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7fa11291be80> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if atom . LexToken(equal,'=',16,431)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7fa11291be80>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7fa11291be80> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if factor . LexToken(equal,'=',16,431)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7fa11291be80>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7fa11291be80> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if base_call . LexToken(equal,'=',16,431)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7fa11291be80>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7fa11291be80> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if term . LexToken(equal,'=',16,431)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7fa11291be80>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7fa11291be80> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if op . LexToken(equal,'=',16,431)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<VariableNode @ 0x7fa11291be80>] and goto state 73
   yacc.py: 506:Result : <VariableNode @ 0x7fa11291be80> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if comp . LexToken(equal,'=',16,431)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if comp equal . LexToken(string,'0',16,435)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if comp equal string . LexToken(then,'then',16,437)
   yacc.py: 471:Action : Reduce rule [atom -> string] with ['0'] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112988080> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if comp equal atom . LexToken(then,'then',16,437)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7fa112988080>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112988080> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if comp equal factor . LexToken(then,'then',16,437)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantStrNode @ 0x7fa112988080>] and goto state 76
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112988080> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if comp equal base_call . LexToken(then,'then',16,437)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantStrNode @ 0x7fa112988080>] and goto state 75
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112988080> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if comp equal term . LexToken(then,'then',16,437)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantStrNode @ 0x7fa112988080>] and goto state 158
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112988080> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if comp equal op . LexToken(then,'then',16,437)
   yacc.py: 471:Action : Reduce rule [comp -> comp equal op] with [<VariableNode @ 0x7fa11291be80>,'=',<ConstantStrNode @ 0x7fa112988080>] and goto state 73
   yacc.py: 506:Result : <EqualNode @ 0x7fa112936710> (<tools.ast.EqualNode object at 0x7fa1129 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if comp . LexToken(then,'then',16,437)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<EqualNode @ 0x7fa112936710>] and goto state 132
   yacc.py: 506:Result : <EqualNode @ 0x7fa112936710> (<tools.ast.EqualNode object at 0x7fa1129 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr . LexToken(then,'then',16,437)
   yacc.py: 445:Action : Shift and goto state 175
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then . LexToken(num,0.0,16,442)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then num . LexToken(else,'else',16,444)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [0.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1129880f0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then atom . LexToken(else,'else',16,444)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7fa1129880f0>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1129880f0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then factor . LexToken(else,'else',16,444)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7fa1129880f0>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1129880f0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then base_call . LexToken(else,'else',16,444)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7fa1129880f0>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1129880f0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then term . LexToken(else,'else',16,444)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7fa1129880f0>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1129880f0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then op . LexToken(else,'else',16,444)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantNumNode @ 0x7fa1129880f0>] and goto state 73
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1129880f0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then comp . LexToken(else,'else',16,444)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantNumNode @ 0x7fa1129880f0>] and goto state 203
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1129880f0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 203
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr . LexToken(else,'else',16,444)
   yacc.py: 445:Action : Shift and goto state 219
   yacc.py: 410:
   yacc.py: 411:State  : 219
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else . LexToken(if,'if',17,450)
   yacc.py: 445:Action : Shift and goto state 86
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if . LexToken(id,'char',17,453)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if id . LexToken(equal,'=',17,458)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['char'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7fa11291bfd0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if atom . LexToken(equal,'=',17,458)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7fa11291bfd0>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7fa11291bfd0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if factor . LexToken(equal,'=',17,458)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7fa11291bfd0>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7fa11291bfd0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if base_call . LexToken(equal,'=',17,458)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7fa11291bfd0>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7fa11291bfd0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if term . LexToken(equal,'=',17,458)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7fa11291bfd0>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7fa11291bfd0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if op . LexToken(equal,'=',17,458)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<VariableNode @ 0x7fa11291bfd0>] and goto state 73
   yacc.py: 506:Result : <VariableNode @ 0x7fa11291bfd0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if comp . LexToken(equal,'=',17,458)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if comp equal . LexToken(string,'1',17,462)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if comp equal string . LexToken(then,'then',17,464)
   yacc.py: 471:Action : Reduce rule [atom -> string] with ['1'] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112988358> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if comp equal atom . LexToken(then,'then',17,464)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7fa112988358>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112988358> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if comp equal factor . LexToken(then,'then',17,464)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantStrNode @ 0x7fa112988358>] and goto state 76
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112988358> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if comp equal base_call . LexToken(then,'then',17,464)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantStrNode @ 0x7fa112988358>] and goto state 75
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112988358> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if comp equal term . LexToken(then,'then',17,464)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantStrNode @ 0x7fa112988358>] and goto state 158
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112988358> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if comp equal op . LexToken(then,'then',17,464)
   yacc.py: 471:Action : Reduce rule [comp -> comp equal op] with [<VariableNode @ 0x7fa11291bfd0>,'=',<ConstantStrNode @ 0x7fa112988358>] and goto state 73
   yacc.py: 506:Result : <EqualNode @ 0x7fa112988128> (<tools.ast.EqualNode object at 0x7fa1129 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if comp . LexToken(then,'then',17,464)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<EqualNode @ 0x7fa112988128>] and goto state 132
   yacc.py: 506:Result : <EqualNode @ 0x7fa112988128> (<tools.ast.EqualNode object at 0x7fa1129 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr . LexToken(then,'then',17,464)
   yacc.py: 445:Action : Shift and goto state 175
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then . LexToken(num,1.0,17,469)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then num . LexToken(else,'else',17,471)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [1.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1129883c8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then atom . LexToken(else,'else',17,471)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7fa1129883c8>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1129883c8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then factor . LexToken(else,'else',17,471)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7fa1129883c8>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1129883c8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then base_call . LexToken(else,'else',17,471)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7fa1129883c8>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1129883c8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then term . LexToken(else,'else',17,471)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7fa1129883c8>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1129883c8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then op . LexToken(else,'else',17,471)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantNumNode @ 0x7fa1129883c8>] and goto state 73
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1129883c8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then comp . LexToken(else,'else',17,471)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantNumNode @ 0x7fa1129883c8>] and goto state 203
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1129883c8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 203
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr . LexToken(else,'else',17,471)
   yacc.py: 445:Action : Shift and goto state 219
   yacc.py: 410:
   yacc.py: 411:State  : 219
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else . LexToken(if,'if',18,477)
   yacc.py: 445:Action : Shift and goto state 86
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if . LexToken(id,'char',18,480)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if id . LexToken(equal,'=',18,485)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['char'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988438> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if atom . LexToken(equal,'=',18,485)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7fa112988438>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988438> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if factor . LexToken(equal,'=',18,485)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7fa112988438>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988438> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if base_call . LexToken(equal,'=',18,485)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7fa112988438>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988438> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if term . LexToken(equal,'=',18,485)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7fa112988438>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988438> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if op . LexToken(equal,'=',18,485)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<VariableNode @ 0x7fa112988438>] and goto state 73
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988438> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if comp . LexToken(equal,'=',18,485)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if comp equal . LexToken(string,'2',18,489)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if comp equal string . LexToken(then,'then',18,491)
   yacc.py: 471:Action : Reduce rule [atom -> string] with ['2'] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112988630> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if comp equal atom . LexToken(then,'then',18,491)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7fa112988630>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112988630> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if comp equal factor . LexToken(then,'then',18,491)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantStrNode @ 0x7fa112988630>] and goto state 76
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112988630> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if comp equal base_call . LexToken(then,'then',18,491)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantStrNode @ 0x7fa112988630>] and goto state 75
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112988630> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if comp equal term . LexToken(then,'then',18,491)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantStrNode @ 0x7fa112988630>] and goto state 158
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112988630> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if comp equal op . LexToken(then,'then',18,491)
   yacc.py: 471:Action : Reduce rule [comp -> comp equal op] with [<VariableNode @ 0x7fa112988438>,'=',<ConstantStrNode @ 0x7fa112988630>] and goto state 73
   yacc.py: 506:Result : <EqualNode @ 0x7fa112988400> (<tools.ast.EqualNode object at 0x7fa1129 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if comp . LexToken(then,'then',18,491)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<EqualNode @ 0x7fa112988400>] and goto state 132
   yacc.py: 506:Result : <EqualNode @ 0x7fa112988400> (<tools.ast.EqualNode object at 0x7fa1129 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr . LexToken(then,'then',18,491)
   yacc.py: 445:Action : Shift and goto state 175
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then . LexToken(num,2.0,18,496)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then num . LexToken(else,'else',18,498)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [2.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1129886a0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then atom . LexToken(else,'else',18,498)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7fa1129886a0>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1129886a0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then factor . LexToken(else,'else',18,498)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7fa1129886a0>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1129886a0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then base_call . LexToken(else,'else',18,498)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7fa1129886a0>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1129886a0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then term . LexToken(else,'else',18,498)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7fa1129886a0>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1129886a0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then op . LexToken(else,'else',18,498)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantNumNode @ 0x7fa1129886a0>] and goto state 73
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1129886a0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then comp . LexToken(else,'else',18,498)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantNumNode @ 0x7fa1129886a0>] and goto state 203
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1129886a0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 203
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr . LexToken(else,'else',18,498)
   yacc.py: 445:Action : Shift and goto state 219
   yacc.py: 410:
   yacc.py: 411:State  : 219
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else . LexToken(if,'if',19,511)
   yacc.py: 445:Action : Shift and goto state 86
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if . LexToken(id,'char',19,514)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if id . LexToken(equal,'=',19,519)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['char'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988710> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if atom . LexToken(equal,'=',19,519)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7fa112988710>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988710> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if factor . LexToken(equal,'=',19,519)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7fa112988710>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988710> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if base_call . LexToken(equal,'=',19,519)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7fa112988710>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988710> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if term . LexToken(equal,'=',19,519)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7fa112988710>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988710> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if op . LexToken(equal,'=',19,519)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<VariableNode @ 0x7fa112988710>] and goto state 73
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988710> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if comp . LexToken(equal,'=',19,519)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if comp equal . LexToken(string,'3',19,523)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if comp equal string . LexToken(then,'then',19,525)
   yacc.py: 471:Action : Reduce rule [atom -> string] with ['3'] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112988908> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if comp equal atom . LexToken(then,'then',19,525)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7fa112988908>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112988908> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if comp equal factor . LexToken(then,'then',19,525)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantStrNode @ 0x7fa112988908>] and goto state 76
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112988908> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if comp equal base_call . LexToken(then,'then',19,525)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantStrNode @ 0x7fa112988908>] and goto state 75
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112988908> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if comp equal term . LexToken(then,'then',19,525)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantStrNode @ 0x7fa112988908>] and goto state 158
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112988908> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if comp equal op . LexToken(then,'then',19,525)
   yacc.py: 471:Action : Reduce rule [comp -> comp equal op] with [<VariableNode @ 0x7fa112988710>,'=',<ConstantStrNode @ 0x7fa112988908>] and goto state 73
   yacc.py: 506:Result : <EqualNode @ 0x7fa1129886d8> (<tools.ast.EqualNode object at 0x7fa1129 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if comp . LexToken(then,'then',19,525)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<EqualNode @ 0x7fa1129886d8>] and goto state 132
   yacc.py: 506:Result : <EqualNode @ 0x7fa1129886d8> (<tools.ast.EqualNode object at 0x7fa1129 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr . LexToken(then,'then',19,525)
   yacc.py: 445:Action : Shift and goto state 175
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then . LexToken(num,3.0,19,530)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then num . LexToken(else,'else',19,532)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [3.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988978> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then atom . LexToken(else,'else',19,532)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7fa112988978>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988978> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then factor . LexToken(else,'else',19,532)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7fa112988978>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988978> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then base_call . LexToken(else,'else',19,532)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7fa112988978>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988978> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then term . LexToken(else,'else',19,532)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7fa112988978>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988978> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then op . LexToken(else,'else',19,532)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantNumNode @ 0x7fa112988978>] and goto state 73
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988978> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then comp . LexToken(else,'else',19,532)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantNumNode @ 0x7fa112988978>] and goto state 203
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988978> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 203
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr . LexToken(else,'else',19,532)
   yacc.py: 445:Action : Shift and goto state 219
   yacc.py: 410:
   yacc.py: 411:State  : 219
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else . LexToken(if,'if',20,545)
   yacc.py: 445:Action : Shift and goto state 86
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if . LexToken(id,'char',20,548)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if id . LexToken(equal,'=',20,553)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['char'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7fa1129889e8> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if atom . LexToken(equal,'=',20,553)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7fa1129889e8>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7fa1129889e8> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if factor . LexToken(equal,'=',20,553)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7fa1129889e8>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7fa1129889e8> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if base_call . LexToken(equal,'=',20,553)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7fa1129889e8>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7fa1129889e8> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if term . LexToken(equal,'=',20,553)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7fa1129889e8>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7fa1129889e8> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if op . LexToken(equal,'=',20,553)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<VariableNode @ 0x7fa1129889e8>] and goto state 73
   yacc.py: 506:Result : <VariableNode @ 0x7fa1129889e8> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp . LexToken(equal,'=',20,553)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal . LexToken(string,'4',20,557)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal string . LexToken(then,'then',20,559)
   yacc.py: 471:Action : Reduce rule [atom -> string] with ['4'] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112988be0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal atom . LexToken(then,'then',20,559)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7fa112988be0>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112988be0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal factor . LexToken(then,'then',20,559)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantStrNode @ 0x7fa112988be0>] and goto state 76
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112988be0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal base_call . LexToken(then,'then',20,559)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantStrNode @ 0x7fa112988be0>] and goto state 75
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112988be0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal term . LexToken(then,'then',20,559)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantStrNode @ 0x7fa112988be0>] and goto state 158
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112988be0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal op . LexToken(then,'then',20,559)
   yacc.py: 471:Action : Reduce rule [comp -> comp equal op] with [<VariableNode @ 0x7fa1129889e8>,'=',<ConstantStrNode @ 0x7fa112988be0>] and goto state 73
   yacc.py: 506:Result : <EqualNode @ 0x7fa1129889b0> (<tools.ast.EqualNode object at 0x7fa1129 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp . LexToken(then,'then',20,559)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<EqualNode @ 0x7fa1129889b0>] and goto state 132
   yacc.py: 506:Result : <EqualNode @ 0x7fa1129889b0> (<tools.ast.EqualNode object at 0x7fa1129 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr . LexToken(then,'then',20,559)
   yacc.py: 445:Action : Shift and goto state 175
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then . LexToken(num,4.0,20,564)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then num . LexToken(else,'else',20,566)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [4.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988c50> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then atom . LexToken(else,'else',20,566)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7fa112988c50>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988c50> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then factor . LexToken(else,'else',20,566)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7fa112988c50>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988c50> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then base_call . LexToken(else,'else',20,566)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7fa112988c50>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988c50> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then term . LexToken(else,'else',20,566)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7fa112988c50>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988c50> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then op . LexToken(else,'else',20,566)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantNumNode @ 0x7fa112988c50>] and goto state 73
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988c50> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then comp . LexToken(else,'else',20,566)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantNumNode @ 0x7fa112988c50>] and goto state 203
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988c50> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 203
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr . LexToken(else,'else',20,566)
   yacc.py: 445:Action : Shift and goto state 219
   yacc.py: 410:
   yacc.py: 411:State  : 219
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else . LexToken(if,'if',21,579)
   yacc.py: 445:Action : Shift and goto state 86
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if . LexToken(id,'char',21,582)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if id . LexToken(equal,'=',21,587)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['char'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988cc0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if atom . LexToken(equal,'=',21,587)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7fa112988cc0>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988cc0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if factor . LexToken(equal,'=',21,587)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7fa112988cc0>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988cc0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if base_call . LexToken(equal,'=',21,587)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7fa112988cc0>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988cc0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if term . LexToken(equal,'=',21,587)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7fa112988cc0>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988cc0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if op . LexToken(equal,'=',21,587)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<VariableNode @ 0x7fa112988cc0>] and goto state 73
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988cc0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp . LexToken(equal,'=',21,587)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal . LexToken(string,'5',21,591)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal string . LexToken(then,'then',21,593)
   yacc.py: 471:Action : Reduce rule [atom -> string] with ['5'] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112988eb8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal atom . LexToken(then,'then',21,593)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7fa112988eb8>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112988eb8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal factor . LexToken(then,'then',21,593)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantStrNode @ 0x7fa112988eb8>] and goto state 76
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112988eb8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal base_call . LexToken(then,'then',21,593)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantStrNode @ 0x7fa112988eb8>] and goto state 75
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112988eb8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal term . LexToken(then,'then',21,593)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantStrNode @ 0x7fa112988eb8>] and goto state 158
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112988eb8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal op . LexToken(then,'then',21,593)
   yacc.py: 471:Action : Reduce rule [comp -> comp equal op] with [<VariableNode @ 0x7fa112988cc0>,'=',<ConstantStrNode @ 0x7fa112988eb8>] and goto state 73
   yacc.py: 506:Result : <EqualNode @ 0x7fa112988c88> (<tools.ast.EqualNode object at 0x7fa1129 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp . LexToken(then,'then',21,593)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<EqualNode @ 0x7fa112988c88>] and goto state 132
   yacc.py: 506:Result : <EqualNode @ 0x7fa112988c88> (<tools.ast.EqualNode object at 0x7fa1129 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr . LexToken(then,'then',21,593)
   yacc.py: 445:Action : Shift and goto state 175
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then . LexToken(num,5.0,21,598)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then num . LexToken(else,'else',21,600)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [5.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988f28> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then atom . LexToken(else,'else',21,600)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7fa112988f28>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988f28> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then factor . LexToken(else,'else',21,600)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7fa112988f28>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988f28> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then base_call . LexToken(else,'else',21,600)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7fa112988f28>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988f28> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then term . LexToken(else,'else',21,600)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7fa112988f28>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988f28> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then op . LexToken(else,'else',21,600)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantNumNode @ 0x7fa112988f28>] and goto state 73
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988f28> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then comp . LexToken(else,'else',21,600)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantNumNode @ 0x7fa112988f28>] and goto state 203
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988f28> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 203
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr . LexToken(else,'else',21,600)
   yacc.py: 445:Action : Shift and goto state 219
   yacc.py: 410:
   yacc.py: 411:State  : 219
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else . LexToken(if,'if',22,613)
   yacc.py: 445:Action : Shift and goto state 86
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if . LexToken(id,'char',22,616)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if id . LexToken(equal,'=',22,621)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['char'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988f98> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if atom . LexToken(equal,'=',22,621)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7fa112988f98>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988f98> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if factor . LexToken(equal,'=',22,621)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7fa112988f98>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988f98> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if base_call . LexToken(equal,'=',22,621)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7fa112988f98>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988f98> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if term . LexToken(equal,'=',22,621)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7fa112988f98>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988f98> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if op . LexToken(equal,'=',22,621)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<VariableNode @ 0x7fa112988f98>] and goto state 73
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988f98> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp . LexToken(equal,'=',22,621)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal . LexToken(string,'6',22,625)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal string . LexToken(then,'then',22,627)
   yacc.py: 471:Action : Reduce rule [atom -> string] with ['6'] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f21d0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal atom . LexToken(then,'then',22,627)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7fa1127f21d0>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f21d0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal factor . LexToken(then,'then',22,627)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantStrNode @ 0x7fa1127f21d0>] and goto state 76
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f21d0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal base_call . LexToken(then,'then',22,627)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantStrNode @ 0x7fa1127f21d0>] and goto state 75
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f21d0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal term . LexToken(then,'then',22,627)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantStrNode @ 0x7fa1127f21d0>] and goto state 158
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f21d0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal op . LexToken(then,'then',22,627)
   yacc.py: 471:Action : Reduce rule [comp -> comp equal op] with [<VariableNode @ 0x7fa112988f98>,'=',<ConstantStrNode @ 0x7fa1127f21d0>] and goto state 73
   yacc.py: 506:Result : <EqualNode @ 0x7fa1127f2048> (<tools.ast.EqualNode object at 0x7fa1127 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp . LexToken(then,'then',22,627)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<EqualNode @ 0x7fa1127f2048>] and goto state 132
   yacc.py: 506:Result : <EqualNode @ 0x7fa1127f2048> (<tools.ast.EqualNode object at 0x7fa1127 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr . LexToken(then,'then',22,627)
   yacc.py: 445:Action : Shift and goto state 175
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then . LexToken(num,6.0,22,632)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then num . LexToken(else,'else',22,634)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [6.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2240> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then atom . LexToken(else,'else',22,634)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7fa1127f2240>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2240> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then factor . LexToken(else,'else',22,634)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7fa1127f2240>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2240> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then base_call . LexToken(else,'else',22,634)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7fa1127f2240>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2240> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then term . LexToken(else,'else',22,634)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7fa1127f2240>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2240> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then op . LexToken(else,'else',22,634)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantNumNode @ 0x7fa1127f2240>] and goto state 73
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2240> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then comp . LexToken(else,'else',22,634)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantNumNode @ 0x7fa1127f2240>] and goto state 203
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2240> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 203
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr . LexToken(else,'else',22,634)
   yacc.py: 445:Action : Shift and goto state 219
   yacc.py: 410:
   yacc.py: 411:State  : 219
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else . LexToken(if,'if',23,647)
   yacc.py: 445:Action : Shift and goto state 86
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if . LexToken(id,'char',23,650)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if id . LexToken(equal,'=',23,655)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['char'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f22b0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if atom . LexToken(equal,'=',23,655)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7fa1127f22b0>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f22b0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if factor . LexToken(equal,'=',23,655)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7fa1127f22b0>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f22b0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if base_call . LexToken(equal,'=',23,655)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7fa1127f22b0>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f22b0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if term . LexToken(equal,'=',23,655)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7fa1127f22b0>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f22b0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if op . LexToken(equal,'=',23,655)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<VariableNode @ 0x7fa1127f22b0>] and goto state 73
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f22b0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp . LexToken(equal,'=',23,655)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal . LexToken(string,'7',23,659)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal string . LexToken(then,'then',23,661)
   yacc.py: 471:Action : Reduce rule [atom -> string] with ['7'] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f24a8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal atom . LexToken(then,'then',23,661)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7fa1127f24a8>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f24a8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal factor . LexToken(then,'then',23,661)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantStrNode @ 0x7fa1127f24a8>] and goto state 76
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f24a8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal base_call . LexToken(then,'then',23,661)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantStrNode @ 0x7fa1127f24a8>] and goto state 75
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f24a8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal term . LexToken(then,'then',23,661)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantStrNode @ 0x7fa1127f24a8>] and goto state 158
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f24a8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal op . LexToken(then,'then',23,661)
   yacc.py: 471:Action : Reduce rule [comp -> comp equal op] with [<VariableNode @ 0x7fa1127f22b0>,'=',<ConstantStrNode @ 0x7fa1127f24a8>] and goto state 73
   yacc.py: 506:Result : <EqualNode @ 0x7fa1127f2278> (<tools.ast.EqualNode object at 0x7fa1127 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp . LexToken(then,'then',23,661)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<EqualNode @ 0x7fa1127f2278>] and goto state 132
   yacc.py: 506:Result : <EqualNode @ 0x7fa1127f2278> (<tools.ast.EqualNode object at 0x7fa1127 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr . LexToken(then,'then',23,661)
   yacc.py: 445:Action : Shift and goto state 175
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then . LexToken(num,7.0,23,666)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then num . LexToken(else,'else',23,668)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [7.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2518> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then atom . LexToken(else,'else',23,668)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7fa1127f2518>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2518> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then factor . LexToken(else,'else',23,668)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7fa1127f2518>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2518> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then base_call . LexToken(else,'else',23,668)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7fa1127f2518>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2518> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then term . LexToken(else,'else',23,668)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7fa1127f2518>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2518> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then op . LexToken(else,'else',23,668)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantNumNode @ 0x7fa1127f2518>] and goto state 73
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2518> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then comp . LexToken(else,'else',23,668)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantNumNode @ 0x7fa1127f2518>] and goto state 203
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2518> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 203
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr . LexToken(else,'else',23,668)
   yacc.py: 445:Action : Shift and goto state 219
   yacc.py: 410:
   yacc.py: 411:State  : 219
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else . LexToken(if,'if',24,681)
   yacc.py: 445:Action : Shift and goto state 86
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if . LexToken(id,'char',24,684)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if id . LexToken(equal,'=',24,689)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['char'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2588> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if atom . LexToken(equal,'=',24,689)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7fa1127f2588>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2588> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if factor . LexToken(equal,'=',24,689)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7fa1127f2588>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2588> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if base_call . LexToken(equal,'=',24,689)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7fa1127f2588>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2588> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if term . LexToken(equal,'=',24,689)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7fa1127f2588>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2588> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if op . LexToken(equal,'=',24,689)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<VariableNode @ 0x7fa1127f2588>] and goto state 73
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2588> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp . LexToken(equal,'=',24,689)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal . LexToken(string,'8',24,693)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal string . LexToken(then,'then',24,695)
   yacc.py: 471:Action : Reduce rule [atom -> string] with ['8'] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f2780> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal atom . LexToken(then,'then',24,695)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7fa1127f2780>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f2780> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal factor . LexToken(then,'then',24,695)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantStrNode @ 0x7fa1127f2780>] and goto state 76
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f2780> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal base_call . LexToken(then,'then',24,695)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantStrNode @ 0x7fa1127f2780>] and goto state 75
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f2780> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal term . LexToken(then,'then',24,695)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantStrNode @ 0x7fa1127f2780>] and goto state 158
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f2780> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal op . LexToken(then,'then',24,695)
   yacc.py: 471:Action : Reduce rule [comp -> comp equal op] with [<VariableNode @ 0x7fa1127f2588>,'=',<ConstantStrNode @ 0x7fa1127f2780>] and goto state 73
   yacc.py: 506:Result : <EqualNode @ 0x7fa1127f2550> (<tools.ast.EqualNode object at 0x7fa1127 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp . LexToken(then,'then',24,695)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<EqualNode @ 0x7fa1127f2550>] and goto state 132
   yacc.py: 506:Result : <EqualNode @ 0x7fa1127f2550> (<tools.ast.EqualNode object at 0x7fa1127 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr . LexToken(then,'then',24,695)
   yacc.py: 445:Action : Shift and goto state 175
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then . LexToken(num,8.0,24,700)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then num . LexToken(else,'else',24,702)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [8.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f27f0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then atom . LexToken(else,'else',24,702)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7fa1127f27f0>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f27f0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then factor . LexToken(else,'else',24,702)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7fa1127f27f0>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f27f0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then base_call . LexToken(else,'else',24,702)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7fa1127f27f0>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f27f0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then term . LexToken(else,'else',24,702)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7fa1127f27f0>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f27f0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then op . LexToken(else,'else',24,702)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantNumNode @ 0x7fa1127f27f0>] and goto state 73
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f27f0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then comp . LexToken(else,'else',24,702)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantNumNode @ 0x7fa1127f27f0>] and goto state 203
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f27f0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 203
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr . LexToken(else,'else',24,702)
   yacc.py: 445:Action : Shift and goto state 219
   yacc.py: 410:
   yacc.py: 411:State  : 219
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else . LexToken(if,'if',25,715)
   yacc.py: 445:Action : Shift and goto state 86
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if . LexToken(id,'char',25,718)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if id . LexToken(equal,'=',25,723)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['char'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2860> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if atom . LexToken(equal,'=',25,723)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7fa1127f2860>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2860> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if factor . LexToken(equal,'=',25,723)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7fa1127f2860>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2860> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if base_call . LexToken(equal,'=',25,723)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7fa1127f2860>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2860> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if term . LexToken(equal,'=',25,723)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7fa1127f2860>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2860> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if op . LexToken(equal,'=',25,723)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<VariableNode @ 0x7fa1127f2860>] and goto state 73
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2860> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp . LexToken(equal,'=',25,723)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal . LexToken(string,'9',25,727)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal string . LexToken(then,'then',25,729)
   yacc.py: 471:Action : Reduce rule [atom -> string] with ['9'] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f2a58> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal atom . LexToken(then,'then',25,729)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7fa1127f2a58>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f2a58> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal factor . LexToken(then,'then',25,729)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantStrNode @ 0x7fa1127f2a58>] and goto state 76
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f2a58> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal base_call . LexToken(then,'then',25,729)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantStrNode @ 0x7fa1127f2a58>] and goto state 75
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f2a58> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal term . LexToken(then,'then',25,729)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantStrNode @ 0x7fa1127f2a58>] and goto state 158
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f2a58> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal op . LexToken(then,'then',25,729)
   yacc.py: 471:Action : Reduce rule [comp -> comp equal op] with [<VariableNode @ 0x7fa1127f2860>,'=',<ConstantStrNode @ 0x7fa1127f2a58>] and goto state 73
   yacc.py: 506:Result : <EqualNode @ 0x7fa1127f2828> (<tools.ast.EqualNode object at 0x7fa1127 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp . LexToken(then,'then',25,729)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<EqualNode @ 0x7fa1127f2828>] and goto state 132
   yacc.py: 506:Result : <EqualNode @ 0x7fa1127f2828> (<tools.ast.EqualNode object at 0x7fa1127 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr . LexToken(then,'then',25,729)
   yacc.py: 445:Action : Shift and goto state 175
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then . LexToken(num,9.0,25,734)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then num . LexToken(else,'else',25,736)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [9.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2ac8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then atom . LexToken(else,'else',25,736)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7fa1127f2ac8>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2ac8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then factor . LexToken(else,'else',25,736)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7fa1127f2ac8>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2ac8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then base_call . LexToken(else,'else',25,736)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7fa1127f2ac8>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2ac8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then term . LexToken(else,'else',25,736)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7fa1127f2ac8>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2ac8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then op . LexToken(else,'else',25,736)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantNumNode @ 0x7fa1127f2ac8>] and goto state 73
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2ac8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then comp . LexToken(else,'else',25,736)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantNumNode @ 0x7fa1127f2ac8>] and goto state 203
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2ac8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 203
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr . LexToken(else,'else',25,736)
   yacc.py: 445:Action : Shift and goto state 219
   yacc.py: 410:
   yacc.py: 411:State  : 219
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else . LexToken(ocur,'{',26,749)
   yacc.py: 445:Action : Shift and goto state 90
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur . LexToken(id,'abort',26,751)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur id . LexToken(opar,'(',26,756)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur id opar . LexToken(cpar,')',26,757)
   yacc.py: 474:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 150
   yacc.py: 548:Result : <NoneType @ 0x5612b010f0f0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 150
   yacc.py: 430:Defaulted state 150: Reduce using 96
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur id opar epsilon . LexToken(cpar,')',26,757)
   yacc.py: 471:Action : Reduce rule [arg_list_empty -> epsilon] with [None] and goto state 149
   yacc.py: 506:Result : <list @ 0x7fa11283fbc8> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 430:Defaulted state 149: Reduce using 92
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur id opar arg_list_empty . LexToken(cpar,')',26,757)
   yacc.py: 471:Action : Reduce rule [args -> arg_list_empty] with [[]] and goto state 153
   yacc.py: 506:Result : <list @ 0x7fa11283fbc8> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur id opar args . LexToken(cpar,')',26,757)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur id opar args cpar . LexToken(semi,';',26,758)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['abort','(',[],')'] and goto state 78
   yacc.py: 506:Result : <tuple @ 0x7fa112802bc8> (('abort', []))
   yacc.py: 410:
   yacc.py: 411:State  : 78
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur func_call . LexToken(semi,';',26,758)
   yacc.py: 471:Action : Reduce rule [factor -> func_call] with [('abort', [])] and goto state 77
   yacc.py: 506:Result : <StaticCallNode @ 0x7fa1127f2c50> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur factor . LexToken(semi,';',26,758)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<StaticCallNode @ 0x7fa1127f2c50>] and goto state 76
   yacc.py: 506:Result : <StaticCallNode @ 0x7fa1127f2c50> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur base_call . LexToken(semi,';',26,758)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<StaticCallNode @ 0x7fa1127f2c50>] and goto state 75
   yacc.py: 506:Result : <StaticCallNode @ 0x7fa1127f2c50> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur term . LexToken(semi,';',26,758)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<StaticCallNode @ 0x7fa1127f2c50>] and goto state 74
   yacc.py: 506:Result : <StaticCallNode @ 0x7fa1127f2c50> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur op . LexToken(semi,';',26,758)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<StaticCallNode @ 0x7fa1127f2c50>] and goto state 73
   yacc.py: 506:Result : <StaticCallNode @ 0x7fa1127f2c50> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur comp . LexToken(semi,';',26,758)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<StaticCallNode @ 0x7fa1127f2c50>] and goto state 111
   yacc.py: 506:Result : <StaticCallNode @ 0x7fa1127f2c50> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur expr . LexToken(semi,';',26,758)
   yacc.py: 445:Action : Shift and goto state 151
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur expr semi . LexToken(num,0.0,26,760)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur expr semi num . LexToken(semi,';',26,761)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [0.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2c88> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur expr semi atom . LexToken(semi,';',26,761)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7fa1127f2c88>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2c88> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur expr semi factor . LexToken(semi,';',26,761)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7fa1127f2c88>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2c88> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur expr semi base_call . LexToken(semi,';',26,761)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7fa1127f2c88>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2c88> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur expr semi term . LexToken(semi,';',26,761)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7fa1127f2c88>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2c88> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur expr semi op . LexToken(semi,';',26,761)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantNumNode @ 0x7fa1127f2c88>] and goto state 73
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2c88> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur expr semi comp . LexToken(semi,';',26,761)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantNumNode @ 0x7fa1127f2c88>] and goto state 111
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2c88> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur expr semi expr . LexToken(semi,';',26,761)
   yacc.py: 445:Action : Shift and goto state 151
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur expr semi expr semi . LexToken(ccur,'}',26,763)
   yacc.py: 471:Action : Reduce rule [block -> expr semi] with [<ConstantNumNode @ 0x7fa1127f2c88>,';'] and goto state 190
   yacc.py: 506:Result : <list @ 0x7fa11283fe08> ([<tools.ast.ConstantNumNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 190
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur expr semi block . LexToken(ccur,'}',26,763)
   yacc.py: 471:Action : Reduce rule [block -> expr semi block] with [<StaticCallNode @ 0x7fa1127f2c50>,';',<list @ 0x7fa11283fe08>] and goto state 135
   yacc.py: 506:Result : <list @ 0x7fa112840108> ([<tools.ast.StaticCallNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 135
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur block . LexToken(ccur,'}',26,763)
   yacc.py: 445:Action : Shift and goto state 177
   yacc.py: 410:
   yacc.py: 411:State  : 177
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur block ccur . LexToken(fi,'fi',27,819)
   yacc.py: 471:Action : Reduce rule [atom -> ocur block ccur] with ['{',<list @ 0x7fa112840108>,'}'] and goto state 79
   yacc.py: 506:Result : <BlockNode @ 0x7fa1127f2b00> (<tools.ast.BlockNode object at 0x7fa1127 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else atom . LexToken(fi,'fi',27,819)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<BlockNode @ 0x7fa1127f2b00>] and goto state 77
   yacc.py: 506:Result : <BlockNode @ 0x7fa1127f2b00> (<tools.ast.BlockNode object at 0x7fa1127 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else factor . LexToken(fi,'fi',27,819)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<BlockNode @ 0x7fa1127f2b00>] and goto state 76
   yacc.py: 506:Result : <BlockNode @ 0x7fa1127f2b00> (<tools.ast.BlockNode object at 0x7fa1127 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else base_call . LexToken(fi,'fi',27,819)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<BlockNode @ 0x7fa1127f2b00>] and goto state 75
   yacc.py: 506:Result : <BlockNode @ 0x7fa1127f2b00> (<tools.ast.BlockNode object at 0x7fa1127 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else term . LexToken(fi,'fi',27,819)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<BlockNode @ 0x7fa1127f2b00>] and goto state 74
   yacc.py: 506:Result : <BlockNode @ 0x7fa1127f2b00> (<tools.ast.BlockNode object at 0x7fa1127 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else op . LexToken(fi,'fi',27,819)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<BlockNode @ 0x7fa1127f2b00>] and goto state 73
   yacc.py: 506:Result : <BlockNode @ 0x7fa1127f2b00> (<tools.ast.BlockNode object at 0x7fa1127 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else comp . LexToken(fi,'fi',27,819)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<BlockNode @ 0x7fa1127f2b00>] and goto state 228
   yacc.py: 506:Result : <BlockNode @ 0x7fa1127f2b00> (<tools.ast.BlockNode object at 0x7fa1127 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 228
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else expr . LexToken(fi,'fi',27,819)
   yacc.py: 445:Action : Shift and goto state 230
   yacc.py: 410:
   yacc.py: 411:State  : 230
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else expr fi . LexToken(fi,'fi',27,822)
   yacc.py: 471:Action : Reduce rule [factor -> if expr then expr else expr fi] with ['if',<EqualNode @ 0x7fa1127f2828>,'then',<ConstantNumNode @ 0x7fa1127f2ac8>,'else',<BlockNode @ 0x7fa1127f2b00>,'fi'] and goto state 77
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2be0> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else factor . LexToken(fi,'fi',27,822)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConditionalNode @ 0x7fa1127f2be0>] and goto state 76
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2be0> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else base_call . LexToken(fi,'fi',27,822)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConditionalNode @ 0x7fa1127f2be0>] and goto state 75
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2be0> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else term . LexToken(fi,'fi',27,822)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConditionalNode @ 0x7fa1127f2be0>] and goto state 74
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2be0> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else op . LexToken(fi,'fi',27,822)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConditionalNode @ 0x7fa1127f2be0>] and goto state 73
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2be0> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else comp . LexToken(fi,'fi',27,822)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConditionalNode @ 0x7fa1127f2be0>] and goto state 228
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2be0> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 228
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else expr . LexToken(fi,'fi',27,822)
   yacc.py: 445:Action : Shift and goto state 230
   yacc.py: 410:
   yacc.py: 411:State  : 230
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else expr fi . LexToken(fi,'fi',27,825)
   yacc.py: 471:Action : Reduce rule [factor -> if expr then expr else expr fi] with ['if',<EqualNode @ 0x7fa1127f2550>,'then',<ConstantNumNode @ 0x7fa1127f27f0>,'else',<ConditionalNode @ 0x7fa1127f2be0>,'fi'] and goto state 77
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2cf8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else factor . LexToken(fi,'fi',27,825)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConditionalNode @ 0x7fa1127f2cf8>] and goto state 76
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2cf8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else base_call . LexToken(fi,'fi',27,825)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConditionalNode @ 0x7fa1127f2cf8>] and goto state 75
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2cf8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else term . LexToken(fi,'fi',27,825)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConditionalNode @ 0x7fa1127f2cf8>] and goto state 74
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2cf8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else op . LexToken(fi,'fi',27,825)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConditionalNode @ 0x7fa1127f2cf8>] and goto state 73
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2cf8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else comp . LexToken(fi,'fi',27,825)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConditionalNode @ 0x7fa1127f2cf8>] and goto state 228
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2cf8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 228
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else expr . LexToken(fi,'fi',27,825)
   yacc.py: 445:Action : Shift and goto state 230
   yacc.py: 410:
   yacc.py: 411:State  : 230
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else expr fi . LexToken(fi,'fi',27,828)
   yacc.py: 471:Action : Reduce rule [factor -> if expr then expr else expr fi] with ['if',<EqualNode @ 0x7fa1127f2278>,'then',<ConstantNumNode @ 0x7fa1127f2518>,'else',<ConditionalNode @ 0x7fa1127f2cf8>,'fi'] and goto state 77
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2940> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else factor . LexToken(fi,'fi',27,828)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConditionalNode @ 0x7fa1127f2940>] and goto state 76
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2940> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else base_call . LexToken(fi,'fi',27,828)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConditionalNode @ 0x7fa1127f2940>] and goto state 75
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2940> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else term . LexToken(fi,'fi',27,828)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConditionalNode @ 0x7fa1127f2940>] and goto state 74
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2940> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else op . LexToken(fi,'fi',27,828)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConditionalNode @ 0x7fa1127f2940>] and goto state 73
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2940> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else comp . LexToken(fi,'fi',27,828)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConditionalNode @ 0x7fa1127f2940>] and goto state 228
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2940> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 228
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else expr . LexToken(fi,'fi',27,828)
   yacc.py: 445:Action : Shift and goto state 230
   yacc.py: 410:
   yacc.py: 411:State  : 230
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else expr fi . LexToken(fi,'fi',27,831)
   yacc.py: 471:Action : Reduce rule [factor -> if expr then expr else expr fi] with ['if',<EqualNode @ 0x7fa1127f2048>,'then',<ConstantNumNode @ 0x7fa1127f2240>,'else',<ConditionalNode @ 0x7fa1127f2940>,'fi'] and goto state 77
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2668> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else factor . LexToken(fi,'fi',27,831)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConditionalNode @ 0x7fa1127f2668>] and goto state 76
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2668> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else base_call . LexToken(fi,'fi',27,831)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConditionalNode @ 0x7fa1127f2668>] and goto state 75
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2668> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else term . LexToken(fi,'fi',27,831)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConditionalNode @ 0x7fa1127f2668>] and goto state 74
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2668> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else op . LexToken(fi,'fi',27,831)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConditionalNode @ 0x7fa1127f2668>] and goto state 73
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2668> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else comp . LexToken(fi,'fi',27,831)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConditionalNode @ 0x7fa1127f2668>] and goto state 228
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2668> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 228
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else expr . LexToken(fi,'fi',27,831)
   yacc.py: 445:Action : Shift and goto state 230
   yacc.py: 410:
   yacc.py: 411:State  : 230
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else expr fi . LexToken(fi,'fi',27,834)
   yacc.py: 471:Action : Reduce rule [factor -> if expr then expr else expr fi] with ['if',<EqualNode @ 0x7fa112988c88>,'then',<ConstantNumNode @ 0x7fa112988f28>,'else',<ConditionalNode @ 0x7fa1127f2668>,'fi'] and goto state 77
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2390> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else factor . LexToken(fi,'fi',27,834)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConditionalNode @ 0x7fa1127f2390>] and goto state 76
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2390> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else base_call . LexToken(fi,'fi',27,834)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConditionalNode @ 0x7fa1127f2390>] and goto state 75
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2390> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else term . LexToken(fi,'fi',27,834)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConditionalNode @ 0x7fa1127f2390>] and goto state 74
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2390> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else op . LexToken(fi,'fi',27,834)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConditionalNode @ 0x7fa1127f2390>] and goto state 73
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2390> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else comp . LexToken(fi,'fi',27,834)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConditionalNode @ 0x7fa1127f2390>] and goto state 228
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2390> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 228
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else expr . LexToken(fi,'fi',27,834)
   yacc.py: 445:Action : Shift and goto state 230
   yacc.py: 410:
   yacc.py: 411:State  : 230
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else expr fi . LexToken(fi,'fi',27,837)
   yacc.py: 471:Action : Reduce rule [factor -> if expr then expr else expr fi] with ['if',<EqualNode @ 0x7fa1129889b0>,'then',<ConstantNumNode @ 0x7fa112988c50>,'else',<ConditionalNode @ 0x7fa1127f2390>,'fi'] and goto state 77
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112988ef0> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else factor . LexToken(fi,'fi',27,837)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConditionalNode @ 0x7fa112988ef0>] and goto state 76
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112988ef0> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else base_call . LexToken(fi,'fi',27,837)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConditionalNode @ 0x7fa112988ef0>] and goto state 75
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112988ef0> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else term . LexToken(fi,'fi',27,837)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConditionalNode @ 0x7fa112988ef0>] and goto state 74
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112988ef0> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else op . LexToken(fi,'fi',27,837)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConditionalNode @ 0x7fa112988ef0>] and goto state 73
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112988ef0> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else comp . LexToken(fi,'fi',27,837)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConditionalNode @ 0x7fa112988ef0>] and goto state 228
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112988ef0> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 228
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else expr . LexToken(fi,'fi',27,837)
   yacc.py: 445:Action : Shift and goto state 230
   yacc.py: 410:
   yacc.py: 411:State  : 230
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else expr fi . LexToken(fi,'fi',27,840)
   yacc.py: 471:Action : Reduce rule [factor -> if expr then expr else expr fi] with ['if',<EqualNode @ 0x7fa1129886d8>,'then',<ConstantNumNode @ 0x7fa112988978>,'else',<ConditionalNode @ 0x7fa112988ef0>,'fi'] and goto state 77
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112988f60> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else factor . LexToken(fi,'fi',27,840)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConditionalNode @ 0x7fa112988f60>] and goto state 76
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112988f60> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else base_call . LexToken(fi,'fi',27,840)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConditionalNode @ 0x7fa112988f60>] and goto state 75
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112988f60> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else term . LexToken(fi,'fi',27,840)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConditionalNode @ 0x7fa112988f60>] and goto state 74
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112988f60> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else op . LexToken(fi,'fi',27,840)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConditionalNode @ 0x7fa112988f60>] and goto state 73
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112988f60> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else comp . LexToken(fi,'fi',27,840)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConditionalNode @ 0x7fa112988f60>] and goto state 228
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112988f60> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 228
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else expr . LexToken(fi,'fi',27,840)
   yacc.py: 445:Action : Shift and goto state 230
   yacc.py: 410:
   yacc.py: 411:State  : 230
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else expr fi . LexToken(fi,'fi',27,843)
   yacc.py: 471:Action : Reduce rule [factor -> if expr then expr else expr fi] with ['if',<EqualNode @ 0x7fa112988400>,'then',<ConstantNumNode @ 0x7fa1129886a0>,'else',<ConditionalNode @ 0x7fa112988f60>,'fi'] and goto state 77
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112988ac8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor . LexToken(fi,'fi',27,843)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConditionalNode @ 0x7fa112988ac8>] and goto state 76
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112988ac8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else base_call . LexToken(fi,'fi',27,843)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConditionalNode @ 0x7fa112988ac8>] and goto state 75
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112988ac8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else term . LexToken(fi,'fi',27,843)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConditionalNode @ 0x7fa112988ac8>] and goto state 74
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112988ac8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else op . LexToken(fi,'fi',27,843)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConditionalNode @ 0x7fa112988ac8>] and goto state 73
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112988ac8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else comp . LexToken(fi,'fi',27,843)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConditionalNode @ 0x7fa112988ac8>] and goto state 228
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112988ac8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 228
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else expr . LexToken(fi,'fi',27,843)
   yacc.py: 445:Action : Shift and goto state 230
   yacc.py: 410:
   yacc.py: 411:State  : 230
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else if expr then expr else expr fi . LexToken(fi,'fi',27,846)
   yacc.py: 471:Action : Reduce rule [factor -> if expr then expr else expr fi] with ['if',<EqualNode @ 0x7fa112988128>,'then',<ConstantNumNode @ 0x7fa1129883c8>,'else',<ConditionalNode @ 0x7fa112988ac8>,'fi'] and goto state 77
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1129887f0> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else factor . LexToken(fi,'fi',27,846)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConditionalNode @ 0x7fa1129887f0>] and goto state 76
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1129887f0> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else base_call . LexToken(fi,'fi',27,846)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConditionalNode @ 0x7fa1129887f0>] and goto state 75
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1129887f0> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else term . LexToken(fi,'fi',27,846)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConditionalNode @ 0x7fa1129887f0>] and goto state 74
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1129887f0> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else op . LexToken(fi,'fi',27,846)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConditionalNode @ 0x7fa1129887f0>] and goto state 73
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1129887f0> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else comp . LexToken(fi,'fi',27,846)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConditionalNode @ 0x7fa1129887f0>] and goto state 228
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1129887f0> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 228
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else expr . LexToken(fi,'fi',27,846)
   yacc.py: 445:Action : Shift and goto state 230
   yacc.py: 410:
   yacc.py: 411:State  : 230
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur if expr then expr else expr fi . LexToken(ccur,'}',28,854)
   yacc.py: 471:Action : Reduce rule [factor -> if expr then expr else expr fi] with ['if',<EqualNode @ 0x7fa112936710>,'then',<ConstantNumNode @ 0x7fa1129880f0>,'else',<ConditionalNode @ 0x7fa1129887f0>,'fi'] and goto state 77
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112988518> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur factor . LexToken(ccur,'}',28,854)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConditionalNode @ 0x7fa112988518>] and goto state 76
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112988518> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur base_call . LexToken(ccur,'}',28,854)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConditionalNode @ 0x7fa112988518>] and goto state 75
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112988518> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur term . LexToken(ccur,'}',28,854)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConditionalNode @ 0x7fa112988518>] and goto state 74
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112988518> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur op . LexToken(ccur,'}',28,854)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConditionalNode @ 0x7fa112988518>] and goto state 73
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112988518> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur comp . LexToken(ccur,'}',28,854)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConditionalNode @ 0x7fa112988518>] and goto state 206
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112988518> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 206
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur expr . LexToken(ccur,'}',28,854)
   yacc.py: 445:Action : Shift and goto state 222
   yacc.py: 410:
   yacc.py: 411:State  : 222
   yacc.py: 430:Defaulted state 222: Reduce using 25
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur expr ccur . None
   yacc.py: 471:Action : Reduce rule [def_func -> id opar formals cpar colon type ocur expr ccur] with ['c2i','(',<list @ 0x7fa11283fb88>,')',':','Int','{',<ConditionalNode @ 0x7fa112988518>,'}'] and goto state 18
   yacc.py: 506:Result : <FuncDeclarationNode @ 0x7fa11291bf60> (<tools.ast.FuncDeclarationNode object at ...)
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 435:Stack  : class type ocur def_func . LexToken(semi,';',28,855)
   yacc.py: 445:Action : Shift and goto state 30
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 435:Stack  : class type ocur def_func semi . LexToken(id,'i2c',33,899)
   yacc.py: 445:Action : Shift and goto state 19
   yacc.py: 410:
   yacc.py: 411:State  : 19
   yacc.py: 435:Stack  : class type ocur def_func semi id . LexToken(opar,'(',33,902)
   yacc.py: 445:Action : Shift and goto state 32
   yacc.py: 410:
   yacc.py: 411:State  : 32
   yacc.py: 435:Stack  : class type ocur def_func semi id opar . LexToken(id,'i',33,903)
   yacc.py: 445:Action : Shift and goto state 46
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 435:Stack  : class type ocur def_func semi id opar id . LexToken(colon,':',33,905)
   yacc.py: 445:Action : Shift and goto state 61
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 435:Stack  : class type ocur def_func semi id opar id colon . LexToken(type,'Int',33,907)
   yacc.py: 445:Action : Shift and goto state 96
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : class type ocur def_func semi id opar id colon type . LexToken(cpar,')',33,910)
   yacc.py: 471:Action : Reduce rule [param -> id colon type] with ['i',':','Int'] and goto state 44
   yacc.py: 506:Result : <tuple @ 0x7fa112802bc8> (('i', 'Int'))
   yacc.py: 410:
   yacc.py: 411:State  : 44
   yacc.py: 435:Stack  : class type ocur def_func semi id opar param . LexToken(cpar,')',33,910)
   yacc.py: 471:Action : Reduce rule [param_list -> param] with [('i', 'Int')] and goto state 42
   yacc.py: 506:Result : <list @ 0x7fa112840048> ([('i', 'Int')])
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 430:Defaulted state 42: Reduce using 30
   yacc.py: 435:Stack  : class type ocur def_func semi id opar param_list . LexToken(cpar,')',33,910)
   yacc.py: 471:Action : Reduce rule [formals -> param_list] with [[('i', 'Int')]] and goto state 51
   yacc.py: 506:Result : <list @ 0x7fa112840048> ([('i', 'Int')])
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals . LexToken(cpar,')',33,910)
   yacc.py: 445:Action : Shift and goto state 64
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar . LexToken(colon,':',33,912)
   yacc.py: 445:Action : Shift and goto state 100
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon . LexToken(type,'String',33,914)
   yacc.py: 445:Action : Shift and goto state 138
   yacc.py: 410:
   yacc.py: 411:State  : 138
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type . LexToken(ocur,'{',33,921)
   yacc.py: 445:Action : Shift and goto state 181
   yacc.py: 410:
   yacc.py: 411:State  : 181
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur . LexToken(if,'if',34,924)
   yacc.py: 445:Action : Shift and goto state 86
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if . LexToken(id,'i',34,927)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if id . LexToken(equal,'=',34,929)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['i'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7fa112936518> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if atom . LexToken(equal,'=',34,929)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7fa112936518>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7fa112936518> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if factor . LexToken(equal,'=',34,929)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7fa112936518>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7fa112936518> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if base_call . LexToken(equal,'=',34,929)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7fa112936518>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7fa112936518> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if term . LexToken(equal,'=',34,929)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7fa112936518>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7fa112936518> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if op . LexToken(equal,'=',34,929)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<VariableNode @ 0x7fa112936518>] and goto state 73
   yacc.py: 506:Result : <VariableNode @ 0x7fa112936518> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if comp . LexToken(equal,'=',34,929)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if comp equal . LexToken(num,0.0,34,931)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if comp equal num . LexToken(then,'then',34,933)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [0.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988278> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if comp equal atom . LexToken(then,'then',34,933)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7fa112988278>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988278> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if comp equal factor . LexToken(then,'then',34,933)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7fa112988278>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988278> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if comp equal base_call . LexToken(then,'then',34,933)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7fa112988278>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988278> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if comp equal term . LexToken(then,'then',34,933)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7fa112988278>] and goto state 158
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988278> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if comp equal op . LexToken(then,'then',34,933)
   yacc.py: 471:Action : Reduce rule [comp -> comp equal op] with [<VariableNode @ 0x7fa112936518>,'=',<ConstantNumNode @ 0x7fa112988278>] and goto state 73
   yacc.py: 506:Result : <EqualNode @ 0x7fa1129364a8> (<tools.ast.EqualNode object at 0x7fa1129 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if comp . LexToken(then,'then',34,933)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<EqualNode @ 0x7fa1129364a8>] and goto state 132
   yacc.py: 506:Result : <EqualNode @ 0x7fa1129364a8> (<tools.ast.EqualNode object at 0x7fa1129 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr . LexToken(then,'then',34,933)
   yacc.py: 445:Action : Shift and goto state 175
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then . LexToken(string,'0',34,940)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then string . LexToken(else,'else',34,942)
   yacc.py: 471:Action : Reduce rule [atom -> string] with ['0'] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1129882e8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then atom . LexToken(else,'else',34,942)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7fa1129882e8>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1129882e8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then factor . LexToken(else,'else',34,942)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantStrNode @ 0x7fa1129882e8>] and goto state 76
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1129882e8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then base_call . LexToken(else,'else',34,942)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantStrNode @ 0x7fa1129882e8>] and goto state 75
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1129882e8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then term . LexToken(else,'else',34,942)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantStrNode @ 0x7fa1129882e8>] and goto state 74
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1129882e8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then op . LexToken(else,'else',34,942)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantStrNode @ 0x7fa1129882e8>] and goto state 73
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1129882e8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then comp . LexToken(else,'else',34,942)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantStrNode @ 0x7fa1129882e8>] and goto state 203
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1129882e8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 203
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr . LexToken(else,'else',34,942)
   yacc.py: 445:Action : Shift and goto state 219
   yacc.py: 410:
   yacc.py: 411:State  : 219
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else . LexToken(if,'if',35,948)
   yacc.py: 445:Action : Shift and goto state 86
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if . LexToken(id,'i',35,951)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if id . LexToken(equal,'=',35,953)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['i'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988470> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if atom . LexToken(equal,'=',35,953)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7fa112988470>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988470> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if factor . LexToken(equal,'=',35,953)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7fa112988470>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988470> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if base_call . LexToken(equal,'=',35,953)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7fa112988470>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988470> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if term . LexToken(equal,'=',35,953)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7fa112988470>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988470> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if op . LexToken(equal,'=',35,953)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<VariableNode @ 0x7fa112988470>] and goto state 73
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988470> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if comp . LexToken(equal,'=',35,953)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if comp equal . LexToken(num,1.0,35,955)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if comp equal num . LexToken(then,'then',35,957)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [1.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988668> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if comp equal atom . LexToken(then,'then',35,957)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7fa112988668>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988668> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if comp equal factor . LexToken(then,'then',35,957)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7fa112988668>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988668> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if comp equal base_call . LexToken(then,'then',35,957)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7fa112988668>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988668> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if comp equal term . LexToken(then,'then',35,957)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7fa112988668>] and goto state 158
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988668> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if comp equal op . LexToken(then,'then',35,957)
   yacc.py: 471:Action : Reduce rule [comp -> comp equal op] with [<VariableNode @ 0x7fa112988470>,'=',<ConstantNumNode @ 0x7fa112988668>] and goto state 73
   yacc.py: 506:Result : <EqualNode @ 0x7fa112988240> (<tools.ast.EqualNode object at 0x7fa1129 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if comp . LexToken(then,'then',35,957)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<EqualNode @ 0x7fa112988240>] and goto state 132
   yacc.py: 506:Result : <EqualNode @ 0x7fa112988240> (<tools.ast.EqualNode object at 0x7fa1129 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr . LexToken(then,'then',35,957)
   yacc.py: 445:Action : Shift and goto state 175
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then . LexToken(string,'1',35,964)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then string . LexToken(else,'else',35,966)
   yacc.py: 471:Action : Reduce rule [atom -> string] with ['1'] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1129885f8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then atom . LexToken(else,'else',35,966)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7fa1129885f8>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1129885f8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor . LexToken(else,'else',35,966)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantStrNode @ 0x7fa1129885f8>] and goto state 76
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1129885f8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then base_call . LexToken(else,'else',35,966)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantStrNode @ 0x7fa1129885f8>] and goto state 75
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1129885f8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then term . LexToken(else,'else',35,966)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantStrNode @ 0x7fa1129885f8>] and goto state 74
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1129885f8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then op . LexToken(else,'else',35,966)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantStrNode @ 0x7fa1129885f8>] and goto state 73
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1129885f8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then comp . LexToken(else,'else',35,966)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantStrNode @ 0x7fa1129885f8>] and goto state 203
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1129885f8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 203
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr . LexToken(else,'else',35,966)
   yacc.py: 445:Action : Shift and goto state 219
   yacc.py: 410:
   yacc.py: 411:State  : 219
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else . LexToken(if,'if',36,972)
   yacc.py: 445:Action : Shift and goto state 86
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if . LexToken(id,'i',36,975)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if id . LexToken(equal,'=',36,977)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['i'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988a20> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if atom . LexToken(equal,'=',36,977)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7fa112988a20>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988a20> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if factor . LexToken(equal,'=',36,977)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7fa112988a20>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988a20> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if base_call . LexToken(equal,'=',36,977)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7fa112988a20>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988a20> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if term . LexToken(equal,'=',36,977)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7fa112988a20>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988a20> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if op . LexToken(equal,'=',36,977)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<VariableNode @ 0x7fa112988a20>] and goto state 73
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988a20> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if comp . LexToken(equal,'=',36,977)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if comp equal . LexToken(num,2.0,36,979)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if comp equal num . LexToken(then,'then',36,981)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [2.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988d68> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if comp equal atom . LexToken(then,'then',36,981)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7fa112988d68>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988d68> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if comp equal factor . LexToken(then,'then',36,981)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7fa112988d68>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988d68> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if comp equal base_call . LexToken(then,'then',36,981)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7fa112988d68>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988d68> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if comp equal term . LexToken(then,'then',36,981)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7fa112988d68>] and goto state 158
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988d68> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if comp equal op . LexToken(then,'then',36,981)
   yacc.py: 471:Action : Reduce rule [comp -> comp equal op] with [<VariableNode @ 0x7fa112988a20>,'=',<ConstantNumNode @ 0x7fa112988d68>] and goto state 73
   yacc.py: 506:Result : <EqualNode @ 0x7fa112988b00> (<tools.ast.EqualNode object at 0x7fa1129 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if comp . LexToken(then,'then',36,981)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<EqualNode @ 0x7fa112988b00>] and goto state 132
   yacc.py: 506:Result : <EqualNode @ 0x7fa112988b00> (<tools.ast.EqualNode object at 0x7fa1129 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr . LexToken(then,'then',36,981)
   yacc.py: 445:Action : Shift and goto state 175
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then . LexToken(string,'2',36,988)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then string . LexToken(else,'else',36,990)
   yacc.py: 471:Action : Reduce rule [atom -> string] with ['2'] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112988b70> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then atom . LexToken(else,'else',36,990)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7fa112988b70>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112988b70> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then factor . LexToken(else,'else',36,990)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantStrNode @ 0x7fa112988b70>] and goto state 76
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112988b70> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then base_call . LexToken(else,'else',36,990)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantStrNode @ 0x7fa112988b70>] and goto state 75
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112988b70> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then term . LexToken(else,'else',36,990)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantStrNode @ 0x7fa112988b70>] and goto state 74
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112988b70> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then op . LexToken(else,'else',36,990)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantStrNode @ 0x7fa112988b70>] and goto state 73
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112988b70> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then comp . LexToken(else,'else',36,990)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantStrNode @ 0x7fa112988b70>] and goto state 203
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112988b70> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 203
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr . LexToken(else,'else',36,990)
   yacc.py: 445:Action : Shift and goto state 219
   yacc.py: 410:
   yacc.py: 411:State  : 219
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else . LexToken(if,'if',37,996)
   yacc.py: 445:Action : Shift and goto state 86
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if . LexToken(id,'i',37,999)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if id . LexToken(equal,'=',37,1001)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['i'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988e48> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if atom . LexToken(equal,'=',37,1001)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7fa112988e48>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988e48> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if factor . LexToken(equal,'=',37,1001)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7fa112988e48>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988e48> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if base_call . LexToken(equal,'=',37,1001)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7fa112988e48>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988e48> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if term . LexToken(equal,'=',37,1001)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7fa112988e48>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988e48> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if op . LexToken(equal,'=',37,1001)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<VariableNode @ 0x7fa112988e48>] and goto state 73
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988e48> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if comp . LexToken(equal,'=',37,1001)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if comp equal . LexToken(num,3.0,37,1003)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if comp equal num . LexToken(then,'then',37,1005)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [3.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f23c8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if comp equal atom . LexToken(then,'then',37,1005)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7fa1127f23c8>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f23c8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if comp equal factor . LexToken(then,'then',37,1005)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7fa1127f23c8>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f23c8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if comp equal base_call . LexToken(then,'then',37,1005)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7fa1127f23c8>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f23c8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if comp equal term . LexToken(then,'then',37,1005)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7fa1127f23c8>] and goto state 158
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f23c8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if comp equal op . LexToken(then,'then',37,1005)
   yacc.py: 471:Action : Reduce rule [comp -> comp equal op] with [<VariableNode @ 0x7fa112988e48>,'=',<ConstantNumNode @ 0x7fa1127f23c8>] and goto state 73
   yacc.py: 506:Result : <EqualNode @ 0x7fa1127f2320> (<tools.ast.EqualNode object at 0x7fa1127 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if comp . LexToken(then,'then',37,1005)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<EqualNode @ 0x7fa1127f2320>] and goto state 132
   yacc.py: 506:Result : <EqualNode @ 0x7fa1127f2320> (<tools.ast.EqualNode object at 0x7fa1127 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr . LexToken(then,'then',37,1005)
   yacc.py: 445:Action : Shift and goto state 175
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then . LexToken(string,'3',37,1012)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then string . LexToken(else,'else',37,1014)
   yacc.py: 471:Action : Reduce rule [atom -> string] with ['3'] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f22e8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then atom . LexToken(else,'else',37,1014)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7fa1127f22e8>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f22e8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then factor . LexToken(else,'else',37,1014)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantStrNode @ 0x7fa1127f22e8>] and goto state 76
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f22e8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then base_call . LexToken(else,'else',37,1014)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantStrNode @ 0x7fa1127f22e8>] and goto state 75
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f22e8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then term . LexToken(else,'else',37,1014)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantStrNode @ 0x7fa1127f22e8>] and goto state 74
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f22e8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then op . LexToken(else,'else',37,1014)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantStrNode @ 0x7fa1127f22e8>] and goto state 73
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f22e8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then comp . LexToken(else,'else',37,1014)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantStrNode @ 0x7fa1127f22e8>] and goto state 203
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f22e8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 203
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr . LexToken(else,'else',37,1014)
   yacc.py: 445:Action : Shift and goto state 219
   yacc.py: 410:
   yacc.py: 411:State  : 219
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else . LexToken(if,'if',38,1020)
   yacc.py: 445:Action : Shift and goto state 86
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if . LexToken(id,'i',38,1023)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if id . LexToken(equal,'=',38,1025)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['i'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2208> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if atom . LexToken(equal,'=',38,1025)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7fa1127f2208>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2208> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if factor . LexToken(equal,'=',38,1025)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7fa1127f2208>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2208> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if base_call . LexToken(equal,'=',38,1025)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7fa1127f2208>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2208> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if term . LexToken(equal,'=',38,1025)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7fa1127f2208>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2208> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if op . LexToken(equal,'=',38,1025)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<VariableNode @ 0x7fa1127f2208>] and goto state 73
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2208> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp . LexToken(equal,'=',38,1025)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal . LexToken(num,4.0,38,1027)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal num . LexToken(then,'then',38,1029)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [4.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2470> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal atom . LexToken(then,'then',38,1029)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7fa1127f2470>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2470> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal factor . LexToken(then,'then',38,1029)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7fa1127f2470>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2470> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal base_call . LexToken(then,'then',38,1029)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7fa1127f2470>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2470> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal term . LexToken(then,'then',38,1029)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7fa1127f2470>] and goto state 158
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2470> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal op . LexToken(then,'then',38,1029)
   yacc.py: 471:Action : Reduce rule [comp -> comp equal op] with [<VariableNode @ 0x7fa1127f2208>,'=',<ConstantNumNode @ 0x7fa1127f2470>] and goto state 73
   yacc.py: 506:Result : <EqualNode @ 0x7fa1127f2160> (<tools.ast.EqualNode object at 0x7fa1127 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp . LexToken(then,'then',38,1029)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<EqualNode @ 0x7fa1127f2160>] and goto state 132
   yacc.py: 506:Result : <EqualNode @ 0x7fa1127f2160> (<tools.ast.EqualNode object at 0x7fa1127 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr . LexToken(then,'then',38,1029)
   yacc.py: 445:Action : Shift and goto state 175
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then . LexToken(string,'4',38,1036)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then string . LexToken(else,'else',38,1038)
   yacc.py: 471:Action : Reduce rule [atom -> string] with ['4'] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f2ba8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then atom . LexToken(else,'else',38,1038)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7fa1127f2ba8>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f2ba8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then factor . LexToken(else,'else',38,1038)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantStrNode @ 0x7fa1127f2ba8>] and goto state 76
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f2ba8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then base_call . LexToken(else,'else',38,1038)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantStrNode @ 0x7fa1127f2ba8>] and goto state 75
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f2ba8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then term . LexToken(else,'else',38,1038)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantStrNode @ 0x7fa1127f2ba8>] and goto state 74
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f2ba8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then op . LexToken(else,'else',38,1038)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantStrNode @ 0x7fa1127f2ba8>] and goto state 73
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f2ba8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then comp . LexToken(else,'else',38,1038)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantStrNode @ 0x7fa1127f2ba8>] and goto state 203
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f2ba8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 203
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr . LexToken(else,'else',38,1038)
   yacc.py: 445:Action : Shift and goto state 219
   yacc.py: 410:
   yacc.py: 411:State  : 219
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else . LexToken(if,'if',39,1044)
   yacc.py: 445:Action : Shift and goto state 86
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if . LexToken(id,'i',39,1047)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if id . LexToken(equal,'=',39,1049)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['i'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2908> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if atom . LexToken(equal,'=',39,1049)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7fa1127f2908>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2908> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if factor . LexToken(equal,'=',39,1049)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7fa1127f2908>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2908> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if base_call . LexToken(equal,'=',39,1049)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7fa1127f2908>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2908> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if term . LexToken(equal,'=',39,1049)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7fa1127f2908>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2908> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if op . LexToken(equal,'=',39,1049)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<VariableNode @ 0x7fa1127f2908>] and goto state 73
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2908> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp . LexToken(equal,'=',39,1049)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal . LexToken(num,5.0,39,1051)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal num . LexToken(then,'then',39,1053)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [5.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f29e8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal atom . LexToken(then,'then',39,1053)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7fa1127f29e8>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f29e8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal factor . LexToken(then,'then',39,1053)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7fa1127f29e8>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f29e8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal base_call . LexToken(then,'then',39,1053)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7fa1127f29e8>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f29e8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal term . LexToken(then,'then',39,1053)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7fa1127f29e8>] and goto state 158
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f29e8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal op . LexToken(then,'then',39,1053)
   yacc.py: 471:Action : Reduce rule [comp -> comp equal op] with [<VariableNode @ 0x7fa1127f2908>,'=',<ConstantNumNode @ 0x7fa1127f29e8>] and goto state 73
   yacc.py: 506:Result : <EqualNode @ 0x7fa1127f2898> (<tools.ast.EqualNode object at 0x7fa1127 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp . LexToken(then,'then',39,1053)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<EqualNode @ 0x7fa1127f2898>] and goto state 132
   yacc.py: 506:Result : <EqualNode @ 0x7fa1127f2898> (<tools.ast.EqualNode object at 0x7fa1127 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr . LexToken(then,'then',39,1053)
   yacc.py: 445:Action : Shift and goto state 175
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then . LexToken(string,'5',39,1060)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then string . LexToken(else,'else',39,1062)
   yacc.py: 471:Action : Reduce rule [atom -> string] with ['5'] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f2a90> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then atom . LexToken(else,'else',39,1062)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7fa1127f2a90>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f2a90> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then factor . LexToken(else,'else',39,1062)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantStrNode @ 0x7fa1127f2a90>] and goto state 76
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f2a90> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then base_call . LexToken(else,'else',39,1062)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantStrNode @ 0x7fa1127f2a90>] and goto state 75
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f2a90> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then term . LexToken(else,'else',39,1062)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantStrNode @ 0x7fa1127f2a90>] and goto state 74
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f2a90> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then op . LexToken(else,'else',39,1062)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantStrNode @ 0x7fa1127f2a90>] and goto state 73
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f2a90> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then comp . LexToken(else,'else',39,1062)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantStrNode @ 0x7fa1127f2a90>] and goto state 203
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f2a90> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 203
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr . LexToken(else,'else',39,1062)
   yacc.py: 445:Action : Shift and goto state 219
   yacc.py: 410:
   yacc.py: 411:State  : 219
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else . LexToken(if,'if',40,1068)
   yacc.py: 445:Action : Shift and goto state 86
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if . LexToken(id,'i',40,1071)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if id . LexToken(equal,'=',40,1073)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['i'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2dd8> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if atom . LexToken(equal,'=',40,1073)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7fa1127f2dd8>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2dd8> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if factor . LexToken(equal,'=',40,1073)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7fa1127f2dd8>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2dd8> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if base_call . LexToken(equal,'=',40,1073)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7fa1127f2dd8>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2dd8> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if term . LexToken(equal,'=',40,1073)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7fa1127f2dd8>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2dd8> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if op . LexToken(equal,'=',40,1073)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<VariableNode @ 0x7fa1127f2dd8>] and goto state 73
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2dd8> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp . LexToken(equal,'=',40,1073)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal . LexToken(num,6.0,40,1075)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal num . LexToken(then,'then',40,1077)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [6.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2f98> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal atom . LexToken(then,'then',40,1077)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7fa1127f2f98>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2f98> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal factor . LexToken(then,'then',40,1077)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7fa1127f2f98>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2f98> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal base_call . LexToken(then,'then',40,1077)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7fa1127f2f98>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2f98> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal term . LexToken(then,'then',40,1077)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7fa1127f2f98>] and goto state 158
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2f98> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal op . LexToken(then,'then',40,1077)
   yacc.py: 471:Action : Reduce rule [comp -> comp equal op] with [<VariableNode @ 0x7fa1127f2dd8>,'=',<ConstantNumNode @ 0x7fa1127f2f98>] and goto state 73
   yacc.py: 506:Result : <EqualNode @ 0x7fa1127f2d68> (<tools.ast.EqualNode object at 0x7fa1127 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp . LexToken(then,'then',40,1077)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<EqualNode @ 0x7fa1127f2d68>] and goto state 132
   yacc.py: 506:Result : <EqualNode @ 0x7fa1127f2d68> (<tools.ast.EqualNode object at 0x7fa1127 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr . LexToken(then,'then',40,1077)
   yacc.py: 445:Action : Shift and goto state 175
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then . LexToken(string,'6',40,1084)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then string . LexToken(else,'else',40,1086)
   yacc.py: 471:Action : Reduce rule [atom -> string] with ['6'] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f2fd0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then atom . LexToken(else,'else',40,1086)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7fa1127f2fd0>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f2fd0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then factor . LexToken(else,'else',40,1086)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantStrNode @ 0x7fa1127f2fd0>] and goto state 76
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f2fd0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then base_call . LexToken(else,'else',40,1086)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantStrNode @ 0x7fa1127f2fd0>] and goto state 75
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f2fd0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then term . LexToken(else,'else',40,1086)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantStrNode @ 0x7fa1127f2fd0>] and goto state 74
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f2fd0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then op . LexToken(else,'else',40,1086)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantStrNode @ 0x7fa1127f2fd0>] and goto state 73
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f2fd0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then comp . LexToken(else,'else',40,1086)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantStrNode @ 0x7fa1127f2fd0>] and goto state 203
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f2fd0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 203
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr . LexToken(else,'else',40,1086)
   yacc.py: 445:Action : Shift and goto state 219
   yacc.py: 410:
   yacc.py: 411:State  : 219
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else . LexToken(if,'if',41,1092)
   yacc.py: 445:Action : Shift and goto state 86
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if . LexToken(id,'i',41,1095)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if id . LexToken(equal,'=',41,1097)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['i'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2f28> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if atom . LexToken(equal,'=',41,1097)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7fa1127f2f28>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2f28> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if factor . LexToken(equal,'=',41,1097)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7fa1127f2f28>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2f28> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if base_call . LexToken(equal,'=',41,1097)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7fa1127f2f28>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2f28> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if term . LexToken(equal,'=',41,1097)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7fa1127f2f28>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2f28> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if op . LexToken(equal,'=',41,1097)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<VariableNode @ 0x7fa1127f2f28>] and goto state 73
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2f28> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp . LexToken(equal,'=',41,1097)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal . LexToken(num,7.0,41,1099)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal num . LexToken(then,'then',41,1101)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [7.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112837278> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal atom . LexToken(then,'then',41,1101)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7fa112837278>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112837278> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal factor . LexToken(then,'then',41,1101)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7fa112837278>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112837278> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal base_call . LexToken(then,'then',41,1101)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7fa112837278>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112837278> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal term . LexToken(then,'then',41,1101)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7fa112837278>] and goto state 158
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112837278> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal op . LexToken(then,'then',41,1101)
   yacc.py: 471:Action : Reduce rule [comp -> comp equal op] with [<VariableNode @ 0x7fa1127f2f28>,'=',<ConstantNumNode @ 0x7fa112837278>] and goto state 73
   yacc.py: 506:Result : <EqualNode @ 0x7fa112837080> (<tools.ast.EqualNode object at 0x7fa1128 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp . LexToken(then,'then',41,1101)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<EqualNode @ 0x7fa112837080>] and goto state 132
   yacc.py: 506:Result : <EqualNode @ 0x7fa112837080> (<tools.ast.EqualNode object at 0x7fa1128 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr . LexToken(then,'then',41,1101)
   yacc.py: 445:Action : Shift and goto state 175
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then . LexToken(string,'7',41,1108)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then string . LexToken(else,'else',41,1110)
   yacc.py: 471:Action : Reduce rule [atom -> string] with ['7'] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1128372b0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then atom . LexToken(else,'else',41,1110)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7fa1128372b0>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1128372b0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then factor . LexToken(else,'else',41,1110)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantStrNode @ 0x7fa1128372b0>] and goto state 76
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1128372b0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then base_call . LexToken(else,'else',41,1110)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantStrNode @ 0x7fa1128372b0>] and goto state 75
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1128372b0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then term . LexToken(else,'else',41,1110)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantStrNode @ 0x7fa1128372b0>] and goto state 74
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1128372b0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then op . LexToken(else,'else',41,1110)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantStrNode @ 0x7fa1128372b0>] and goto state 73
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1128372b0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then comp . LexToken(else,'else',41,1110)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantStrNode @ 0x7fa1128372b0>] and goto state 203
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1128372b0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 203
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr . LexToken(else,'else',41,1110)
   yacc.py: 445:Action : Shift and goto state 219
   yacc.py: 410:
   yacc.py: 411:State  : 219
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else . LexToken(if,'if',42,1116)
   yacc.py: 445:Action : Shift and goto state 86
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if . LexToken(id,'i',42,1119)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if id . LexToken(equal,'=',42,1121)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['i'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837358> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if atom . LexToken(equal,'=',42,1121)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7fa112837358>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837358> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if factor . LexToken(equal,'=',42,1121)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7fa112837358>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837358> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if base_call . LexToken(equal,'=',42,1121)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7fa112837358>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837358> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if term . LexToken(equal,'=',42,1121)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7fa112837358>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837358> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if op . LexToken(equal,'=',42,1121)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<VariableNode @ 0x7fa112837358>] and goto state 73
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837358> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp . LexToken(equal,'=',42,1121)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal . LexToken(num,8.0,42,1123)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal num . LexToken(then,'then',42,1125)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [8.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112837518> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal atom . LexToken(then,'then',42,1125)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7fa112837518>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112837518> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal factor . LexToken(then,'then',42,1125)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7fa112837518>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112837518> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal base_call . LexToken(then,'then',42,1125)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7fa112837518>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112837518> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal term . LexToken(then,'then',42,1125)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7fa112837518>] and goto state 158
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112837518> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal op . LexToken(then,'then',42,1125)
   yacc.py: 471:Action : Reduce rule [comp -> comp equal op] with [<VariableNode @ 0x7fa112837358>,'=',<ConstantNumNode @ 0x7fa112837518>] and goto state 73
   yacc.py: 506:Result : <EqualNode @ 0x7fa112837320> (<tools.ast.EqualNode object at 0x7fa1128 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp . LexToken(then,'then',42,1125)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<EqualNode @ 0x7fa112837320>] and goto state 132
   yacc.py: 506:Result : <EqualNode @ 0x7fa112837320> (<tools.ast.EqualNode object at 0x7fa1128 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr . LexToken(then,'then',42,1125)
   yacc.py: 445:Action : Shift and goto state 175
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then . LexToken(string,'8',42,1132)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then string . LexToken(else,'else',42,1134)
   yacc.py: 471:Action : Reduce rule [atom -> string] with ['8'] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112837550> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then atom . LexToken(else,'else',42,1134)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7fa112837550>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112837550> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then factor . LexToken(else,'else',42,1134)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantStrNode @ 0x7fa112837550>] and goto state 76
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112837550> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then base_call . LexToken(else,'else',42,1134)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantStrNode @ 0x7fa112837550>] and goto state 75
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112837550> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then term . LexToken(else,'else',42,1134)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantStrNode @ 0x7fa112837550>] and goto state 74
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112837550> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then op . LexToken(else,'else',42,1134)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantStrNode @ 0x7fa112837550>] and goto state 73
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112837550> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then comp . LexToken(else,'else',42,1134)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantStrNode @ 0x7fa112837550>] and goto state 203
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112837550> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 203
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr . LexToken(else,'else',42,1134)
   yacc.py: 445:Action : Shift and goto state 219
   yacc.py: 410:
   yacc.py: 411:State  : 219
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else . LexToken(if,'if',43,1140)
   yacc.py: 445:Action : Shift and goto state 86
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if . LexToken(id,'i',43,1143)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if id . LexToken(equal,'=',43,1145)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['i'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7fa1128375f8> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if atom . LexToken(equal,'=',43,1145)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7fa1128375f8>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7fa1128375f8> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if factor . LexToken(equal,'=',43,1145)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7fa1128375f8>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7fa1128375f8> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if base_call . LexToken(equal,'=',43,1145)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7fa1128375f8>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7fa1128375f8> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if term . LexToken(equal,'=',43,1145)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7fa1128375f8>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7fa1128375f8> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if op . LexToken(equal,'=',43,1145)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<VariableNode @ 0x7fa1128375f8>] and goto state 73
   yacc.py: 506:Result : <VariableNode @ 0x7fa1128375f8> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp . LexToken(equal,'=',43,1145)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal . LexToken(num,9.0,43,1147)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal num . LexToken(then,'then',43,1149)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [9.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1128377b8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal atom . LexToken(then,'then',43,1149)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7fa1128377b8>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1128377b8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal factor . LexToken(then,'then',43,1149)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7fa1128377b8>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1128377b8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal base_call . LexToken(then,'then',43,1149)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7fa1128377b8>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1128377b8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal term . LexToken(then,'then',43,1149)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7fa1128377b8>] and goto state 158
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1128377b8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp equal op . LexToken(then,'then',43,1149)
   yacc.py: 471:Action : Reduce rule [comp -> comp equal op] with [<VariableNode @ 0x7fa1128375f8>,'=',<ConstantNumNode @ 0x7fa1128377b8>] and goto state 73
   yacc.py: 506:Result : <EqualNode @ 0x7fa1128375c0> (<tools.ast.EqualNode object at 0x7fa1128 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if comp . LexToken(then,'then',43,1149)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<EqualNode @ 0x7fa1128375c0>] and goto state 132
   yacc.py: 506:Result : <EqualNode @ 0x7fa1128375c0> (<tools.ast.EqualNode object at 0x7fa1128 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr . LexToken(then,'then',43,1149)
   yacc.py: 445:Action : Shift and goto state 175
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then . LexToken(string,'9',43,1156)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then string . LexToken(else,'else',43,1158)
   yacc.py: 471:Action : Reduce rule [atom -> string] with ['9'] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1128377f0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then atom . LexToken(else,'else',43,1158)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7fa1128377f0>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1128377f0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then factor . LexToken(else,'else',43,1158)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantStrNode @ 0x7fa1128377f0>] and goto state 76
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1128377f0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then base_call . LexToken(else,'else',43,1158)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantStrNode @ 0x7fa1128377f0>] and goto state 75
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1128377f0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then term . LexToken(else,'else',43,1158)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantStrNode @ 0x7fa1128377f0>] and goto state 74
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1128377f0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then op . LexToken(else,'else',43,1158)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantStrNode @ 0x7fa1128377f0>] and goto state 73
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1128377f0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then comp . LexToken(else,'else',43,1158)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantStrNode @ 0x7fa1128377f0>] and goto state 203
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1128377f0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 203
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr . LexToken(else,'else',43,1158)
   yacc.py: 445:Action : Shift and goto state 219
   yacc.py: 410:
   yacc.py: 411:State  : 219
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else . LexToken(ocur,'{',44,1164)
   yacc.py: 445:Action : Shift and goto state 90
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur . LexToken(id,'abort',44,1166)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur id . LexToken(opar,'(',44,1171)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur id opar . LexToken(cpar,')',44,1172)
   yacc.py: 474:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 150
   yacc.py: 548:Result : <NoneType @ 0x5612b010f0f0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 150
   yacc.py: 430:Defaulted state 150: Reduce using 96
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur id opar epsilon . LexToken(cpar,')',44,1172)
   yacc.py: 471:Action : Reduce rule [arg_list_empty -> epsilon] with [None] and goto state 149
   yacc.py: 506:Result : <list @ 0x7fa11283fe08> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 430:Defaulted state 149: Reduce using 92
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur id opar arg_list_empty . LexToken(cpar,')',44,1172)
   yacc.py: 471:Action : Reduce rule [args -> arg_list_empty] with [[]] and goto state 153
   yacc.py: 506:Result : <list @ 0x7fa11283fe08> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur id opar args . LexToken(cpar,')',44,1172)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur id opar args cpar . LexToken(semi,';',44,1173)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['abort','(',[],')'] and goto state 78
   yacc.py: 506:Result : <tuple @ 0x7fa1128040c8> (('abort', []))
   yacc.py: 410:
   yacc.py: 411:State  : 78
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur func_call . LexToken(semi,';',44,1173)
   yacc.py: 471:Action : Reduce rule [factor -> func_call] with [('abort', [])] and goto state 77
   yacc.py: 506:Result : <StaticCallNode @ 0x7fa1128379b0> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur factor . LexToken(semi,';',44,1173)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<StaticCallNode @ 0x7fa1128379b0>] and goto state 76
   yacc.py: 506:Result : <StaticCallNode @ 0x7fa1128379b0> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur base_call . LexToken(semi,';',44,1173)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<StaticCallNode @ 0x7fa1128379b0>] and goto state 75
   yacc.py: 506:Result : <StaticCallNode @ 0x7fa1128379b0> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur term . LexToken(semi,';',44,1173)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<StaticCallNode @ 0x7fa1128379b0>] and goto state 74
   yacc.py: 506:Result : <StaticCallNode @ 0x7fa1128379b0> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur op . LexToken(semi,';',44,1173)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<StaticCallNode @ 0x7fa1128379b0>] and goto state 73
   yacc.py: 506:Result : <StaticCallNode @ 0x7fa1128379b0> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur comp . LexToken(semi,';',44,1173)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<StaticCallNode @ 0x7fa1128379b0>] and goto state 111
   yacc.py: 506:Result : <StaticCallNode @ 0x7fa1128379b0> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur expr . LexToken(semi,';',44,1173)
   yacc.py: 445:Action : Shift and goto state 151
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur expr semi . LexToken(string,'',44,1176)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur expr semi string . LexToken(semi,';',44,1177)
   yacc.py: 471:Action : Reduce rule [atom -> string] with [''] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1128379e8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur expr semi atom . LexToken(semi,';',44,1177)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7fa1128379e8>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1128379e8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur expr semi factor . LexToken(semi,';',44,1177)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantStrNode @ 0x7fa1128379e8>] and goto state 76
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1128379e8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur expr semi base_call . LexToken(semi,';',44,1177)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantStrNode @ 0x7fa1128379e8>] and goto state 75
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1128379e8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur expr semi term . LexToken(semi,';',44,1177)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantStrNode @ 0x7fa1128379e8>] and goto state 74
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1128379e8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur expr semi op . LexToken(semi,';',44,1177)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantStrNode @ 0x7fa1128379e8>] and goto state 73
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1128379e8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur expr semi comp . LexToken(semi,';',44,1177)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantStrNode @ 0x7fa1128379e8>] and goto state 111
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1128379e8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur expr semi expr . LexToken(semi,';',44,1177)
   yacc.py: 445:Action : Shift and goto state 151
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur expr semi expr semi . LexToken(ccur,'}',44,1179)
   yacc.py: 471:Action : Reduce rule [block -> expr semi] with [<ConstantStrNode @ 0x7fa1128379e8>,';'] and goto state 190
   yacc.py: 506:Result : <list @ 0x7fa11283fdc8> ([<tools.ast.ConstantStrNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 190
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur expr semi block . LexToken(ccur,'}',44,1179)
   yacc.py: 471:Action : Reduce rule [block -> expr semi block] with [<StaticCallNode @ 0x7fa1128379b0>,';',<list @ 0x7fa11283fdc8>] and goto state 135
   yacc.py: 506:Result : <list @ 0x7fa112840308> ([<tools.ast.StaticCallNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 135
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur block . LexToken(ccur,'}',44,1179)
   yacc.py: 445:Action : Shift and goto state 177
   yacc.py: 410:
   yacc.py: 411:State  : 177
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else ocur block ccur . LexToken(fi,'fi',45,1236)
   yacc.py: 471:Action : Reduce rule [atom -> ocur block ccur] with ['{',<list @ 0x7fa112840308>,'}'] and goto state 79
   yacc.py: 506:Result : <BlockNode @ 0x7fa112837860> (<tools.ast.BlockNode object at 0x7fa1128 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else atom . LexToken(fi,'fi',45,1236)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<BlockNode @ 0x7fa112837860>] and goto state 77
   yacc.py: 506:Result : <BlockNode @ 0x7fa112837860> (<tools.ast.BlockNode object at 0x7fa1128 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else factor . LexToken(fi,'fi',45,1236)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<BlockNode @ 0x7fa112837860>] and goto state 76
   yacc.py: 506:Result : <BlockNode @ 0x7fa112837860> (<tools.ast.BlockNode object at 0x7fa1128 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else base_call . LexToken(fi,'fi',45,1236)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<BlockNode @ 0x7fa112837860>] and goto state 75
   yacc.py: 506:Result : <BlockNode @ 0x7fa112837860> (<tools.ast.BlockNode object at 0x7fa1128 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else term . LexToken(fi,'fi',45,1236)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<BlockNode @ 0x7fa112837860>] and goto state 74
   yacc.py: 506:Result : <BlockNode @ 0x7fa112837860> (<tools.ast.BlockNode object at 0x7fa1128 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else op . LexToken(fi,'fi',45,1236)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<BlockNode @ 0x7fa112837860>] and goto state 73
   yacc.py: 506:Result : <BlockNode @ 0x7fa112837860> (<tools.ast.BlockNode object at 0x7fa1128 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else comp . LexToken(fi,'fi',45,1236)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<BlockNode @ 0x7fa112837860>] and goto state 228
   yacc.py: 506:Result : <BlockNode @ 0x7fa112837860> (<tools.ast.BlockNode object at 0x7fa1128 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 228
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else expr . LexToken(fi,'fi',45,1236)
   yacc.py: 445:Action : Shift and goto state 230
   yacc.py: 410:
   yacc.py: 411:State  : 230
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else expr fi . LexToken(fi,'fi',45,1239)
   yacc.py: 471:Action : Reduce rule [factor -> if expr then expr else expr fi] with ['if',<EqualNode @ 0x7fa1128375c0>,'then',<ConstantStrNode @ 0x7fa1128377f0>,'else',<BlockNode @ 0x7fa112837860>,'fi'] and goto state 77
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112837940> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else factor . LexToken(fi,'fi',45,1239)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConditionalNode @ 0x7fa112837940>] and goto state 76
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112837940> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else base_call . LexToken(fi,'fi',45,1239)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConditionalNode @ 0x7fa112837940>] and goto state 75
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112837940> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else term . LexToken(fi,'fi',45,1239)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConditionalNode @ 0x7fa112837940>] and goto state 74
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112837940> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else op . LexToken(fi,'fi',45,1239)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConditionalNode @ 0x7fa112837940>] and goto state 73
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112837940> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else comp . LexToken(fi,'fi',45,1239)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConditionalNode @ 0x7fa112837940>] and goto state 228
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112837940> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 228
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else expr . LexToken(fi,'fi',45,1239)
   yacc.py: 445:Action : Shift and goto state 230
   yacc.py: 410:
   yacc.py: 411:State  : 230
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else expr fi . LexToken(fi,'fi',45,1242)
   yacc.py: 471:Action : Reduce rule [factor -> if expr then expr else expr fi] with ['if',<EqualNode @ 0x7fa112837320>,'then',<ConstantStrNode @ 0x7fa112837550>,'else',<ConditionalNode @ 0x7fa112837940>,'fi'] and goto state 77
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112837a58> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else factor . LexToken(fi,'fi',45,1242)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConditionalNode @ 0x7fa112837a58>] and goto state 76
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112837a58> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else base_call . LexToken(fi,'fi',45,1242)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConditionalNode @ 0x7fa112837a58>] and goto state 75
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112837a58> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else term . LexToken(fi,'fi',45,1242)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConditionalNode @ 0x7fa112837a58>] and goto state 74
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112837a58> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else op . LexToken(fi,'fi',45,1242)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConditionalNode @ 0x7fa112837a58>] and goto state 73
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112837a58> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else comp . LexToken(fi,'fi',45,1242)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConditionalNode @ 0x7fa112837a58>] and goto state 228
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112837a58> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 228
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else expr . LexToken(fi,'fi',45,1242)
   yacc.py: 445:Action : Shift and goto state 230
   yacc.py: 410:
   yacc.py: 411:State  : 230
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else expr fi . LexToken(fi,'fi',45,1245)
   yacc.py: 471:Action : Reduce rule [factor -> if expr then expr else expr fi] with ['if',<EqualNode @ 0x7fa112837080>,'then',<ConstantStrNode @ 0x7fa1128372b0>,'else',<ConditionalNode @ 0x7fa112837a58>,'fi'] and goto state 77
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1128376d8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else factor . LexToken(fi,'fi',45,1245)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConditionalNode @ 0x7fa1128376d8>] and goto state 76
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1128376d8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else base_call . LexToken(fi,'fi',45,1245)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConditionalNode @ 0x7fa1128376d8>] and goto state 75
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1128376d8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else term . LexToken(fi,'fi',45,1245)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConditionalNode @ 0x7fa1128376d8>] and goto state 74
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1128376d8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else op . LexToken(fi,'fi',45,1245)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConditionalNode @ 0x7fa1128376d8>] and goto state 73
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1128376d8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else comp . LexToken(fi,'fi',45,1245)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConditionalNode @ 0x7fa1128376d8>] and goto state 228
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1128376d8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 228
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else expr . LexToken(fi,'fi',45,1245)
   yacc.py: 445:Action : Shift and goto state 230
   yacc.py: 410:
   yacc.py: 411:State  : 230
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else expr fi . LexToken(fi,'fi',45,1248)
   yacc.py: 471:Action : Reduce rule [factor -> if expr then expr else expr fi] with ['if',<EqualNode @ 0x7fa1127f2d68>,'then',<ConstantStrNode @ 0x7fa1127f2fd0>,'else',<ConditionalNode @ 0x7fa1128376d8>,'fi'] and goto state 77
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112837438> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else factor . LexToken(fi,'fi',45,1248)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConditionalNode @ 0x7fa112837438>] and goto state 76
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112837438> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else base_call . LexToken(fi,'fi',45,1248)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConditionalNode @ 0x7fa112837438>] and goto state 75
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112837438> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else term . LexToken(fi,'fi',45,1248)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConditionalNode @ 0x7fa112837438>] and goto state 74
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112837438> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else op . LexToken(fi,'fi',45,1248)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConditionalNode @ 0x7fa112837438>] and goto state 73
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112837438> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else comp . LexToken(fi,'fi',45,1248)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConditionalNode @ 0x7fa112837438>] and goto state 228
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112837438> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 228
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else expr . LexToken(fi,'fi',45,1248)
   yacc.py: 445:Action : Shift and goto state 230
   yacc.py: 410:
   yacc.py: 411:State  : 230
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else expr fi . LexToken(fi,'fi',45,1251)
   yacc.py: 471:Action : Reduce rule [factor -> if expr then expr else expr fi] with ['if',<EqualNode @ 0x7fa1127f2898>,'then',<ConstantStrNode @ 0x7fa1127f2a90>,'else',<ConditionalNode @ 0x7fa112837438>,'fi'] and goto state 77
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2e48> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else factor . LexToken(fi,'fi',45,1251)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConditionalNode @ 0x7fa1127f2e48>] and goto state 76
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2e48> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else base_call . LexToken(fi,'fi',45,1251)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConditionalNode @ 0x7fa1127f2e48>] and goto state 75
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2e48> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else term . LexToken(fi,'fi',45,1251)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConditionalNode @ 0x7fa1127f2e48>] and goto state 74
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2e48> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else op . LexToken(fi,'fi',45,1251)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConditionalNode @ 0x7fa1127f2e48>] and goto state 73
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2e48> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else comp . LexToken(fi,'fi',45,1251)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConditionalNode @ 0x7fa1127f2e48>] and goto state 228
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2e48> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 228
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else expr . LexToken(fi,'fi',45,1251)
   yacc.py: 445:Action : Shift and goto state 230
   yacc.py: 410:
   yacc.py: 411:State  : 230
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else if expr then expr else expr fi . LexToken(fi,'fi',45,1254)
   yacc.py: 471:Action : Reduce rule [factor -> if expr then expr else expr fi] with ['if',<EqualNode @ 0x7fa1127f2160>,'then',<ConstantStrNode @ 0x7fa1127f2ba8>,'else',<ConditionalNode @ 0x7fa1127f2e48>,'fi'] and goto state 77
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2b38> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else factor . LexToken(fi,'fi',45,1254)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConditionalNode @ 0x7fa1127f2b38>] and goto state 76
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2b38> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else base_call . LexToken(fi,'fi',45,1254)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConditionalNode @ 0x7fa1127f2b38>] and goto state 75
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2b38> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else term . LexToken(fi,'fi',45,1254)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConditionalNode @ 0x7fa1127f2b38>] and goto state 74
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2b38> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else op . LexToken(fi,'fi',45,1254)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConditionalNode @ 0x7fa1127f2b38>] and goto state 73
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2b38> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else comp . LexToken(fi,'fi',45,1254)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConditionalNode @ 0x7fa1127f2b38>] and goto state 228
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2b38> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 228
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else expr . LexToken(fi,'fi',45,1254)
   yacc.py: 445:Action : Shift and goto state 230
   yacc.py: 410:
   yacc.py: 411:State  : 230
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else if expr then expr else expr fi . LexToken(fi,'fi',45,1257)
   yacc.py: 471:Action : Reduce rule [factor -> if expr then expr else expr fi] with ['if',<EqualNode @ 0x7fa1127f2320>,'then',<ConstantStrNode @ 0x7fa1127f22e8>,'else',<ConditionalNode @ 0x7fa1127f2b38>,'fi'] and goto state 77
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2b70> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else factor . LexToken(fi,'fi',45,1257)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConditionalNode @ 0x7fa1127f2b70>] and goto state 76
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2b70> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else base_call . LexToken(fi,'fi',45,1257)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConditionalNode @ 0x7fa1127f2b70>] and goto state 75
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2b70> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else term . LexToken(fi,'fi',45,1257)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConditionalNode @ 0x7fa1127f2b70>] and goto state 74
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2b70> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else op . LexToken(fi,'fi',45,1257)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConditionalNode @ 0x7fa1127f2b70>] and goto state 73
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2b70> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else comp . LexToken(fi,'fi',45,1257)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConditionalNode @ 0x7fa1127f2b70>] and goto state 228
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f2b70> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 228
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else expr . LexToken(fi,'fi',45,1257)
   yacc.py: 445:Action : Shift and goto state 230
   yacc.py: 410:
   yacc.py: 411:State  : 230
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else expr fi . LexToken(fi,'fi',45,1260)
   yacc.py: 471:Action : Reduce rule [factor -> if expr then expr else expr fi] with ['if',<EqualNode @ 0x7fa112988b00>,'then',<ConstantStrNode @ 0x7fa112988b70>,'else',<ConditionalNode @ 0x7fa1127f2b70>,'fi'] and goto state 77
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f25c0> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor . LexToken(fi,'fi',45,1260)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConditionalNode @ 0x7fa1127f25c0>] and goto state 76
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f25c0> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else base_call . LexToken(fi,'fi',45,1260)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConditionalNode @ 0x7fa1127f25c0>] and goto state 75
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f25c0> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else term . LexToken(fi,'fi',45,1260)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConditionalNode @ 0x7fa1127f25c0>] and goto state 74
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f25c0> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else op . LexToken(fi,'fi',45,1260)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConditionalNode @ 0x7fa1127f25c0>] and goto state 73
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f25c0> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else comp . LexToken(fi,'fi',45,1260)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConditionalNode @ 0x7fa1127f25c0>] and goto state 228
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f25c0> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 228
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else expr . LexToken(fi,'fi',45,1260)
   yacc.py: 445:Action : Shift and goto state 230
   yacc.py: 410:
   yacc.py: 411:State  : 230
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else expr fi . LexToken(fi,'fi',45,1263)
   yacc.py: 471:Action : Reduce rule [factor -> if expr then expr else expr fi] with ['if',<EqualNode @ 0x7fa112988240>,'then',<ConstantStrNode @ 0x7fa1129885f8>,'else',<ConditionalNode @ 0x7fa1127f25c0>,'fi'] and goto state 77
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112988cf8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else factor . LexToken(fi,'fi',45,1263)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConditionalNode @ 0x7fa112988cf8>] and goto state 76
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112988cf8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else base_call . LexToken(fi,'fi',45,1263)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConditionalNode @ 0x7fa112988cf8>] and goto state 75
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112988cf8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else term . LexToken(fi,'fi',45,1263)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConditionalNode @ 0x7fa112988cf8>] and goto state 74
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112988cf8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else op . LexToken(fi,'fi',45,1263)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConditionalNode @ 0x7fa112988cf8>] and goto state 73
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112988cf8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else comp . LexToken(fi,'fi',45,1263)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConditionalNode @ 0x7fa112988cf8>] and goto state 228
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112988cf8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 228
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else expr . LexToken(fi,'fi',45,1263)
   yacc.py: 445:Action : Shift and goto state 230
   yacc.py: 410:
   yacc.py: 411:State  : 230
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur if expr then expr else expr fi . LexToken(ccur,'}',46,1271)
   yacc.py: 471:Action : Reduce rule [factor -> if expr then expr else expr fi] with ['if',<EqualNode @ 0x7fa1129364a8>,'then',<ConstantStrNode @ 0x7fa1129882e8>,'else',<ConditionalNode @ 0x7fa112988cf8>,'fi'] and goto state 77
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112988ba8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur factor . LexToken(ccur,'}',46,1271)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConditionalNode @ 0x7fa112988ba8>] and goto state 76
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112988ba8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur base_call . LexToken(ccur,'}',46,1271)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConditionalNode @ 0x7fa112988ba8>] and goto state 75
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112988ba8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur term . LexToken(ccur,'}',46,1271)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConditionalNode @ 0x7fa112988ba8>] and goto state 74
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112988ba8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur op . LexToken(ccur,'}',46,1271)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConditionalNode @ 0x7fa112988ba8>] and goto state 73
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112988ba8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur comp . LexToken(ccur,'}',46,1271)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConditionalNode @ 0x7fa112988ba8>] and goto state 206
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112988ba8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 206
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur expr . LexToken(ccur,'}',46,1271)
   yacc.py: 445:Action : Shift and goto state 222
   yacc.py: 410:
   yacc.py: 411:State  : 222
   yacc.py: 430:Defaulted state 222: Reduce using 25
   yacc.py: 435:Stack  : class type ocur def_func semi id opar formals cpar colon type ocur expr ccur . None
   yacc.py: 471:Action : Reduce rule [def_func -> id opar formals cpar colon type ocur expr ccur] with ['i2c','(',[('i', 'Int')],')',':','String','{',<ConditionalNode @ 0x7fa112988ba8>,'}'] and goto state 18
   yacc.py: 506:Result : <FuncDeclarationNode @ 0x7fa112988d30> (<tools.ast.FuncDeclarationNode object at ...)
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 435:Stack  : class type ocur def_func semi def_func . LexToken(semi,';',46,1272)
   yacc.py: 445:Action : Shift and goto state 30
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi . LexToken(id,'a2i',56,1565)
   yacc.py: 445:Action : Shift and goto state 19
   yacc.py: 410:
   yacc.py: 411:State  : 19
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id . LexToken(opar,'(',56,1568)
   yacc.py: 445:Action : Shift and goto state 32
   yacc.py: 410:
   yacc.py: 411:State  : 32
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar . LexToken(id,'s',56,1569)
   yacc.py: 445:Action : Shift and goto state 46
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar id . LexToken(colon,':',56,1571)
   yacc.py: 445:Action : Shift and goto state 61
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar id colon . LexToken(type,'String',56,1573)
   yacc.py: 445:Action : Shift and goto state 96
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar id colon type . LexToken(cpar,')',56,1579)
   yacc.py: 471:Action : Reduce rule [param -> id colon type] with ['s',':','String'] and goto state 44
   yacc.py: 506:Result : <tuple @ 0x7fa1128040c8> (('s', 'String'))
   yacc.py: 410:
   yacc.py: 411:State  : 44
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar param . LexToken(cpar,')',56,1579)
   yacc.py: 471:Action : Reduce rule [param_list -> param] with [('s', 'String')] and goto state 42
   yacc.py: 506:Result : <list @ 0x7fa112840348> ([('s', 'String')])
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 430:Defaulted state 42: Reduce using 30
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar param_list . LexToken(cpar,')',56,1579)
   yacc.py: 471:Action : Reduce rule [formals -> param_list] with [<list @ 0x7fa112840348>] and goto state 51
   yacc.py: 506:Result : <list @ 0x7fa112840348> ([('s', 'String')])
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals . LexToken(cpar,')',56,1579)
   yacc.py: 445:Action : Shift and goto state 64
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar . LexToken(colon,':',56,1581)
   yacc.py: 445:Action : Shift and goto state 100
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon . LexToken(type,'Int',56,1583)
   yacc.py: 445:Action : Shift and goto state 138
   yacc.py: 410:
   yacc.py: 411:State  : 138
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type . LexToken(ocur,'{',56,1587)
   yacc.py: 445:Action : Shift and goto state 181
   yacc.py: 410:
   yacc.py: 411:State  : 181
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur . LexToken(if,'if',57,1597)
   yacc.py: 445:Action : Shift and goto state 86
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if . LexToken(id,'s',57,1600)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if id . LexToken(dot,'.',57,1601)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['s'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7fa1129364e0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if atom . LexToken(dot,'.',57,1601)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7fa1129364e0>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7fa1129364e0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if factor . LexToken(dot,'.',57,1601)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if factor dot . LexToken(id,'length',57,1602)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if factor dot id . LexToken(opar,'(',57,1608)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if factor dot id opar . LexToken(cpar,')',57,1609)
   yacc.py: 474:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 150
   yacc.py: 548:Result : <NoneType @ 0x5612b010f0f0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 150
   yacc.py: 430:Defaulted state 150: Reduce using 96
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if factor dot id opar epsilon . LexToken(cpar,')',57,1609)
   yacc.py: 471:Action : Reduce rule [arg_list_empty -> epsilon] with [None] and goto state 149
   yacc.py: 506:Result : <list @ 0x7fa11283fdc8> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 430:Defaulted state 149: Reduce using 92
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if factor dot id opar arg_list_empty . LexToken(cpar,')',57,1609)
   yacc.py: 471:Action : Reduce rule [args -> arg_list_empty] with [[]] and goto state 153
   yacc.py: 506:Result : <list @ 0x7fa11283fdc8> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if factor dot id opar args . LexToken(cpar,')',57,1609)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if factor dot id opar args cpar . LexToken(equal,'=',57,1611)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['length','(',[],')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7fa112802ec8> (('length', []))
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if factor dot func_call . LexToken(equal,'=',57,1611)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<VariableNode @ 0x7fa1129364e0>,'.',('length', [])] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7fa1129887b8> (<tools.ast.CallNode object at 0x7fa11298 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if factor . LexToken(equal,'=',57,1611)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<CallNode @ 0x7fa1129887b8>] and goto state 76
   yacc.py: 506:Result : <CallNode @ 0x7fa1129887b8> (<tools.ast.CallNode object at 0x7fa11298 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if base_call . LexToken(equal,'=',57,1611)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<CallNode @ 0x7fa1129887b8>] and goto state 75
   yacc.py: 506:Result : <CallNode @ 0x7fa1129887b8> (<tools.ast.CallNode object at 0x7fa11298 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if term . LexToken(equal,'=',57,1611)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<CallNode @ 0x7fa1129887b8>] and goto state 74
   yacc.py: 506:Result : <CallNode @ 0x7fa1129887b8> (<tools.ast.CallNode object at 0x7fa11298 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if op . LexToken(equal,'=',57,1611)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<CallNode @ 0x7fa1129887b8>] and goto state 73
   yacc.py: 506:Result : <CallNode @ 0x7fa1129887b8> (<tools.ast.CallNode object at 0x7fa11298 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if comp . LexToken(equal,'=',57,1611)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if comp equal . LexToken(num,0.0,57,1613)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if comp equal num . LexToken(then,'then',57,1615)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [0.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112936438> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if comp equal atom . LexToken(then,'then',57,1615)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7fa112936438>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112936438> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if comp equal factor . LexToken(then,'then',57,1615)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7fa112936438>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112936438> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if comp equal base_call . LexToken(then,'then',57,1615)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7fa112936438>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112936438> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if comp equal term . LexToken(then,'then',57,1615)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7fa112936438>] and goto state 158
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112936438> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if comp equal op . LexToken(then,'then',57,1615)
   yacc.py: 471:Action : Reduce rule [comp -> comp equal op] with [<CallNode @ 0x7fa1129887b8>,'=',<ConstantNumNode @ 0x7fa112936438>] and goto state 73
   yacc.py: 506:Result : <EqualNode @ 0x7fa112988748> (<tools.ast.EqualNode object at 0x7fa1129 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if comp . LexToken(then,'then',57,1615)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<EqualNode @ 0x7fa112988748>] and goto state 132
   yacc.py: 506:Result : <EqualNode @ 0x7fa112988748> (<tools.ast.EqualNode object at 0x7fa1129 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr . LexToken(then,'then',57,1615)
   yacc.py: 445:Action : Shift and goto state 175
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then . LexToken(num,0.0,57,1620)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then num . LexToken(else,'else',57,1622)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [0.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988940> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then atom . LexToken(else,'else',57,1622)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7fa112988940>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988940> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor . LexToken(else,'else',57,1622)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7fa112988940>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988940> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then base_call . LexToken(else,'else',57,1622)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7fa112988940>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988940> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then term . LexToken(else,'else',57,1622)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7fa112988940>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988940> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then op . LexToken(else,'else',57,1622)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantNumNode @ 0x7fa112988940>] and goto state 73
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988940> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then comp . LexToken(else,'else',57,1622)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantNumNode @ 0x7fa112988940>] and goto state 203
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112988940> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 203
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr . LexToken(else,'else',57,1622)
   yacc.py: 445:Action : Shift and goto state 219
   yacc.py: 410:
   yacc.py: 411:State  : 219
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else . LexToken(if,'if',58,1628)
   yacc.py: 445:Action : Shift and goto state 86
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if . LexToken(id,'s',58,1631)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if id . LexToken(dot,'.',58,1632)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['s'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988828> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if atom . LexToken(dot,'.',58,1632)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7fa112988828>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7fa112988828> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if factor . LexToken(dot,'.',58,1632)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if factor dot . LexToken(id,'substr',58,1633)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if factor dot id . LexToken(opar,'(',58,1639)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if factor dot id opar . LexToken(num,0.0,58,1640)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if factor dot id opar num . LexToken(comma,',',58,1641)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [0.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1129888d0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if factor dot id opar atom . LexToken(comma,',',58,1641)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7fa1129888d0>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1129888d0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if factor dot id opar factor . LexToken(comma,',',58,1641)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7fa1129888d0>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1129888d0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if factor dot id opar base_call . LexToken(comma,',',58,1641)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7fa1129888d0>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1129888d0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if factor dot id opar term . LexToken(comma,',',58,1641)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7fa1129888d0>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1129888d0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if factor dot id opar op . LexToken(comma,',',58,1641)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantNumNode @ 0x7fa1129888d0>] and goto state 73
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1129888d0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if factor dot id opar comp . LexToken(comma,',',58,1641)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantNumNode @ 0x7fa1129888d0>] and goto state 155
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1129888d0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if factor dot id opar expr . LexToken(comma,',',58,1641)
   yacc.py: 445:Action : Shift and goto state 189
   yacc.py: 410:
   yacc.py: 411:State  : 189
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if factor dot id opar expr comma . LexToken(num,1.0,58,1642)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if factor dot id opar expr comma num . LexToken(cpar,')',58,1643)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [1.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f26a0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if factor dot id opar expr comma atom . LexToken(cpar,')',58,1643)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7fa1127f26a0>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f26a0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if factor dot id opar expr comma factor . LexToken(cpar,')',58,1643)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7fa1127f26a0>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f26a0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if factor dot id opar expr comma base_call . LexToken(cpar,')',58,1643)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7fa1127f26a0>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f26a0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if factor dot id opar expr comma term . LexToken(cpar,')',58,1643)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7fa1127f26a0>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f26a0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if factor dot id opar expr comma op . LexToken(cpar,')',58,1643)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantNumNode @ 0x7fa1127f26a0>] and goto state 73
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f26a0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if factor dot id opar expr comma comp . LexToken(cpar,')',58,1643)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantNumNode @ 0x7fa1127f26a0>] and goto state 155
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f26a0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if factor dot id opar expr comma expr . LexToken(cpar,')',58,1643)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<ConstantNumNode @ 0x7fa1127f26a0>] and goto state 211
   yacc.py: 506:Result : <list @ 0x7fa11283ffc8> ([<tools.ast.ConstantNumNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 211
   yacc.py: 430:Defaulted state 211: Reduce using 94
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if factor dot id opar expr comma arg_list . LexToken(cpar,')',58,1643)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr comma arg_list] with [<ConstantNumNode @ 0x7fa1129888d0>,',',<list @ 0x7fa11283ffc8>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7fa112840588> ([<tools.ast.ConstantNumNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if factor dot id opar arg_list . LexToken(cpar,')',58,1643)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7fa112840588>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7fa112840588> ([<tools.ast.ConstantNumNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if factor dot id opar args . LexToken(cpar,')',58,1643)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if factor dot id opar args cpar . LexToken(equal,'=',58,1645)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['substr','(',<list @ 0x7fa112840588>,')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7fa112802ec8> (('substr', [<tools.ast.ConstantNumNode o ...)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if factor dot func_call . LexToken(equal,'=',58,1645)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<VariableNode @ 0x7fa112988828>,'.',<tuple @ 0x7fa112802ec8>] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7fa1127f2630> (<tools.ast.CallNode object at 0x7fa1127f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if factor . LexToken(equal,'=',58,1645)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<CallNode @ 0x7fa1127f2630>] and goto state 76
   yacc.py: 506:Result : <CallNode @ 0x7fa1127f2630> (<tools.ast.CallNode object at 0x7fa1127f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if base_call . LexToken(equal,'=',58,1645)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<CallNode @ 0x7fa1127f2630>] and goto state 75
   yacc.py: 506:Result : <CallNode @ 0x7fa1127f2630> (<tools.ast.CallNode object at 0x7fa1127f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if term . LexToken(equal,'=',58,1645)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<CallNode @ 0x7fa1127f2630>] and goto state 74
   yacc.py: 506:Result : <CallNode @ 0x7fa1127f2630> (<tools.ast.CallNode object at 0x7fa1127f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if op . LexToken(equal,'=',58,1645)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<CallNode @ 0x7fa1127f2630>] and goto state 73
   yacc.py: 506:Result : <CallNode @ 0x7fa1127f2630> (<tools.ast.CallNode object at 0x7fa1127f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if comp . LexToken(equal,'=',58,1645)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if comp equal . LexToken(string,'-',58,1649)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if comp equal string . LexToken(then,'then',58,1651)
   yacc.py: 471:Action : Reduce rule [atom -> string] with ['-'] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f2ef0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if comp equal atom . LexToken(then,'then',58,1651)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7fa1127f2ef0>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f2ef0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if comp equal factor . LexToken(then,'then',58,1651)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantStrNode @ 0x7fa1127f2ef0>] and goto state 76
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f2ef0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if comp equal base_call . LexToken(then,'then',58,1651)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantStrNode @ 0x7fa1127f2ef0>] and goto state 75
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f2ef0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if comp equal term . LexToken(then,'then',58,1651)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantStrNode @ 0x7fa1127f2ef0>] and goto state 158
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa1127f2ef0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if comp equal op . LexToken(then,'then',58,1651)
   yacc.py: 471:Action : Reduce rule [comp -> comp equal op] with [<CallNode @ 0x7fa1127f2630>,'=',<ConstantStrNode @ 0x7fa1127f2ef0>] and goto state 73
   yacc.py: 506:Result : <EqualNode @ 0x7fa1127f27b8> (<tools.ast.EqualNode object at 0x7fa1127 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if comp . LexToken(then,'then',58,1651)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<EqualNode @ 0x7fa1127f27b8>] and goto state 132
   yacc.py: 506:Result : <EqualNode @ 0x7fa1127f27b8> (<tools.ast.EqualNode object at 0x7fa1127 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr . LexToken(then,'then',58,1651)
   yacc.py: 445:Action : Shift and goto state 175
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then . LexToken(nox,'~',58,1656)
   yacc.py: 445:Action : Shift and goto state 83
   yacc.py: 410:
   yacc.py: 411:State  : 83
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox . LexToken(id,'a2i_aux',58,1657)
   yacc.py: 445:Action : Shift and goto state 126
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id . LexToken(opar,'(',58,1664)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar . LexToken(id,'s',58,1665)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar id . LexToken(dot,'.',58,1666)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['s'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2358> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar atom . LexToken(dot,'.',58,1666)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7fa1127f2358>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2358> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor . LexToken(dot,'.',58,1666)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor dot . LexToken(id,'substr',58,1667)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor dot id . LexToken(opar,'(',58,1673)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor dot id opar . LexToken(num,1.0,58,1674)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor dot id opar num . LexToken(comma,',',58,1675)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [1.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2198> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor dot id opar atom . LexToken(comma,',',58,1675)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7fa1127f2198>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2198> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor dot id opar factor . LexToken(comma,',',58,1675)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7fa1127f2198>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2198> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor dot id opar base_call . LexToken(comma,',',58,1675)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7fa1127f2198>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2198> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor dot id opar term . LexToken(comma,',',58,1675)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7fa1127f2198>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2198> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor dot id opar op . LexToken(comma,',',58,1675)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantNumNode @ 0x7fa1127f2198>] and goto state 73
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2198> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor dot id opar comp . LexToken(comma,',',58,1675)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantNumNode @ 0x7fa1127f2198>] and goto state 155
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2198> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor dot id opar expr . LexToken(comma,',',58,1675)
   yacc.py: 445:Action : Shift and goto state 189
   yacc.py: 410:
   yacc.py: 411:State  : 189
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor dot id opar expr comma . LexToken(id,'s',58,1676)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor dot id opar expr comma id . LexToken(dot,'.',58,1677)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['s'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2eb8> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor dot id opar expr comma atom . LexToken(dot,'.',58,1677)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7fa1127f2eb8>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2eb8> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor dot id opar expr comma factor . LexToken(dot,'.',58,1677)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor dot id opar expr comma factor dot . LexToken(id,'length',58,1678)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor dot id opar expr comma factor dot id . LexToken(opar,'(',58,1684)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor dot id opar expr comma factor dot id opar . LexToken(cpar,')',58,1685)
   yacc.py: 474:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 150
   yacc.py: 548:Result : <NoneType @ 0x5612b010f0f0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 150
   yacc.py: 430:Defaulted state 150: Reduce using 96
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor dot id opar expr comma factor dot id opar epsilon . LexToken(cpar,')',58,1685)
   yacc.py: 471:Action : Reduce rule [arg_list_empty -> epsilon] with [None] and goto state 149
   yacc.py: 506:Result : <list @ 0x7fa11283ffc8> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 430:Defaulted state 149: Reduce using 92
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor dot id opar expr comma factor dot id opar arg_list_empty . LexToken(cpar,')',58,1685)
   yacc.py: 471:Action : Reduce rule [args -> arg_list_empty] with [[]] and goto state 153
   yacc.py: 506:Result : <list @ 0x7fa11283ffc8> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor dot id opar expr comma factor dot id opar args . LexToken(cpar,')',58,1685)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor dot id opar expr comma factor dot id opar args cpar . LexToken(minus,'-',58,1686)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['length','(',[],')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7fa112802ec8> (('length', []))
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor dot id opar expr comma factor dot func_call . LexToken(minus,'-',58,1686)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<VariableNode @ 0x7fa1127f2eb8>,'.',('length', [])] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7fa112837160> (<tools.ast.CallNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor dot id opar expr comma factor . LexToken(minus,'-',58,1686)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<CallNode @ 0x7fa112837160>] and goto state 76
   yacc.py: 506:Result : <CallNode @ 0x7fa112837160> (<tools.ast.CallNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor dot id opar expr comma base_call . LexToken(minus,'-',58,1686)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<CallNode @ 0x7fa112837160>] and goto state 75
   yacc.py: 506:Result : <CallNode @ 0x7fa112837160> (<tools.ast.CallNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor dot id opar expr comma term . LexToken(minus,'-',58,1686)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<CallNode @ 0x7fa112837160>] and goto state 74
   yacc.py: 506:Result : <CallNode @ 0x7fa112837160> (<tools.ast.CallNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor dot id opar expr comma op . LexToken(minus,'-',58,1686)
   yacc.py: 445:Action : Shift and goto state 118
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor dot id opar expr comma op minus . LexToken(num,1.0,58,1687)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor dot id opar expr comma op minus num . LexToken(cpar,')',58,1688)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [1.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1128370f0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor dot id opar expr comma op minus atom . LexToken(cpar,')',58,1688)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7fa1128370f0>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1128370f0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor dot id opar expr comma op minus factor . LexToken(cpar,')',58,1688)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7fa1128370f0>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1128370f0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor dot id opar expr comma op minus base_call . LexToken(cpar,')',58,1688)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7fa1128370f0>] and goto state 160
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1128370f0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 160
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor dot id opar expr comma op minus term . LexToken(cpar,')',58,1688)
   yacc.py: 471:Action : Reduce rule [op -> op minus term] with [<CallNode @ 0x7fa112837160>,'-',<ConstantNumNode @ 0x7fa1128370f0>] and goto state 74
   yacc.py: 506:Result : <MinusNode @ 0x7fa1128371d0> (<tools.ast.MinusNode object at 0x7fa1128 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor dot id opar expr comma op . LexToken(cpar,')',58,1688)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<MinusNode @ 0x7fa1128371d0>] and goto state 73
   yacc.py: 506:Result : <MinusNode @ 0x7fa1128371d0> (<tools.ast.MinusNode object at 0x7fa1128 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor dot id opar expr comma comp . LexToken(cpar,')',58,1688)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<MinusNode @ 0x7fa1128371d0>] and goto state 155
   yacc.py: 506:Result : <MinusNode @ 0x7fa1128371d0> (<tools.ast.MinusNode object at 0x7fa1128 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor dot id opar expr comma expr . LexToken(cpar,')',58,1688)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<MinusNode @ 0x7fa1128371d0>] and goto state 211
   yacc.py: 506:Result : <list @ 0x7fa1128402c8> ([<tools.ast.MinusNode object at 0x7fa112 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 211
   yacc.py: 430:Defaulted state 211: Reduce using 94
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor dot id opar expr comma arg_list . LexToken(cpar,')',58,1688)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr comma arg_list] with [<ConstantNumNode @ 0x7fa1127f2198>,',',<list @ 0x7fa1128402c8>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7fa112840788> ([<tools.ast.ConstantNumNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor dot id opar arg_list . LexToken(cpar,')',58,1688)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7fa112840788>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7fa112840788> ([<tools.ast.ConstantNumNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor dot id opar args . LexToken(cpar,')',58,1688)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor dot id opar args cpar . LexToken(cpar,')',58,1689)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['substr','(',<list @ 0x7fa112840788>,')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7fa112802ec8> (('substr', [<tools.ast.ConstantNumNode o ...)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor dot func_call . LexToken(cpar,')',58,1689)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<VariableNode @ 0x7fa1127f2358>,'.',<tuple @ 0x7fa112802ec8>] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7fa1127f2e80> (<tools.ast.CallNode object at 0x7fa1127f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar factor . LexToken(cpar,')',58,1689)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<CallNode @ 0x7fa1127f2e80>] and goto state 76
   yacc.py: 506:Result : <CallNode @ 0x7fa1127f2e80> (<tools.ast.CallNode object at 0x7fa1127f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar base_call . LexToken(cpar,')',58,1689)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<CallNode @ 0x7fa1127f2e80>] and goto state 75
   yacc.py: 506:Result : <CallNode @ 0x7fa1127f2e80> (<tools.ast.CallNode object at 0x7fa1127f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar term . LexToken(cpar,')',58,1689)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<CallNode @ 0x7fa1127f2e80>] and goto state 74
   yacc.py: 506:Result : <CallNode @ 0x7fa1127f2e80> (<tools.ast.CallNode object at 0x7fa1127f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar op . LexToken(cpar,')',58,1689)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<CallNode @ 0x7fa1127f2e80>] and goto state 73
   yacc.py: 506:Result : <CallNode @ 0x7fa1127f2e80> (<tools.ast.CallNode object at 0x7fa1127f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar comp . LexToken(cpar,')',58,1689)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<CallNode @ 0x7fa1127f2e80>] and goto state 155
   yacc.py: 506:Result : <CallNode @ 0x7fa1127f2e80> (<tools.ast.CallNode object at 0x7fa1127f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar expr . LexToken(cpar,')',58,1689)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<CallNode @ 0x7fa1127f2e80>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7fa1128402c8> ([<tools.ast.CallNode object at 0x7fa1127 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar arg_list . LexToken(cpar,')',58,1689)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7fa1128402c8>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7fa1128402c8> ([<tools.ast.CallNode object at 0x7fa1127 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar args . LexToken(cpar,')',58,1689)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox id opar args cpar . LexToken(else,'else',58,1691)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['a2i_aux','(',<list @ 0x7fa1128402c8>,')'] and goto state 78
   yacc.py: 506:Result : <tuple @ 0x7fa112802ec8> (('a2i_aux', [<tools.ast.CallNode object  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 78
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox func_call . LexToken(else,'else',58,1691)
   yacc.py: 471:Action : Reduce rule [factor -> func_call] with [<tuple @ 0x7fa112802ec8>] and goto state 77
   yacc.py: 506:Result : <StaticCallNode @ 0x7fa1127f2710> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox factor . LexToken(else,'else',58,1691)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<StaticCallNode @ 0x7fa1127f2710>] and goto state 127
   yacc.py: 506:Result : <StaticCallNode @ 0x7fa1127f2710> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 127
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then nox base_call . LexToken(else,'else',58,1691)
   yacc.py: 471:Action : Reduce rule [factor -> nox base_call] with ['~',<StaticCallNode @ 0x7fa1127f2710>] and goto state 77
   yacc.py: 506:Result : <BinaryNotNode @ 0x7fa1127f24e0> (<tools.ast.BinaryNotNode object at 0x7fa ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor . LexToken(else,'else',58,1691)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<BinaryNotNode @ 0x7fa1127f24e0>] and goto state 76
   yacc.py: 506:Result : <BinaryNotNode @ 0x7fa1127f24e0> (<tools.ast.BinaryNotNode object at 0x7fa ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then base_call . LexToken(else,'else',58,1691)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<BinaryNotNode @ 0x7fa1127f24e0>] and goto state 75
   yacc.py: 506:Result : <BinaryNotNode @ 0x7fa1127f24e0> (<tools.ast.BinaryNotNode object at 0x7fa ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then term . LexToken(else,'else',58,1691)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<BinaryNotNode @ 0x7fa1127f24e0>] and goto state 74
   yacc.py: 506:Result : <BinaryNotNode @ 0x7fa1127f24e0> (<tools.ast.BinaryNotNode object at 0x7fa ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then op . LexToken(else,'else',58,1691)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<BinaryNotNode @ 0x7fa1127f24e0>] and goto state 73
   yacc.py: 506:Result : <BinaryNotNode @ 0x7fa1127f24e0> (<tools.ast.BinaryNotNode object at 0x7fa ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then comp . LexToken(else,'else',58,1691)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<BinaryNotNode @ 0x7fa1127f24e0>] and goto state 203
   yacc.py: 506:Result : <BinaryNotNode @ 0x7fa1127f24e0> (<tools.ast.BinaryNotNode object at 0x7fa ...)
   yacc.py: 410:
   yacc.py: 411:State  : 203
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr . LexToken(else,'else',58,1691)
   yacc.py: 445:Action : Shift and goto state 219
   yacc.py: 410:
   yacc.py: 411:State  : 219
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else . LexToken(if,'if',59,1704)
   yacc.py: 445:Action : Shift and goto state 86
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if . LexToken(id,'s',59,1707)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if id . LexToken(dot,'.',59,1708)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['s'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2e10> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if atom . LexToken(dot,'.',59,1708)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7fa1127f2e10>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2e10> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if factor . LexToken(dot,'.',59,1708)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if factor dot . LexToken(id,'substr',59,1709)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if factor dot id . LexToken(opar,'(',59,1715)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if factor dot id opar . LexToken(num,0.0,59,1716)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if factor dot id opar num . LexToken(comma,',',59,1717)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [0.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2f60> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if factor dot id opar atom . LexToken(comma,',',59,1717)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7fa1127f2f60>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2f60> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if factor dot id opar factor . LexToken(comma,',',59,1717)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7fa1127f2f60>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2f60> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if factor dot id opar base_call . LexToken(comma,',',59,1717)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7fa1127f2f60>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2f60> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if factor dot id opar term . LexToken(comma,',',59,1717)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7fa1127f2f60>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2f60> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if factor dot id opar op . LexToken(comma,',',59,1717)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantNumNode @ 0x7fa1127f2f60>] and goto state 73
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2f60> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if factor dot id opar comp . LexToken(comma,',',59,1717)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantNumNode @ 0x7fa1127f2f60>] and goto state 155
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2f60> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if factor dot id opar expr . LexToken(comma,',',59,1717)
   yacc.py: 445:Action : Shift and goto state 189
   yacc.py: 410:
   yacc.py: 411:State  : 189
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if factor dot id opar expr comma . LexToken(num,1.0,59,1718)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if factor dot id opar expr comma num . LexToken(cpar,')',59,1719)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [1.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112837390> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if factor dot id opar expr comma atom . LexToken(cpar,')',59,1719)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7fa112837390>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112837390> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if factor dot id opar expr comma factor . LexToken(cpar,')',59,1719)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7fa112837390>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112837390> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if factor dot id opar expr comma base_call . LexToken(cpar,')',59,1719)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7fa112837390>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112837390> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if factor dot id opar expr comma term . LexToken(cpar,')',59,1719)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7fa112837390>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112837390> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if factor dot id opar expr comma op . LexToken(cpar,')',59,1719)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantNumNode @ 0x7fa112837390>] and goto state 73
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112837390> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if factor dot id opar expr comma comp . LexToken(cpar,')',59,1719)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantNumNode @ 0x7fa112837390>] and goto state 155
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112837390> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if factor dot id opar expr comma expr . LexToken(cpar,')',59,1719)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<ConstantNumNode @ 0x7fa112837390>] and goto state 211
   yacc.py: 506:Result : <list @ 0x7fa112840948> ([<tools.ast.ConstantNumNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 211
   yacc.py: 430:Defaulted state 211: Reduce using 94
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if factor dot id opar expr comma arg_list . LexToken(cpar,')',59,1719)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr comma arg_list] with [<ConstantNumNode @ 0x7fa1127f2f60>,',',<list @ 0x7fa112840948>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7fa112840988> ([<tools.ast.ConstantNumNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if factor dot id opar arg_list . LexToken(cpar,')',59,1719)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7fa112840988>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7fa112840988> ([<tools.ast.ConstantNumNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if factor dot id opar args . LexToken(cpar,')',59,1719)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if factor dot id opar args cpar . LexToken(equal,'=',59,1721)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['substr','(',<list @ 0x7fa112840988>,')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7fa112802ec8> (('substr', [<tools.ast.ConstantNumNode o ...)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if factor dot func_call . LexToken(equal,'=',59,1721)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<VariableNode @ 0x7fa1127f2e10>,'.',<tuple @ 0x7fa112802ec8>] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7fa112837208> (<tools.ast.CallNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if factor . LexToken(equal,'=',59,1721)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<CallNode @ 0x7fa112837208>] and goto state 76
   yacc.py: 506:Result : <CallNode @ 0x7fa112837208> (<tools.ast.CallNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if base_call . LexToken(equal,'=',59,1721)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<CallNode @ 0x7fa112837208>] and goto state 75
   yacc.py: 506:Result : <CallNode @ 0x7fa112837208> (<tools.ast.CallNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if term . LexToken(equal,'=',59,1721)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<CallNode @ 0x7fa112837208>] and goto state 74
   yacc.py: 506:Result : <CallNode @ 0x7fa112837208> (<tools.ast.CallNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if op . LexToken(equal,'=',59,1721)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<CallNode @ 0x7fa112837208>] and goto state 73
   yacc.py: 506:Result : <CallNode @ 0x7fa112837208> (<tools.ast.CallNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if comp . LexToken(equal,'=',59,1721)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if comp equal . LexToken(string,'+',59,1725)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if comp equal string . LexToken(then,'then',59,1727)
   yacc.py: 471:Action : Reduce rule [atom -> string] with ['+'] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112837908> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if comp equal atom . LexToken(then,'then',59,1727)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7fa112837908>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112837908> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if comp equal factor . LexToken(then,'then',59,1727)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantStrNode @ 0x7fa112837908>] and goto state 76
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112837908> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if comp equal base_call . LexToken(then,'then',59,1727)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantStrNode @ 0x7fa112837908>] and goto state 75
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112837908> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if comp equal term . LexToken(then,'then',59,1727)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantStrNode @ 0x7fa112837908>] and goto state 158
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112837908> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if comp equal op . LexToken(then,'then',59,1727)
   yacc.py: 471:Action : Reduce rule [comp -> comp equal op] with [<CallNode @ 0x7fa112837208>,'=',<ConstantStrNode @ 0x7fa112837908>] and goto state 73
   yacc.py: 506:Result : <EqualNode @ 0x7fa1128370b8> (<tools.ast.EqualNode object at 0x7fa1128 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if comp . LexToken(then,'then',59,1727)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<EqualNode @ 0x7fa1128370b8>] and goto state 132
   yacc.py: 506:Result : <EqualNode @ 0x7fa1128370b8> (<tools.ast.EqualNode object at 0x7fa1128 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr . LexToken(then,'then',59,1727)
   yacc.py: 445:Action : Shift and goto state 175
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then . LexToken(id,'a2i_aux',59,1732)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id . LexToken(opar,'(',59,1739)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar . LexToken(id,'s',59,1740)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar id . LexToken(dot,'.',59,1741)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['s'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837240> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar atom . LexToken(dot,'.',59,1741)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7fa112837240>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837240> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor . LexToken(dot,'.',59,1741)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor dot . LexToken(id,'substr',59,1742)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor dot id . LexToken(opar,'(',59,1748)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor dot id opar . LexToken(num,1.0,59,1749)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor dot id opar num . LexToken(comma,',',59,1750)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [1.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112837668> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor dot id opar atom . LexToken(comma,',',59,1750)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7fa112837668>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112837668> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor dot id opar factor . LexToken(comma,',',59,1750)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7fa112837668>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112837668> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor dot id opar base_call . LexToken(comma,',',59,1750)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7fa112837668>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112837668> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor dot id opar term . LexToken(comma,',',59,1750)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7fa112837668>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112837668> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor dot id opar op . LexToken(comma,',',59,1750)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantNumNode @ 0x7fa112837668>] and goto state 73
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112837668> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor dot id opar comp . LexToken(comma,',',59,1750)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantNumNode @ 0x7fa112837668>] and goto state 155
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112837668> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor dot id opar expr . LexToken(comma,',',59,1750)
   yacc.py: 445:Action : Shift and goto state 189
   yacc.py: 410:
   yacc.py: 411:State  : 189
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor dot id opar expr comma . LexToken(id,'s',59,1751)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor dot id opar expr comma id . LexToken(dot,'.',59,1752)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['s'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837ac8> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor dot id opar expr comma atom . LexToken(dot,'.',59,1752)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7fa112837ac8>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837ac8> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor dot id opar expr comma factor . LexToken(dot,'.',59,1752)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor dot id opar expr comma factor dot . LexToken(id,'length',59,1753)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor dot id opar expr comma factor dot id . LexToken(opar,'(',59,1759)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor dot id opar expr comma factor dot id opar . LexToken(cpar,')',59,1760)
   yacc.py: 474:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 150
   yacc.py: 548:Result : <NoneType @ 0x5612b010f0f0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 150
   yacc.py: 430:Defaulted state 150: Reduce using 96
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor dot id opar expr comma factor dot id opar epsilon . LexToken(cpar,')',59,1760)
   yacc.py: 471:Action : Reduce rule [arg_list_empty -> epsilon] with [None] and goto state 149
   yacc.py: 506:Result : <list @ 0x7fa112840948> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 430:Defaulted state 149: Reduce using 92
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor dot id opar expr comma factor dot id opar arg_list_empty . LexToken(cpar,')',59,1760)
   yacc.py: 471:Action : Reduce rule [args -> arg_list_empty] with [[]] and goto state 153
   yacc.py: 506:Result : <list @ 0x7fa112840948> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor dot id opar expr comma factor dot id opar args . LexToken(cpar,')',59,1760)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor dot id opar expr comma factor dot id opar args cpar . LexToken(minus,'-',59,1761)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['length','(',[],')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7fa112802ec8> (('length', []))
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor dot id opar expr comma factor dot func_call . LexToken(minus,'-',59,1761)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<VariableNode @ 0x7fa112837ac8>,'.',('length', [])] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7fa112837b38> (<tools.ast.CallNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor dot id opar expr comma factor . LexToken(minus,'-',59,1761)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<CallNode @ 0x7fa112837b38>] and goto state 76
   yacc.py: 506:Result : <CallNode @ 0x7fa112837b38> (<tools.ast.CallNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor dot id opar expr comma base_call . LexToken(minus,'-',59,1761)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<CallNode @ 0x7fa112837b38>] and goto state 75
   yacc.py: 506:Result : <CallNode @ 0x7fa112837b38> (<tools.ast.CallNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor dot id opar expr comma term . LexToken(minus,'-',59,1761)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<CallNode @ 0x7fa112837b38>] and goto state 74
   yacc.py: 506:Result : <CallNode @ 0x7fa112837b38> (<tools.ast.CallNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor dot id opar expr comma op . LexToken(minus,'-',59,1761)
   yacc.py: 445:Action : Shift and goto state 118
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor dot id opar expr comma op minus . LexToken(num,1.0,59,1762)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor dot id opar expr comma op minus num . LexToken(cpar,')',59,1763)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [1.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112837898> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor dot id opar expr comma op minus atom . LexToken(cpar,')',59,1763)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7fa112837898>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112837898> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor dot id opar expr comma op minus factor . LexToken(cpar,')',59,1763)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7fa112837898>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112837898> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor dot id opar expr comma op minus base_call . LexToken(cpar,')',59,1763)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7fa112837898>] and goto state 160
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112837898> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 160
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor dot id opar expr comma op minus term . LexToken(cpar,')',59,1763)
   yacc.py: 471:Action : Reduce rule [op -> op minus term] with [<CallNode @ 0x7fa112837b38>,'-',<ConstantNumNode @ 0x7fa112837898>] and goto state 74
   yacc.py: 506:Result : <MinusNode @ 0x7fa112837828> (<tools.ast.MinusNode object at 0x7fa1128 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor dot id opar expr comma op . LexToken(cpar,')',59,1763)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<MinusNode @ 0x7fa112837828>] and goto state 73
   yacc.py: 506:Result : <MinusNode @ 0x7fa112837828> (<tools.ast.MinusNode object at 0x7fa1128 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor dot id opar expr comma comp . LexToken(cpar,')',59,1763)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<MinusNode @ 0x7fa112837828>] and goto state 155
   yacc.py: 506:Result : <MinusNode @ 0x7fa112837828> (<tools.ast.MinusNode object at 0x7fa1128 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor dot id opar expr comma expr . LexToken(cpar,')',59,1763)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<MinusNode @ 0x7fa112837828>] and goto state 211
   yacc.py: 506:Result : <list @ 0x7fa112840548> ([<tools.ast.MinusNode object at 0x7fa112 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 211
   yacc.py: 430:Defaulted state 211: Reduce using 94
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor dot id opar expr comma arg_list . LexToken(cpar,')',59,1763)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr comma arg_list] with [<ConstantNumNode @ 0x7fa112837668>,',',<list @ 0x7fa112840548>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7fa112840b88> ([<tools.ast.ConstantNumNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor dot id opar arg_list . LexToken(cpar,')',59,1763)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7fa112840b88>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7fa112840b88> ([<tools.ast.ConstantNumNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor dot id opar args . LexToken(cpar,')',59,1763)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor dot id opar args cpar . LexToken(cpar,')',59,1764)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['substr','(',<list @ 0x7fa112840b88>,')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7fa112802ec8> (('substr', [<tools.ast.ConstantNumNode o ...)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor dot func_call . LexToken(cpar,')',59,1764)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<VariableNode @ 0x7fa112837240>,'.',<tuple @ 0x7fa112802ec8>] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7fa112837588> (<tools.ast.CallNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar factor . LexToken(cpar,')',59,1764)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<CallNode @ 0x7fa112837588>] and goto state 76
   yacc.py: 506:Result : <CallNode @ 0x7fa112837588> (<tools.ast.CallNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar base_call . LexToken(cpar,')',59,1764)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<CallNode @ 0x7fa112837588>] and goto state 75
   yacc.py: 506:Result : <CallNode @ 0x7fa112837588> (<tools.ast.CallNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar term . LexToken(cpar,')',59,1764)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<CallNode @ 0x7fa112837588>] and goto state 74
   yacc.py: 506:Result : <CallNode @ 0x7fa112837588> (<tools.ast.CallNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar op . LexToken(cpar,')',59,1764)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<CallNode @ 0x7fa112837588>] and goto state 73
   yacc.py: 506:Result : <CallNode @ 0x7fa112837588> (<tools.ast.CallNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar comp . LexToken(cpar,')',59,1764)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<CallNode @ 0x7fa112837588>] and goto state 155
   yacc.py: 506:Result : <CallNode @ 0x7fa112837588> (<tools.ast.CallNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar expr . LexToken(cpar,')',59,1764)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<CallNode @ 0x7fa112837588>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7fa112840548> ([<tools.ast.CallNode object at 0x7fa1128 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar arg_list . LexToken(cpar,')',59,1764)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7fa112840548>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7fa112840548> ([<tools.ast.CallNode object at 0x7fa1128 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar args . LexToken(cpar,')',59,1764)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then id opar args cpar . LexToken(else,'else',59,1766)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['a2i_aux','(',<list @ 0x7fa112840548>,')'] and goto state 78
   yacc.py: 506:Result : <tuple @ 0x7fa112802ec8> (('a2i_aux', [<tools.ast.CallNode object  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 78
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then func_call . LexToken(else,'else',59,1766)
   yacc.py: 471:Action : Reduce rule [factor -> func_call] with [<tuple @ 0x7fa112802ec8>] and goto state 77
   yacc.py: 506:Result : <StaticCallNode @ 0x7fa112837400> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then factor . LexToken(else,'else',59,1766)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<StaticCallNode @ 0x7fa112837400>] and goto state 76
   yacc.py: 506:Result : <StaticCallNode @ 0x7fa112837400> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then base_call . LexToken(else,'else',59,1766)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<StaticCallNode @ 0x7fa112837400>] and goto state 75
   yacc.py: 506:Result : <StaticCallNode @ 0x7fa112837400> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then term . LexToken(else,'else',59,1766)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<StaticCallNode @ 0x7fa112837400>] and goto state 74
   yacc.py: 506:Result : <StaticCallNode @ 0x7fa112837400> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then op . LexToken(else,'else',59,1766)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<StaticCallNode @ 0x7fa112837400>] and goto state 73
   yacc.py: 506:Result : <StaticCallNode @ 0x7fa112837400> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then comp . LexToken(else,'else',59,1766)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<StaticCallNode @ 0x7fa112837400>] and goto state 203
   yacc.py: 506:Result : <StaticCallNode @ 0x7fa112837400> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 203
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr . LexToken(else,'else',59,1766)
   yacc.py: 445:Action : Shift and goto state 219
   yacc.py: 410:
   yacc.py: 411:State  : 219
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else . LexToken(id,'a2i_aux',60,1782)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else id . LexToken(opar,'(',60,1789)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else id opar . LexToken(id,'s',60,1790)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else id opar id . LexToken(cpar,')',60,1791)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['s'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837630> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else id opar atom . LexToken(cpar,')',60,1791)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7fa112837630>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837630> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else id opar factor . LexToken(cpar,')',60,1791)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7fa112837630>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837630> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else id opar base_call . LexToken(cpar,')',60,1791)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7fa112837630>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837630> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else id opar term . LexToken(cpar,')',60,1791)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7fa112837630>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837630> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else id opar op . LexToken(cpar,')',60,1791)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<VariableNode @ 0x7fa112837630>] and goto state 73
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837630> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else id opar comp . LexToken(cpar,')',60,1791)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<VariableNode @ 0x7fa112837630>] and goto state 155
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837630> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else id opar expr . LexToken(cpar,')',60,1791)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<VariableNode @ 0x7fa112837630>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7fa112840748> ([<tools.ast.VariableNode object at 0x7fa ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else id opar arg_list . LexToken(cpar,')',60,1791)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7fa112840748>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7fa112840748> ([<tools.ast.VariableNode object at 0x7fa ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else id opar args . LexToken(cpar,')',60,1791)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else id opar args cpar . LexToken(fi,'fi',61,1801)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['a2i_aux','(',<list @ 0x7fa112840748>,')'] and goto state 78
   yacc.py: 506:Result : <tuple @ 0x7fa112802ec8> (('a2i_aux', [<tools.ast.VariableNode obj ...)
   yacc.py: 410:
   yacc.py: 411:State  : 78
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else func_call . LexToken(fi,'fi',61,1801)
   yacc.py: 471:Action : Reduce rule [factor -> func_call] with [<tuple @ 0x7fa112802ec8>] and goto state 77
   yacc.py: 506:Result : <StaticCallNode @ 0x7fa112837b70> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else factor . LexToken(fi,'fi',61,1801)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<StaticCallNode @ 0x7fa112837b70>] and goto state 76
   yacc.py: 506:Result : <StaticCallNode @ 0x7fa112837b70> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else base_call . LexToken(fi,'fi',61,1801)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<StaticCallNode @ 0x7fa112837b70>] and goto state 75
   yacc.py: 506:Result : <StaticCallNode @ 0x7fa112837b70> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else term . LexToken(fi,'fi',61,1801)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<StaticCallNode @ 0x7fa112837b70>] and goto state 74
   yacc.py: 506:Result : <StaticCallNode @ 0x7fa112837b70> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else op . LexToken(fi,'fi',61,1801)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<StaticCallNode @ 0x7fa112837b70>] and goto state 73
   yacc.py: 506:Result : <StaticCallNode @ 0x7fa112837b70> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else comp . LexToken(fi,'fi',61,1801)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<StaticCallNode @ 0x7fa112837b70>] and goto state 228
   yacc.py: 506:Result : <StaticCallNode @ 0x7fa112837b70> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 228
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else expr . LexToken(fi,'fi',61,1801)
   yacc.py: 445:Action : Shift and goto state 230
   yacc.py: 410:
   yacc.py: 411:State  : 230
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else if expr then expr else expr fi . LexToken(fi,'fi',61,1804)
   yacc.py: 471:Action : Reduce rule [factor -> if expr then expr else expr fi] with ['if',<EqualNode @ 0x7fa1128370b8>,'then',<StaticCallNode @ 0x7fa112837400>,'else',<StaticCallNode @ 0x7fa112837b70>,'fi'] and goto state 77
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112837cf8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor . LexToken(fi,'fi',61,1804)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConditionalNode @ 0x7fa112837cf8>] and goto state 76
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112837cf8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else base_call . LexToken(fi,'fi',61,1804)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConditionalNode @ 0x7fa112837cf8>] and goto state 75
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112837cf8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else term . LexToken(fi,'fi',61,1804)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConditionalNode @ 0x7fa112837cf8>] and goto state 74
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112837cf8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else op . LexToken(fi,'fi',61,1804)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConditionalNode @ 0x7fa112837cf8>] and goto state 73
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112837cf8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else comp . LexToken(fi,'fi',61,1804)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConditionalNode @ 0x7fa112837cf8>] and goto state 228
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112837cf8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 228
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else expr . LexToken(fi,'fi',61,1804)
   yacc.py: 445:Action : Shift and goto state 230
   yacc.py: 410:
   yacc.py: 411:State  : 230
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else expr fi . LexToken(fi,'fi',61,1807)
   yacc.py: 471:Action : Reduce rule [factor -> if expr then expr else expr fi] with ['if',<EqualNode @ 0x7fa1127f27b8>,'then',<BinaryNotNode @ 0x7fa1127f24e0>,'else',<ConditionalNode @ 0x7fa112837cf8>,'fi'] and goto state 77
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112837a20> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else factor . LexToken(fi,'fi',61,1807)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConditionalNode @ 0x7fa112837a20>] and goto state 76
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112837a20> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else base_call . LexToken(fi,'fi',61,1807)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConditionalNode @ 0x7fa112837a20>] and goto state 75
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112837a20> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else term . LexToken(fi,'fi',61,1807)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConditionalNode @ 0x7fa112837a20>] and goto state 74
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112837a20> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else op . LexToken(fi,'fi',61,1807)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConditionalNode @ 0x7fa112837a20>] and goto state 73
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112837a20> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else comp . LexToken(fi,'fi',61,1807)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConditionalNode @ 0x7fa112837a20>] and goto state 228
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa112837a20> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 228
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else expr . LexToken(fi,'fi',61,1807)
   yacc.py: 445:Action : Shift and goto state 230
   yacc.py: 410:
   yacc.py: 411:State  : 230
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else expr fi . LexToken(ccur,'}',62,1815)
   yacc.py: 471:Action : Reduce rule [factor -> if expr then expr else expr fi] with ['if',<EqualNode @ 0x7fa112988748>,'then',<ConstantNumNode @ 0x7fa112988940>,'else',<ConditionalNode @ 0x7fa112837a20>,'fi'] and goto state 77
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f20b8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur factor . LexToken(ccur,'}',62,1815)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConditionalNode @ 0x7fa1127f20b8>] and goto state 76
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f20b8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur base_call . LexToken(ccur,'}',62,1815)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConditionalNode @ 0x7fa1127f20b8>] and goto state 75
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f20b8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur term . LexToken(ccur,'}',62,1815)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConditionalNode @ 0x7fa1127f20b8>] and goto state 74
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f20b8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur op . LexToken(ccur,'}',62,1815)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConditionalNode @ 0x7fa1127f20b8>] and goto state 73
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f20b8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur comp . LexToken(ccur,'}',62,1815)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConditionalNode @ 0x7fa1127f20b8>] and goto state 206
   yacc.py: 506:Result : <ConditionalNode @ 0x7fa1127f20b8> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 206
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur expr . LexToken(ccur,'}',62,1815)
   yacc.py: 445:Action : Shift and goto state 222
   yacc.py: 410:
   yacc.py: 411:State  : 222
   yacc.py: 430:Defaulted state 222: Reduce using 25
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi id opar formals cpar colon type ocur expr ccur . None
   yacc.py: 471:Action : Reduce rule [def_func -> id opar formals cpar colon type ocur expr ccur] with ['a2i','(',<list @ 0x7fa112840348>,')',':','Int','{',<ConditionalNode @ 0x7fa1127f20b8>,'}'] and goto state 18
   yacc.py: 506:Result : <FuncDeclarationNode @ 0x7fa112988048> (<tools.ast.FuncDeclarationNode object at ...)
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func . LexToken(semi,';',62,1816)
   yacc.py: 445:Action : Shift and goto state 30
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi . LexToken(id,'a2i_aux',68,1947)
   yacc.py: 445:Action : Shift and goto state 19
   yacc.py: 410:
   yacc.py: 411:State  : 19
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id . LexToken(opar,'(',68,1954)
   yacc.py: 445:Action : Shift and goto state 32
   yacc.py: 410:
   yacc.py: 411:State  : 32
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar . LexToken(id,'s',68,1955)
   yacc.py: 445:Action : Shift and goto state 46
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar id . LexToken(colon,':',68,1957)
   yacc.py: 445:Action : Shift and goto state 61
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar id colon . LexToken(type,'String',68,1959)
   yacc.py: 445:Action : Shift and goto state 96
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar id colon type . LexToken(cpar,')',68,1965)
   yacc.py: 471:Action : Reduce rule [param -> id colon type] with ['s',':','String'] and goto state 44
   yacc.py: 506:Result : <tuple @ 0x7fa112802ec8> (('s', 'String'))
   yacc.py: 410:
   yacc.py: 411:State  : 44
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar param . LexToken(cpar,')',68,1965)
   yacc.py: 471:Action : Reduce rule [param_list -> param] with [('s', 'String')] and goto state 42
   yacc.py: 506:Result : <list @ 0x7fa112840d88> ([('s', 'String')])
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 430:Defaulted state 42: Reduce using 30
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar param_list . LexToken(cpar,')',68,1965)
   yacc.py: 471:Action : Reduce rule [formals -> param_list] with [<list @ 0x7fa112840d88>] and goto state 51
   yacc.py: 506:Result : <list @ 0x7fa112840d88> ([('s', 'String')])
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals . LexToken(cpar,')',68,1965)
   yacc.py: 445:Action : Shift and goto state 64
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar . LexToken(colon,':',68,1967)
   yacc.py: 445:Action : Shift and goto state 100
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon . LexToken(type,'Int',68,1969)
   yacc.py: 445:Action : Shift and goto state 138
   yacc.py: 410:
   yacc.py: 411:State  : 138
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type . LexToken(ocur,'{',68,1973)
   yacc.py: 445:Action : Shift and goto state 181
   yacc.py: 410:
   yacc.py: 411:State  : 181
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur . LexToken(opar,'(',69,1976)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar . LexToken(let,'let',69,1977)
   yacc.py: 445:Action : Shift and goto state 84
   yacc.py: 410:
   yacc.py: 411:State  : 84
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let . LexToken(id,'int',69,1981)
   yacc.py: 445:Action : Shift and goto state 46
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let id . LexToken(colon,':',69,1985)
   yacc.py: 445:Action : Shift and goto state 61
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let id colon . LexToken(type,'Int',69,1987)
   yacc.py: 445:Action : Shift and goto state 96
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let id colon type . LexToken(larrow,'<-',69,1991)
   yacc.py: 471:Action : Reduce rule [param -> id colon type] with ['int',':','Int'] and goto state 130
   yacc.py: 506:Result : <tuple @ 0x7fa112804688> (('int', 'Int'))
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let param . LexToken(larrow,'<-',69,1991)
   yacc.py: 445:Action : Shift and goto state 173
   yacc.py: 410:
   yacc.py: 411:State  : 173
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let param larrow . LexToken(num,0.0,69,1994)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let param larrow num . LexToken(in,'in',69,1996)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [0.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2a20> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let param larrow atom . LexToken(in,'in',69,1996)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7fa1127f2a20>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2a20> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let param larrow factor . LexToken(in,'in',69,1996)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7fa1127f2a20>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2a20> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let param larrow base_call . LexToken(in,'in',69,1996)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7fa1127f2a20>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2a20> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let param larrow term . LexToken(in,'in',69,1996)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7fa1127f2a20>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2a20> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let param larrow op . LexToken(in,'in',69,1996)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantNumNode @ 0x7fa1127f2a20>] and goto state 73
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2a20> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let param larrow comp . LexToken(in,'in',69,1996)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantNumNode @ 0x7fa1127f2a20>] and goto state 198
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1127f2a20> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let param larrow expr . LexToken(in,'in',69,1996)
   yacc.py: 471:Action : Reduce rule [let_assign -> param larrow expr] with [('int', 'Int'),'<-',<ConstantNumNode @ 0x7fa1127f2a20>] and goto state 129
   yacc.py: 506:Result : <VarDeclarationNode @ 0x7fa1127f2438> (<tools.ast.VarDeclarationNode object at  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_assign . LexToken(in,'in',69,1996)
   yacc.py: 471:Action : Reduce rule [let_list -> let_assign] with [<VarDeclarationNode @ 0x7fa1127f2438>] and goto state 128
   yacc.py: 506:Result : <list @ 0x7fa112840f48> ([<tools.ast.VarDeclarationNode object at ...)
   yacc.py: 410:
   yacc.py: 411:State  : 128
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list . LexToken(in,'in',69,1996)
   yacc.py: 445:Action : Shift and goto state 171
   yacc.py: 410:
   yacc.py: 411:State  : 171
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in . LexToken(ocur,'{',70,2011)
   yacc.py: 445:Action : Shift and goto state 90
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur . LexToken(opar,'(',71,2029)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar . LexToken(let,'let',71,2030)
   yacc.py: 445:Action : Shift and goto state 84
   yacc.py: 410:
   yacc.py: 411:State  : 84
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let . LexToken(id,'j',71,2034)
   yacc.py: 445:Action : Shift and goto state 46
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let id . LexToken(colon,':',71,2036)
   yacc.py: 445:Action : Shift and goto state 61
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let id colon . LexToken(type,'Int',71,2038)
   yacc.py: 445:Action : Shift and goto state 96
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let id colon type . LexToken(larrow,'<-',71,2042)
   yacc.py: 471:Action : Reduce rule [param -> id colon type] with ['j',':','Int'] and goto state 130
   yacc.py: 506:Result : <tuple @ 0x7fa112804688> (('j', 'Int'))
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let param . LexToken(larrow,'<-',71,2042)
   yacc.py: 445:Action : Shift and goto state 173
   yacc.py: 410:
   yacc.py: 411:State  : 173
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let param larrow . LexToken(id,'s',71,2045)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let param larrow id . LexToken(dot,'.',71,2046)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['s'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7fa1128372e8> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let param larrow atom . LexToken(dot,'.',71,2046)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7fa1128372e8>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7fa1128372e8> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let param larrow factor . LexToken(dot,'.',71,2046)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let param larrow factor dot . LexToken(id,'length',71,2047)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let param larrow factor dot id . LexToken(opar,'(',71,2053)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let param larrow factor dot id opar . LexToken(cpar,')',71,2054)
   yacc.py: 474:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 150
   yacc.py: 548:Result : <NoneType @ 0x5612b010f0f0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 150
   yacc.py: 430:Defaulted state 150: Reduce using 96
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let param larrow factor dot id opar epsilon . LexToken(cpar,')',71,2054)
   yacc.py: 471:Action : Reduce rule [arg_list_empty -> epsilon] with [None] and goto state 149
   yacc.py: 506:Result : <list @ 0x7fa112840d48> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 430:Defaulted state 149: Reduce using 92
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let param larrow factor dot id opar arg_list_empty . LexToken(cpar,')',71,2054)
   yacc.py: 471:Action : Reduce rule [args -> arg_list_empty] with [[]] and goto state 153
   yacc.py: 506:Result : <list @ 0x7fa112840d48> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let param larrow factor dot id opar args . LexToken(cpar,')',71,2054)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let param larrow factor dot id opar args cpar . LexToken(in,'in',71,2056)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['length','(',[],')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7fa112802c48> (('length', []))
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let param larrow factor dot func_call . LexToken(in,'in',71,2056)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<VariableNode @ 0x7fa1128372e8>,'.',('length', [])] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7fa112837da0> (<tools.ast.CallNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let param larrow factor . LexToken(in,'in',71,2056)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<CallNode @ 0x7fa112837da0>] and goto state 76
   yacc.py: 506:Result : <CallNode @ 0x7fa112837da0> (<tools.ast.CallNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let param larrow base_call . LexToken(in,'in',71,2056)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<CallNode @ 0x7fa112837da0>] and goto state 75
   yacc.py: 506:Result : <CallNode @ 0x7fa112837da0> (<tools.ast.CallNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let param larrow term . LexToken(in,'in',71,2056)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<CallNode @ 0x7fa112837da0>] and goto state 74
   yacc.py: 506:Result : <CallNode @ 0x7fa112837da0> (<tools.ast.CallNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let param larrow op . LexToken(in,'in',71,2056)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<CallNode @ 0x7fa112837da0>] and goto state 73
   yacc.py: 506:Result : <CallNode @ 0x7fa112837da0> (<tools.ast.CallNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let param larrow comp . LexToken(in,'in',71,2056)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<CallNode @ 0x7fa112837da0>] and goto state 198
   yacc.py: 506:Result : <CallNode @ 0x7fa112837da0> (<tools.ast.CallNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let param larrow expr . LexToken(in,'in',71,2056)
   yacc.py: 471:Action : Reduce rule [let_assign -> param larrow expr] with [('j', 'Int'),'<-',<CallNode @ 0x7fa112837da0>] and goto state 129
   yacc.py: 506:Result : <VarDeclarationNode @ 0x7fa112837d68> (<tools.ast.VarDeclarationNode object at  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_assign . LexToken(in,'in',71,2056)
   yacc.py: 471:Action : Reduce rule [let_list -> let_assign] with [<VarDeclarationNode @ 0x7fa112837d68>] and goto state 128
   yacc.py: 506:Result : <list @ 0x7fa112840b48> ([<tools.ast.VarDeclarationNode object at ...)
   yacc.py: 410:
   yacc.py: 411:State  : 128
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list . LexToken(in,'in',71,2056)
   yacc.py: 445:Action : Shift and goto state 171
   yacc.py: 410:
   yacc.py: 411:State  : 171
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in . LexToken(opar,'(',72,2070)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar . LexToken(let,'let',72,2071)
   yacc.py: 445:Action : Shift and goto state 84
   yacc.py: 410:
   yacc.py: 411:State  : 84
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let . LexToken(id,'i',72,2075)
   yacc.py: 445:Action : Shift and goto state 46
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let id . LexToken(colon,':',72,2077)
   yacc.py: 445:Action : Shift and goto state 61
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let id colon . LexToken(type,'Int',72,2079)
   yacc.py: 445:Action : Shift and goto state 96
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let id colon type . LexToken(larrow,'<-',72,2083)
   yacc.py: 471:Action : Reduce rule [param -> id colon type] with ['i',':','Int'] and goto state 130
   yacc.py: 506:Result : <tuple @ 0x7fa112804688> (('i', 'Int'))
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let param . LexToken(larrow,'<-',72,2083)
   yacc.py: 445:Action : Shift and goto state 173
   yacc.py: 410:
   yacc.py: 411:State  : 173
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let param larrow . LexToken(num,0.0,72,2086)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let param larrow num . LexToken(in,'in',72,2088)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [0.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112837d30> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let param larrow atom . LexToken(in,'in',72,2088)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7fa112837d30>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112837d30> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let param larrow factor . LexToken(in,'in',72,2088)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7fa112837d30>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112837d30> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let param larrow base_call . LexToken(in,'in',72,2088)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7fa112837d30>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112837d30> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let param larrow term . LexToken(in,'in',72,2088)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7fa112837d30>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112837d30> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let param larrow op . LexToken(in,'in',72,2088)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantNumNode @ 0x7fa112837d30>] and goto state 73
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112837d30> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let param larrow comp . LexToken(in,'in',72,2088)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantNumNode @ 0x7fa112837d30>] and goto state 198
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112837d30> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let param larrow expr . LexToken(in,'in',72,2088)
   yacc.py: 471:Action : Reduce rule [let_assign -> param larrow expr] with [('i', 'Int'),'<-',<ConstantNumNode @ 0x7fa112837d30>] and goto state 129
   yacc.py: 506:Result : <VarDeclarationNode @ 0x7fa112837f98> (<tools.ast.VarDeclarationNode object at  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_assign . LexToken(in,'in',72,2088)
   yacc.py: 471:Action : Reduce rule [let_list -> let_assign] with [<VarDeclarationNode @ 0x7fa112837f98>] and goto state 128
   yacc.py: 506:Result : <list @ 0x7fa112937108> ([<tools.ast.VarDeclarationNode object at ...)
   yacc.py: 410:
   yacc.py: 411:State  : 128
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list . LexToken(in,'in',72,2088)
   yacc.py: 445:Action : Shift and goto state 171
   yacc.py: 410:
   yacc.py: 411:State  : 171
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in . LexToken(while,'while',73,2097)
   yacc.py: 445:Action : Shift and goto state 87
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while . LexToken(id,'i',73,2103)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while id . LexToken(less,'<',73,2105)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['i'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837ef0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while atom . LexToken(less,'<',73,2105)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7fa112837ef0>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837ef0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while factor . LexToken(less,'<',73,2105)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7fa112837ef0>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837ef0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while base_call . LexToken(less,'<',73,2105)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7fa112837ef0>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837ef0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while term . LexToken(less,'<',73,2105)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7fa112837ef0>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837ef0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while op . LexToken(less,'<',73,2105)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<VariableNode @ 0x7fa112837ef0>] and goto state 73
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837ef0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while comp . LexToken(less,'<',73,2105)
   yacc.py: 445:Action : Shift and goto state 114
   yacc.py: 410:
   yacc.py: 411:State  : 114
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while comp less . LexToken(id,'j',73,2107)
   yacc.py: 445:Action : Shift and goto state 126
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while comp less id . LexToken(loop,'loop',73,2109)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['j'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837c88> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while comp less atom . LexToken(loop,'loop',73,2109)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7fa112837c88>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837c88> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while comp less factor . LexToken(loop,'loop',73,2109)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7fa112837c88>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837c88> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while comp less base_call . LexToken(loop,'loop',73,2109)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7fa112837c88>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837c88> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while comp less term . LexToken(loop,'loop',73,2109)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7fa112837c88>] and goto state 156
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837c88> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 156
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while comp less op . LexToken(loop,'loop',73,2109)
   yacc.py: 471:Action : Reduce rule [comp -> comp less op] with [<VariableNode @ 0x7fa112837ef0>,'<',<VariableNode @ 0x7fa112837c88>] and goto state 73
   yacc.py: 506:Result : <LessNode @ 0x7fa11291bf28> (<tools.ast.LessNode object at 0x7fa11291 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while comp . LexToken(loop,'loop',73,2109)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<LessNode @ 0x7fa11291bf28>] and goto state 133
   yacc.py: 506:Result : <LessNode @ 0x7fa11291bf28> (<tools.ast.LessNode object at 0x7fa11291 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr . LexToken(loop,'loop',73,2109)
   yacc.py: 445:Action : Shift and goto state 176
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop . LexToken(ocur,'{',74,2117)
   yacc.py: 445:Action : Shift and goto state 90
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur . LexToken(id,'int',75,2126)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id . LexToken(larrow,'<-',75,2130)
   yacc.py: 445:Action : Shift and goto state 112
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow . LexToken(id,'int',75,2133)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow id . LexToken(star,'*',75,2137)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['int'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7fa112835080> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow atom . LexToken(star,'*',75,2137)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7fa112835080>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7fa112835080> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow factor . LexToken(star,'*',75,2137)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7fa112835080>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7fa112835080> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow base_call . LexToken(star,'*',75,2137)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7fa112835080>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7fa112835080> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow term . LexToken(star,'*',75,2137)
   yacc.py: 445:Action : Shift and goto state 119
   yacc.py: 410:
   yacc.py: 411:State  : 119
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow term star . LexToken(num,10.0,75,2139)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow term star num . LexToken(plus,'+',75,2142)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [10.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112835208> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow term star atom . LexToken(plus,'+',75,2142)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7fa112835208>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112835208> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow term star factor . LexToken(plus,'+',75,2142)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7fa112835208>] and goto state 161
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112835208> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow term star base_call . LexToken(plus,'+',75,2142)
   yacc.py: 471:Action : Reduce rule [term -> term star base_call] with [<VariableNode @ 0x7fa112835080>,'*',<ConstantNumNode @ 0x7fa112835208>] and goto state 75
   yacc.py: 506:Result : <StarNode @ 0x7fa112835390> (<tools.ast.StarNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow term . LexToken(plus,'+',75,2142)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<StarNode @ 0x7fa112835390>] and goto state 74
   yacc.py: 506:Result : <StarNode @ 0x7fa112835390> (<tools.ast.StarNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op . LexToken(plus,'+',75,2142)
   yacc.py: 445:Action : Shift and goto state 117
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus . LexToken(id,'c2i',75,2144)
   yacc.py: 445:Action : Shift and goto state 126
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus id . LexToken(opar,'(',75,2147)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus id opar . LexToken(id,'s',75,2148)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus id opar id . LexToken(dot,'.',75,2149)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['s'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7fa1128352e8> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus id opar atom . LexToken(dot,'.',75,2149)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7fa1128352e8>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7fa1128352e8> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus id opar factor . LexToken(dot,'.',75,2149)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus id opar factor dot . LexToken(id,'substr',75,2150)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus id opar factor dot id . LexToken(opar,'(',75,2156)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus id opar factor dot id opar . LexToken(id,'i',75,2157)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus id opar factor dot id opar id . LexToken(comma,',',75,2158)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['i'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837e80> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus id opar factor dot id opar atom . LexToken(comma,',',75,2158)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7fa112837e80>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837e80> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus id opar factor dot id opar factor . LexToken(comma,',',75,2158)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7fa112837e80>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837e80> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus id opar factor dot id opar base_call . LexToken(comma,',',75,2158)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7fa112837e80>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837e80> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus id opar factor dot id opar term . LexToken(comma,',',75,2158)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7fa112837e80>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837e80> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus id opar factor dot id opar op . LexToken(comma,',',75,2158)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<VariableNode @ 0x7fa112837e80>] and goto state 73
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837e80> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus id opar factor dot id opar comp . LexToken(comma,',',75,2158)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<VariableNode @ 0x7fa112837e80>] and goto state 155
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837e80> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus id opar factor dot id opar expr . LexToken(comma,',',75,2158)
   yacc.py: 445:Action : Shift and goto state 189
   yacc.py: 410:
   yacc.py: 411:State  : 189
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus id opar factor dot id opar expr comma . LexToken(num,1.0,75,2159)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus id opar factor dot id opar expr comma num . LexToken(cpar,')',75,2160)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [1.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112835550> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus id opar factor dot id opar expr comma atom . LexToken(cpar,')',75,2160)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7fa112835550>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112835550> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus id opar factor dot id opar expr comma factor . LexToken(cpar,')',75,2160)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7fa112835550>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112835550> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus id opar factor dot id opar expr comma base_call . LexToken(cpar,')',75,2160)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7fa112835550>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112835550> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus id opar factor dot id opar expr comma term . LexToken(cpar,')',75,2160)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7fa112835550>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112835550> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus id opar factor dot id opar expr comma op . LexToken(cpar,')',75,2160)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantNumNode @ 0x7fa112835550>] and goto state 73
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112835550> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus id opar factor dot id opar expr comma comp . LexToken(cpar,')',75,2160)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantNumNode @ 0x7fa112835550>] and goto state 155
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112835550> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus id opar factor dot id opar expr comma expr . LexToken(cpar,')',75,2160)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<ConstantNumNode @ 0x7fa112835550>] and goto state 211
   yacc.py: 506:Result : <list @ 0x7fa1129235c8> ([<tools.ast.ConstantNumNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 211
   yacc.py: 430:Defaulted state 211: Reduce using 94
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus id opar factor dot id opar expr comma arg_list . LexToken(cpar,')',75,2160)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr comma arg_list] with [<VariableNode @ 0x7fa112837e80>,',',<list @ 0x7fa1129235c8>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7fa112839f48> ([<tools.ast.VariableNode object at 0x7fa ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus id opar factor dot id opar arg_list . LexToken(cpar,')',75,2160)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7fa112839f48>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7fa112839f48> ([<tools.ast.VariableNode object at 0x7fa ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus id opar factor dot id opar args . LexToken(cpar,')',75,2160)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus id opar factor dot id opar args cpar . LexToken(cpar,')',75,2161)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['substr','(',<list @ 0x7fa112839f48>,')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7fa112804688> (('substr', [<tools.ast.VariableNode obje ...)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus id opar factor dot func_call . LexToken(cpar,')',75,2161)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<VariableNode @ 0x7fa1128352e8>,'.',<tuple @ 0x7fa112804688>] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7fa1128354e0> (<tools.ast.CallNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus id opar factor . LexToken(cpar,')',75,2161)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<CallNode @ 0x7fa1128354e0>] and goto state 76
   yacc.py: 506:Result : <CallNode @ 0x7fa1128354e0> (<tools.ast.CallNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus id opar base_call . LexToken(cpar,')',75,2161)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<CallNode @ 0x7fa1128354e0>] and goto state 75
   yacc.py: 506:Result : <CallNode @ 0x7fa1128354e0> (<tools.ast.CallNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus id opar term . LexToken(cpar,')',75,2161)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<CallNode @ 0x7fa1128354e0>] and goto state 74
   yacc.py: 506:Result : <CallNode @ 0x7fa1128354e0> (<tools.ast.CallNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus id opar op . LexToken(cpar,')',75,2161)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<CallNode @ 0x7fa1128354e0>] and goto state 73
   yacc.py: 506:Result : <CallNode @ 0x7fa1128354e0> (<tools.ast.CallNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus id opar comp . LexToken(cpar,')',75,2161)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<CallNode @ 0x7fa1128354e0>] and goto state 155
   yacc.py: 506:Result : <CallNode @ 0x7fa1128354e0> (<tools.ast.CallNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus id opar expr . LexToken(cpar,')',75,2161)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<CallNode @ 0x7fa1128354e0>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7fa1129235c8> ([<tools.ast.CallNode object at 0x7fa1128 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus id opar arg_list . LexToken(cpar,')',75,2161)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7fa1129235c8>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7fa1129235c8> ([<tools.ast.CallNode object at 0x7fa1128 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus id opar args . LexToken(cpar,')',75,2161)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus id opar args cpar . LexToken(semi,';',75,2162)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['c2i','(',<list @ 0x7fa1129235c8>,')'] and goto state 78
   yacc.py: 506:Result : <tuple @ 0x7fa112804688> (('c2i', [<tools.ast.CallNode object at 0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 78
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus func_call . LexToken(semi,';',75,2162)
   yacc.py: 471:Action : Reduce rule [factor -> func_call] with [<tuple @ 0x7fa112804688>] and goto state 77
   yacc.py: 506:Result : <StaticCallNode @ 0x7fa112835320> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus factor . LexToken(semi,';',75,2162)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<StaticCallNode @ 0x7fa112835320>] and goto state 76
   yacc.py: 506:Result : <StaticCallNode @ 0x7fa112835320> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus base_call . LexToken(semi,';',75,2162)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<StaticCallNode @ 0x7fa112835320>] and goto state 159
   yacc.py: 506:Result : <StaticCallNode @ 0x7fa112835320> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op plus term . LexToken(semi,';',75,2162)
   yacc.py: 471:Action : Reduce rule [op -> op plus term] with [<StarNode @ 0x7fa112835390>,'+',<StaticCallNode @ 0x7fa112835320>] and goto state 74
   yacc.py: 506:Result : <PlusNode @ 0x7fa1128353c8> (<tools.ast.PlusNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow op . LexToken(semi,';',75,2162)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<PlusNode @ 0x7fa1128353c8>] and goto state 73
   yacc.py: 506:Result : <PlusNode @ 0x7fa1128353c8> (<tools.ast.PlusNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow comp . LexToken(semi,';',75,2162)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<PlusNode @ 0x7fa1128353c8>] and goto state 152
   yacc.py: 506:Result : <PlusNode @ 0x7fa1128353c8> (<tools.ast.PlusNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 152
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur id larrow expr . LexToken(semi,';',75,2162)
   yacc.py: 471:Action : Reduce rule [expr -> id larrow expr] with ['int','<-',<PlusNode @ 0x7fa1128353c8>] and goto state 111
   yacc.py: 506:Result : <AssignNode @ 0x7fa1128356a0> (<tools.ast.AssignNode object at 0x7fa112 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur expr . LexToken(semi,';',75,2162)
   yacc.py: 445:Action : Shift and goto state 151
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur expr semi . LexToken(id,'i',76,2171)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur expr semi id . LexToken(larrow,'<-',76,2173)
   yacc.py: 445:Action : Shift and goto state 112
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur expr semi id larrow . LexToken(id,'i',76,2176)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur expr semi id larrow id . LexToken(plus,'+',76,2178)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['i'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7fa112835160> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur expr semi id larrow atom . LexToken(plus,'+',76,2178)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7fa112835160>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7fa112835160> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur expr semi id larrow factor . LexToken(plus,'+',76,2178)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7fa112835160>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7fa112835160> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur expr semi id larrow base_call . LexToken(plus,'+',76,2178)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7fa112835160>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7fa112835160> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur expr semi id larrow term . LexToken(plus,'+',76,2178)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7fa112835160>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7fa112835160> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur expr semi id larrow op . LexToken(plus,'+',76,2178)
   yacc.py: 445:Action : Shift and goto state 117
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur expr semi id larrow op plus . LexToken(num,1.0,76,2180)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur expr semi id larrow op plus num . LexToken(semi,';',76,2181)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [1.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1128355f8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur expr semi id larrow op plus atom . LexToken(semi,';',76,2181)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7fa1128355f8>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1128355f8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur expr semi id larrow op plus factor . LexToken(semi,';',76,2181)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7fa1128355f8>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1128355f8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur expr semi id larrow op plus base_call . LexToken(semi,';',76,2181)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7fa1128355f8>] and goto state 159
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1128355f8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur expr semi id larrow op plus term . LexToken(semi,';',76,2181)
   yacc.py: 471:Action : Reduce rule [op -> op plus term] with [<VariableNode @ 0x7fa112835160>,'+',<ConstantNumNode @ 0x7fa1128355f8>] and goto state 74
   yacc.py: 506:Result : <PlusNode @ 0x7fa112835400> (<tools.ast.PlusNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur expr semi id larrow op . LexToken(semi,';',76,2181)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<PlusNode @ 0x7fa112835400>] and goto state 73
   yacc.py: 506:Result : <PlusNode @ 0x7fa112835400> (<tools.ast.PlusNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur expr semi id larrow comp . LexToken(semi,';',76,2181)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<PlusNode @ 0x7fa112835400>] and goto state 152
   yacc.py: 506:Result : <PlusNode @ 0x7fa112835400> (<tools.ast.PlusNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 152
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur expr semi id larrow expr . LexToken(semi,';',76,2181)
   yacc.py: 471:Action : Reduce rule [expr -> id larrow expr] with ['i','<-',<PlusNode @ 0x7fa112835400>] and goto state 111
   yacc.py: 506:Result : <AssignNode @ 0x7fa112835630> (<tools.ast.AssignNode object at 0x7fa112 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur expr semi expr . LexToken(semi,';',76,2181)
   yacc.py: 445:Action : Shift and goto state 151
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur expr semi expr semi . LexToken(ccur,'}',77,2186)
   yacc.py: 471:Action : Reduce rule [block -> expr semi] with [<AssignNode @ 0x7fa112835630>,';'] and goto state 190
   yacc.py: 506:Result : <list @ 0x7fa112848e88> ([<tools.ast.AssignNode object at 0x7fa11 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 190
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur expr semi block . LexToken(ccur,'}',77,2186)
   yacc.py: 471:Action : Reduce rule [block -> expr semi block] with [<AssignNode @ 0x7fa1128356a0>,';',<list @ 0x7fa112848e88>] and goto state 135
   yacc.py: 506:Result : <list @ 0x7fa112848c08> ([<tools.ast.AssignNode object at 0x7fa11 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 135
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur block . LexToken(ccur,'}',77,2186)
   yacc.py: 445:Action : Shift and goto state 177
   yacc.py: 410:
   yacc.py: 411:State  : 177
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop ocur block ccur . LexToken(pool,'pool',78,2194)
   yacc.py: 471:Action : Reduce rule [atom -> ocur block ccur] with ['{',<list @ 0x7fa112848c08>,'}'] and goto state 79
   yacc.py: 506:Result : <BlockNode @ 0x7fa112835668> (<tools.ast.BlockNode object at 0x7fa1128 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop atom . LexToken(pool,'pool',78,2194)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<BlockNode @ 0x7fa112835668>] and goto state 77
   yacc.py: 506:Result : <BlockNode @ 0x7fa112835668> (<tools.ast.BlockNode object at 0x7fa1128 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop factor . LexToken(pool,'pool',78,2194)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<BlockNode @ 0x7fa112835668>] and goto state 76
   yacc.py: 506:Result : <BlockNode @ 0x7fa112835668> (<tools.ast.BlockNode object at 0x7fa1128 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop base_call . LexToken(pool,'pool',78,2194)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<BlockNode @ 0x7fa112835668>] and goto state 75
   yacc.py: 506:Result : <BlockNode @ 0x7fa112835668> (<tools.ast.BlockNode object at 0x7fa1128 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop term . LexToken(pool,'pool',78,2194)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<BlockNode @ 0x7fa112835668>] and goto state 74
   yacc.py: 506:Result : <BlockNode @ 0x7fa112835668> (<tools.ast.BlockNode object at 0x7fa1128 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop op . LexToken(pool,'pool',78,2194)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<BlockNode @ 0x7fa112835668>] and goto state 73
   yacc.py: 506:Result : <BlockNode @ 0x7fa112835668> (<tools.ast.BlockNode object at 0x7fa1128 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop comp . LexToken(pool,'pool',78,2194)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<BlockNode @ 0x7fa112835668>] and goto state 204
   yacc.py: 506:Result : <BlockNode @ 0x7fa112835668> (<tools.ast.BlockNode object at 0x7fa1128 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 204
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop expr . LexToken(pool,'pool',78,2194)
   yacc.py: 445:Action : Shift and goto state 220
   yacc.py: 410:
   yacc.py: 411:State  : 220
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in while expr loop expr pool . LexToken(cpar,')',79,2203)
   yacc.py: 471:Action : Reduce rule [factor -> while expr loop expr pool] with ['while',<LessNode @ 0x7fa11291bf28>,'loop',<BlockNode @ 0x7fa112835668>,'pool'] and goto state 77
   yacc.py: 506:Result : <WhileNode @ 0x7fa112835128> (<tools.ast.WhileNode object at 0x7fa1128 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in factor . LexToken(cpar,')',79,2203)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<WhileNode @ 0x7fa112835128>] and goto state 76
   yacc.py: 506:Result : <WhileNode @ 0x7fa112835128> (<tools.ast.WhileNode object at 0x7fa1128 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in base_call . LexToken(cpar,')',79,2203)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<WhileNode @ 0x7fa112835128>] and goto state 75
   yacc.py: 506:Result : <WhileNode @ 0x7fa112835128> (<tools.ast.WhileNode object at 0x7fa1128 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in term . LexToken(cpar,')',79,2203)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<WhileNode @ 0x7fa112835128>] and goto state 74
   yacc.py: 506:Result : <WhileNode @ 0x7fa112835128> (<tools.ast.WhileNode object at 0x7fa1128 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in op . LexToken(cpar,')',79,2203)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<WhileNode @ 0x7fa112835128>] and goto state 73
   yacc.py: 506:Result : <WhileNode @ 0x7fa112835128> (<tools.ast.WhileNode object at 0x7fa1128 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in comp . LexToken(cpar,')',79,2203)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<WhileNode @ 0x7fa112835128>] and goto state 196
   yacc.py: 506:Result : <WhileNode @ 0x7fa112835128> (<tools.ast.WhileNode object at 0x7fa1128 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar let let_list in expr . LexToken(cpar,')',79,2203)
   yacc.py: 471:Action : Reduce rule [factor -> let let_list in expr] with ['let',<list @ 0x7fa112937108>,'in',<WhileNode @ 0x7fa112835128>] and goto state 77
   yacc.py: 506:Result : <LetNode @ 0x7fa112835588> (<tools.ast.LetNode object at 0x7fa112835 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar factor . LexToken(cpar,')',79,2203)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<LetNode @ 0x7fa112835588>] and goto state 76
   yacc.py: 506:Result : <LetNode @ 0x7fa112835588> (<tools.ast.LetNode object at 0x7fa112835 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar base_call . LexToken(cpar,')',79,2203)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<LetNode @ 0x7fa112835588>] and goto state 75
   yacc.py: 506:Result : <LetNode @ 0x7fa112835588> (<tools.ast.LetNode object at 0x7fa112835 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar term . LexToken(cpar,')',79,2203)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<LetNode @ 0x7fa112835588>] and goto state 74
   yacc.py: 506:Result : <LetNode @ 0x7fa112835588> (<tools.ast.LetNode object at 0x7fa112835 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar op . LexToken(cpar,')',79,2203)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<LetNode @ 0x7fa112835588>] and goto state 73
   yacc.py: 506:Result : <LetNode @ 0x7fa112835588> (<tools.ast.LetNode object at 0x7fa112835 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar comp . LexToken(cpar,')',79,2203)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<LetNode @ 0x7fa112835588>] and goto state 123
   yacc.py: 506:Result : <LetNode @ 0x7fa112835588> (<tools.ast.LetNode object at 0x7fa112835 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 123
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar expr . LexToken(cpar,')',79,2203)
   yacc.py: 445:Action : Shift and goto state 170
   yacc.py: 410:
   yacc.py: 411:State  : 170
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in opar expr cpar . LexToken(cpar,')',80,2213)
   yacc.py: 471:Action : Reduce rule [factor -> opar expr cpar] with ['(',<LetNode @ 0x7fa112835588>,')'] and goto state 77
   yacc.py: 506:Result : <LetNode @ 0x7fa112835588> (<tools.ast.LetNode object at 0x7fa112835 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in factor . LexToken(cpar,')',80,2213)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<LetNode @ 0x7fa112835588>] and goto state 76
   yacc.py: 506:Result : <LetNode @ 0x7fa112835588> (<tools.ast.LetNode object at 0x7fa112835 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in base_call . LexToken(cpar,')',80,2213)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<LetNode @ 0x7fa112835588>] and goto state 75
   yacc.py: 506:Result : <LetNode @ 0x7fa112835588> (<tools.ast.LetNode object at 0x7fa112835 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in term . LexToken(cpar,')',80,2213)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<LetNode @ 0x7fa112835588>] and goto state 74
   yacc.py: 506:Result : <LetNode @ 0x7fa112835588> (<tools.ast.LetNode object at 0x7fa112835 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in op . LexToken(cpar,')',80,2213)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<LetNode @ 0x7fa112835588>] and goto state 73
   yacc.py: 506:Result : <LetNode @ 0x7fa112835588> (<tools.ast.LetNode object at 0x7fa112835 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in comp . LexToken(cpar,')',80,2213)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<LetNode @ 0x7fa112835588>] and goto state 196
   yacc.py: 506:Result : <LetNode @ 0x7fa112835588> (<tools.ast.LetNode object at 0x7fa112835 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar let let_list in expr . LexToken(cpar,')',80,2213)
   yacc.py: 471:Action : Reduce rule [factor -> let let_list in expr] with ['let',<list @ 0x7fa112840b48>,'in',<LetNode @ 0x7fa112835588>] and goto state 77
   yacc.py: 506:Result : <LetNode @ 0x7fa112837b00> (<tools.ast.LetNode object at 0x7fa112837 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar factor . LexToken(cpar,')',80,2213)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<LetNode @ 0x7fa112837b00>] and goto state 76
   yacc.py: 506:Result : <LetNode @ 0x7fa112837b00> (<tools.ast.LetNode object at 0x7fa112837 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar base_call . LexToken(cpar,')',80,2213)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<LetNode @ 0x7fa112837b00>] and goto state 75
   yacc.py: 506:Result : <LetNode @ 0x7fa112837b00> (<tools.ast.LetNode object at 0x7fa112837 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar term . LexToken(cpar,')',80,2213)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<LetNode @ 0x7fa112837b00>] and goto state 74
   yacc.py: 506:Result : <LetNode @ 0x7fa112837b00> (<tools.ast.LetNode object at 0x7fa112837 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar op . LexToken(cpar,')',80,2213)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<LetNode @ 0x7fa112837b00>] and goto state 73
   yacc.py: 506:Result : <LetNode @ 0x7fa112837b00> (<tools.ast.LetNode object at 0x7fa112837 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar comp . LexToken(cpar,')',80,2213)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<LetNode @ 0x7fa112837b00>] and goto state 123
   yacc.py: 506:Result : <LetNode @ 0x7fa112837b00> (<tools.ast.LetNode object at 0x7fa112837 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 123
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar expr . LexToken(cpar,')',80,2213)
   yacc.py: 445:Action : Shift and goto state 170
   yacc.py: 410:
   yacc.py: 411:State  : 170
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur opar expr cpar . LexToken(semi,';',80,2214)
   yacc.py: 471:Action : Reduce rule [factor -> opar expr cpar] with ['(',<LetNode @ 0x7fa112837b00>,')'] and goto state 77
   yacc.py: 506:Result : <LetNode @ 0x7fa112837b00> (<tools.ast.LetNode object at 0x7fa112837 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur factor . LexToken(semi,';',80,2214)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<LetNode @ 0x7fa112837b00>] and goto state 76
   yacc.py: 506:Result : <LetNode @ 0x7fa112837b00> (<tools.ast.LetNode object at 0x7fa112837 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur base_call . LexToken(semi,';',80,2214)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<LetNode @ 0x7fa112837b00>] and goto state 75
   yacc.py: 506:Result : <LetNode @ 0x7fa112837b00> (<tools.ast.LetNode object at 0x7fa112837 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur term . LexToken(semi,';',80,2214)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<LetNode @ 0x7fa112837b00>] and goto state 74
   yacc.py: 506:Result : <LetNode @ 0x7fa112837b00> (<tools.ast.LetNode object at 0x7fa112837 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur op . LexToken(semi,';',80,2214)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<LetNode @ 0x7fa112837b00>] and goto state 73
   yacc.py: 506:Result : <LetNode @ 0x7fa112837b00> (<tools.ast.LetNode object at 0x7fa112837 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur comp . LexToken(semi,';',80,2214)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<LetNode @ 0x7fa112837b00>] and goto state 111
   yacc.py: 506:Result : <LetNode @ 0x7fa112837b00> (<tools.ast.LetNode object at 0x7fa112837 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur expr . LexToken(semi,';',80,2214)
   yacc.py: 445:Action : Shift and goto state 151
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur expr semi . LexToken(id,'int',81,2230)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur expr semi id . LexToken(semi,';',81,2233)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['int'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837be0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur expr semi atom . LexToken(semi,';',81,2233)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7fa112837be0>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837be0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur expr semi factor . LexToken(semi,';',81,2233)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7fa112837be0>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837be0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur expr semi base_call . LexToken(semi,';',81,2233)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7fa112837be0>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837be0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur expr semi term . LexToken(semi,';',81,2233)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7fa112837be0>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837be0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur expr semi op . LexToken(semi,';',81,2233)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<VariableNode @ 0x7fa112837be0>] and goto state 73
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837be0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur expr semi comp . LexToken(semi,';',81,2233)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<VariableNode @ 0x7fa112837be0>] and goto state 111
   yacc.py: 506:Result : <VariableNode @ 0x7fa112837be0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur expr semi expr . LexToken(semi,';',81,2233)
   yacc.py: 445:Action : Shift and goto state 151
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur expr semi expr semi . LexToken(ccur,'}',82,2240)
   yacc.py: 471:Action : Reduce rule [block -> expr semi] with [<VariableNode @ 0x7fa112837be0>,';'] and goto state 190
   yacc.py: 506:Result : <list @ 0x7fa112848e88> ([<tools.ast.VariableNode object at 0x7fa ...)
   yacc.py: 410:
   yacc.py: 411:State  : 190
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur expr semi block . LexToken(ccur,'}',82,2240)
   yacc.py: 471:Action : Reduce rule [block -> expr semi block] with [<LetNode @ 0x7fa112837b00>,';',<list @ 0x7fa112848e88>] and goto state 135
   yacc.py: 506:Result : <list @ 0x7fa112969388> ([<tools.ast.LetNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 135
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur block . LexToken(ccur,'}',82,2240)
   yacc.py: 445:Action : Shift and goto state 177
   yacc.py: 410:
   yacc.py: 411:State  : 177
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in ocur block ccur . LexToken(cpar,')',83,2250)
   yacc.py: 471:Action : Reduce rule [atom -> ocur block ccur] with ['{',<list @ 0x7fa112969388>,'}'] and goto state 79
   yacc.py: 506:Result : <BlockNode @ 0x7fa112936400> (<tools.ast.BlockNode object at 0x7fa1129 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in atom . LexToken(cpar,')',83,2250)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<BlockNode @ 0x7fa112936400>] and goto state 77
   yacc.py: 506:Result : <BlockNode @ 0x7fa112936400> (<tools.ast.BlockNode object at 0x7fa1129 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in factor . LexToken(cpar,')',83,2250)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<BlockNode @ 0x7fa112936400>] and goto state 76
   yacc.py: 506:Result : <BlockNode @ 0x7fa112936400> (<tools.ast.BlockNode object at 0x7fa1129 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in base_call . LexToken(cpar,')',83,2250)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<BlockNode @ 0x7fa112936400>] and goto state 75
   yacc.py: 506:Result : <BlockNode @ 0x7fa112936400> (<tools.ast.BlockNode object at 0x7fa1129 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in term . LexToken(cpar,')',83,2250)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<BlockNode @ 0x7fa112936400>] and goto state 74
   yacc.py: 506:Result : <BlockNode @ 0x7fa112936400> (<tools.ast.BlockNode object at 0x7fa1129 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in op . LexToken(cpar,')',83,2250)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<BlockNode @ 0x7fa112936400>] and goto state 73
   yacc.py: 506:Result : <BlockNode @ 0x7fa112936400> (<tools.ast.BlockNode object at 0x7fa1129 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in comp . LexToken(cpar,')',83,2250)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<BlockNode @ 0x7fa112936400>] and goto state 196
   yacc.py: 506:Result : <BlockNode @ 0x7fa112936400> (<tools.ast.BlockNode object at 0x7fa1129 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar let let_list in expr . LexToken(cpar,')',83,2250)
   yacc.py: 471:Action : Reduce rule [factor -> let let_list in expr] with ['let',<list @ 0x7fa112840f48>,'in',<BlockNode @ 0x7fa112936400>] and goto state 77
   yacc.py: 506:Result : <LetNode @ 0x7fa112837470> (<tools.ast.LetNode object at 0x7fa112837 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar factor . LexToken(cpar,')',83,2250)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<LetNode @ 0x7fa112837470>] and goto state 76
   yacc.py: 506:Result : <LetNode @ 0x7fa112837470> (<tools.ast.LetNode object at 0x7fa112837 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar base_call . LexToken(cpar,')',83,2250)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<LetNode @ 0x7fa112837470>] and goto state 75
   yacc.py: 506:Result : <LetNode @ 0x7fa112837470> (<tools.ast.LetNode object at 0x7fa112837 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar term . LexToken(cpar,')',83,2250)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<LetNode @ 0x7fa112837470>] and goto state 74
   yacc.py: 506:Result : <LetNode @ 0x7fa112837470> (<tools.ast.LetNode object at 0x7fa112837 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar op . LexToken(cpar,')',83,2250)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<LetNode @ 0x7fa112837470>] and goto state 73
   yacc.py: 506:Result : <LetNode @ 0x7fa112837470> (<tools.ast.LetNode object at 0x7fa112837 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar comp . LexToken(cpar,')',83,2250)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<LetNode @ 0x7fa112837470>] and goto state 123
   yacc.py: 506:Result : <LetNode @ 0x7fa112837470> (<tools.ast.LetNode object at 0x7fa112837 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 123
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar expr . LexToken(cpar,')',83,2250)
   yacc.py: 445:Action : Shift and goto state 170
   yacc.py: 410:
   yacc.py: 411:State  : 170
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur opar expr cpar . LexToken(ccur,'}',84,2257)
   yacc.py: 471:Action : Reduce rule [factor -> opar expr cpar] with ['(',<LetNode @ 0x7fa112837470>,')'] and goto state 77
   yacc.py: 506:Result : <LetNode @ 0x7fa112837470> (<tools.ast.LetNode object at 0x7fa112837 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur factor . LexToken(ccur,'}',84,2257)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<LetNode @ 0x7fa112837470>] and goto state 76
   yacc.py: 506:Result : <LetNode @ 0x7fa112837470> (<tools.ast.LetNode object at 0x7fa112837 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur base_call . LexToken(ccur,'}',84,2257)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<LetNode @ 0x7fa112837470>] and goto state 75
   yacc.py: 506:Result : <LetNode @ 0x7fa112837470> (<tools.ast.LetNode object at 0x7fa112837 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur term . LexToken(ccur,'}',84,2257)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<LetNode @ 0x7fa112837470>] and goto state 74
   yacc.py: 506:Result : <LetNode @ 0x7fa112837470> (<tools.ast.LetNode object at 0x7fa112837 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur op . LexToken(ccur,'}',84,2257)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<LetNode @ 0x7fa112837470>] and goto state 73
   yacc.py: 506:Result : <LetNode @ 0x7fa112837470> (<tools.ast.LetNode object at 0x7fa112837 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur comp . LexToken(ccur,'}',84,2257)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<LetNode @ 0x7fa112837470>] and goto state 206
   yacc.py: 506:Result : <LetNode @ 0x7fa112837470> (<tools.ast.LetNode object at 0x7fa112837 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 206
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur expr . LexToken(ccur,'}',84,2257)
   yacc.py: 445:Action : Shift and goto state 222
   yacc.py: 410:
   yacc.py: 411:State  : 222
   yacc.py: 430:Defaulted state 222: Reduce using 25
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi id opar formals cpar colon type ocur expr ccur . None
   yacc.py: 471:Action : Reduce rule [def_func -> id opar formals cpar colon type ocur expr ccur] with ['a2i_aux','(',<list @ 0x7fa112840d88>,')',':','Int','{',<LetNode @ 0x7fa112837470>,'}'] and goto state 18
   yacc.py: 506:Result : <FuncDeclarationNode @ 0x7fa1127f2080> (<tools.ast.FuncDeclarationNode object at ...)
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func . LexToken(semi,';',84,2258)
   yacc.py: 445:Action : Shift and goto state 30
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi . LexToken(id,'i2a',90,2369)
   yacc.py: 445:Action : Shift and goto state 19
   yacc.py: 410:
   yacc.py: 411:State  : 19
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id . LexToken(opar,'(',90,2372)
   yacc.py: 445:Action : Shift and goto state 32
   yacc.py: 410:
   yacc.py: 411:State  : 32
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar . LexToken(id,'i',90,2373)
   yacc.py: 445:Action : Shift and goto state 46
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar id . LexToken(colon,':',90,2375)
   yacc.py: 445:Action : Shift and goto state 61
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar id colon . LexToken(type,'Int',90,2377)
   yacc.py: 445:Action : Shift and goto state 96
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar id colon type . LexToken(cpar,')',90,2380)
   yacc.py: 471:Action : Reduce rule [param -> id colon type] with ['i',':','Int'] and goto state 44
   yacc.py: 506:Result : <tuple @ 0x7fa112804688> (('i', 'Int'))
   yacc.py: 410:
   yacc.py: 411:State  : 44
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar param . LexToken(cpar,')',90,2380)
   yacc.py: 471:Action : Reduce rule [param_list -> param] with [('i', 'Int')] and goto state 42
   yacc.py: 506:Result : <list @ 0x7fa112847b48> ([('i', 'Int')])
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 430:Defaulted state 42: Reduce using 30
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar param_list . LexToken(cpar,')',90,2380)
   yacc.py: 471:Action : Reduce rule [formals -> param_list] with [[('i', 'Int')]] and goto state 51
   yacc.py: 506:Result : <list @ 0x7fa112847b48> ([('i', 'Int')])
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals . LexToken(cpar,')',90,2380)
   yacc.py: 445:Action : Shift and goto state 64
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar . LexToken(colon,':',90,2382)
   yacc.py: 445:Action : Shift and goto state 100
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon . LexToken(type,'String',90,2384)
   yacc.py: 445:Action : Shift and goto state 138
   yacc.py: 410:
   yacc.py: 411:State  : 138
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type . LexToken(ocur,'{',90,2391)
   yacc.py: 445:Action : Shift and goto state 181
   yacc.py: 410:
   yacc.py: 411:State  : 181
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur . LexToken(if,'if',91,2394)
   yacc.py: 445:Action : Shift and goto state 86
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if . LexToken(id,'i',91,2397)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if id . LexToken(equal,'=',91,2399)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['i'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2cc0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if atom . LexToken(equal,'=',91,2399)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7fa1127f2cc0>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2cc0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if factor . LexToken(equal,'=',91,2399)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7fa1127f2cc0>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2cc0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if base_call . LexToken(equal,'=',91,2399)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7fa1127f2cc0>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2cc0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if term . LexToken(equal,'=',91,2399)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7fa1127f2cc0>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2cc0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if op . LexToken(equal,'=',91,2399)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<VariableNode @ 0x7fa1127f2cc0>] and goto state 73
   yacc.py: 506:Result : <VariableNode @ 0x7fa1127f2cc0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if comp . LexToken(equal,'=',91,2399)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if comp equal . LexToken(num,0.0,91,2401)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if comp equal num . LexToken(then,'then',91,2403)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [0.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112837dd8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if comp equal atom . LexToken(then,'then',91,2403)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7fa112837dd8>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112837dd8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if comp equal factor . LexToken(then,'then',91,2403)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7fa112837dd8>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112837dd8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if comp equal base_call . LexToken(then,'then',91,2403)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7fa112837dd8>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112837dd8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if comp equal term . LexToken(then,'then',91,2403)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7fa112837dd8>] and goto state 158
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa112837dd8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if comp equal op . LexToken(then,'then',91,2403)
   yacc.py: 471:Action : Reduce rule [comp -> comp equal op] with [<VariableNode @ 0x7fa1127f2cc0>,'=',<ConstantNumNode @ 0x7fa112837dd8>] and goto state 73
   yacc.py: 506:Result : <EqualNode @ 0x7fa112988390> (<tools.ast.EqualNode object at 0x7fa1129 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if comp . LexToken(then,'then',91,2403)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<EqualNode @ 0x7fa112988390>] and goto state 132
   yacc.py: 506:Result : <EqualNode @ 0x7fa112988390> (<tools.ast.EqualNode object at 0x7fa1129 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr . LexToken(then,'then',91,2403)
   yacc.py: 445:Action : Shift and goto state 175
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then . LexToken(string,'0',91,2410)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then string . LexToken(else,'else',91,2412)
   yacc.py: 471:Action : Reduce rule [atom -> string] with ['0'] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112837ba8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then atom . LexToken(else,'else',91,2412)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7fa112837ba8>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112837ba8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor . LexToken(else,'else',91,2412)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantStrNode @ 0x7fa112837ba8>] and goto state 76
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112837ba8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then base_call . LexToken(else,'else',91,2412)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantStrNode @ 0x7fa112837ba8>] and goto state 75
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112837ba8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then term . LexToken(else,'else',91,2412)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantStrNode @ 0x7fa112837ba8>] and goto state 74
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112837ba8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then op . LexToken(else,'else',91,2412)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantStrNode @ 0x7fa112837ba8>] and goto state 73
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112837ba8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then comp . LexToken(else,'else',91,2412)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantStrNode @ 0x7fa112837ba8>] and goto state 203
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112837ba8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 203
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr . LexToken(else,'else',91,2412)
   yacc.py: 445:Action : Shift and goto state 219
   yacc.py: 410:
   yacc.py: 411:State  : 219
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else . LexToken(if,'if',92,2426)
   yacc.py: 445:Action : Shift and goto state 86
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if . LexToken(num,0.0,92,2429)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if num . LexToken(less,'<',92,2431)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [0.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1128378d0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if atom . LexToken(less,'<',92,2431)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7fa1128378d0>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1128378d0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if factor . LexToken(less,'<',92,2431)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7fa1128378d0>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1128378d0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if base_call . LexToken(less,'<',92,2431)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7fa1128378d0>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1128378d0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if term . LexToken(less,'<',92,2431)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7fa1128378d0>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1128378d0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if op . LexToken(less,'<',92,2431)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantNumNode @ 0x7fa1128378d0>] and goto state 73
   yacc.py: 506:Result : <ConstantNumNode @ 0x7fa1128378d0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if comp . LexToken(less,'<',92,2431)
   yacc.py: 445:Action : Shift and goto state 114
   yacc.py: 410:
   yacc.py: 411:State  : 114
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if comp less . LexToken(id,'i',92,2433)
   yacc.py: 445:Action : Shift and goto state 126
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if comp less id . LexToken(then,'then',92,2435)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['i'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7fa1128355c0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if comp less atom . LexToken(then,'then',92,2435)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7fa1128355c0>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7fa1128355c0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if comp less factor . LexToken(then,'then',92,2435)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7fa1128355c0>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7fa1128355c0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if comp less base_call . LexToken(then,'then',92,2435)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7fa1128355c0>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7fa1128355c0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if comp less term . LexToken(then,'then',92,2435)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7fa1128355c0>] and goto state 156
   yacc.py: 506:Result : <VariableNode @ 0x7fa1128355c0> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 156
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if comp less op . LexToken(then,'then',92,2435)
   yacc.py: 471:Action : Reduce rule [comp -> comp less op] with [<ConstantNumNode @ 0x7fa1128378d0>,'<',<VariableNode @ 0x7fa1128355c0>] and goto state 73
   yacc.py: 506:Result : <LessNode @ 0x7fa1128352b0> (<tools.ast.LessNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if comp . LexToken(then,'then',92,2435)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<LessNode @ 0x7fa1128352b0>] and goto state 132
   yacc.py: 506:Result : <LessNode @ 0x7fa1128352b0> (<tools.ast.LessNode object at 0x7fa11283 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr . LexToken(then,'then',92,2435)
   yacc.py: 445:Action : Shift and goto state 175
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then . LexToken(id,'i2a_aux',92,2440)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then id . LexToken(opar,'(',92,2447)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then id opar . LexToken(id,'i',92,2448)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then id opar id . LexToken(cpar,')',92,2449)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['i'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7fa1128354a8> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then id opar atom . LexToken(cpar,')',92,2449)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7fa1128354a8>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7fa1128354a8> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then id opar factor . LexToken(cpar,')',92,2449)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7fa1128354a8>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7fa1128354a8> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then id opar base_call . LexToken(cpar,')',92,2449)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7fa1128354a8>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7fa1128354a8> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then id opar term . LexToken(cpar,')',92,2449)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7fa1128354a8>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7fa1128354a8> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then id opar op . LexToken(cpar,')',92,2449)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<VariableNode @ 0x7fa1128354a8>] and goto state 73
   yacc.py: 506:Result : <VariableNode @ 0x7fa1128354a8> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then id opar comp . LexToken(cpar,')',92,2449)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<VariableNode @ 0x7fa1128354a8>] and goto state 155
   yacc.py: 506:Result : <VariableNode @ 0x7fa1128354a8> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then id opar expr . LexToken(cpar,')',92,2449)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<VariableNode @ 0x7fa1128354a8>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7fa112848e88> ([<tools.ast.VariableNode object at 0x7fa ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then id opar arg_list . LexToken(cpar,')',92,2449)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7fa112848e88>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7fa112848e88> ([<tools.ast.VariableNode object at 0x7fa ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then id opar args . LexToken(cpar,')',92,2449)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then id opar args cpar . LexToken(else,'else',92,2451)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['i2a_aux','(',<list @ 0x7fa112848e88>,')'] and goto state 78
   yacc.py: 506:Result : <tuple @ 0x7fa112802c48> (('i2a_aux', [<tools.ast.VariableNode obj ...)
   yacc.py: 410:
   yacc.py: 411:State  : 78
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then func_call . LexToken(else,'else',92,2451)
   yacc.py: 471:Action : Reduce rule [factor -> func_call] with [<tuple @ 0x7fa112802c48>] and goto state 77
   yacc.py: 506:Result : <StaticCallNode @ 0x7fa112835748> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor . LexToken(else,'else',92,2451)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<StaticCallNode @ 0x7fa112835748>] and goto state 76
   yacc.py: 506:Result : <StaticCallNode @ 0x7fa112835748> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then base_call . LexToken(else,'else',92,2451)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<StaticCallNode @ 0x7fa112835748>] and goto state 75
   yacc.py: 506:Result : <StaticCallNode @ 0x7fa112835748> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then term . LexToken(else,'else',92,2451)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<StaticCallNode @ 0x7fa112835748>] and goto state 74
   yacc.py: 506:Result : <StaticCallNode @ 0x7fa112835748> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then op . LexToken(else,'else',92,2451)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<StaticCallNode @ 0x7fa112835748>] and goto state 73
   yacc.py: 506:Result : <StaticCallNode @ 0x7fa112835748> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then comp . LexToken(else,'else',92,2451)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<StaticCallNode @ 0x7fa112835748>] and goto state 203
   yacc.py: 506:Result : <StaticCallNode @ 0x7fa112835748> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 203
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr . LexToken(else,'else',92,2451)
   yacc.py: 445:Action : Shift and goto state 219
   yacc.py: 410:
   yacc.py: 411:State  : 219
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else . LexToken(string,'-',93,2468)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else string . LexToken(dot,'.',93,2469)
   yacc.py: 471:Action : Reduce rule [atom -> string] with ['-'] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112835780> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else atom . LexToken(dot,'.',93,2469)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7fa112835780>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7fa112835780> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor . LexToken(dot,'.',93,2469)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot . LexToken(id,'concat',93,2470)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id . LexToken(opar,'(',93,2476)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar . LexToken(id,'i2a_aux',93,2477)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar id . LexToken(opar,'(',93,2484)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar id opar . LexToken(id,'i',93,2485)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar id opar id . LexToken(star,'*',93,2487)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['i'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7fa112835860> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar id opar atom . LexToken(star,'*',93,2487)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7fa112835860>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7fa112835860> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar id opar factor . LexToken(star,'*',93,2487)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7fa112835860>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7fa112835860> (<tools.ast.VariableNode object at 0x7fa1 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76

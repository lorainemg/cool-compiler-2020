   yacc.py:3317:Created by PLY version 3.11 (http://www.dabeaz.com/ply)
   yacc.py:3377:
   yacc.py:3378:Grammar
   yacc.py:3379:
   yacc.py:3381:Rule 0     S' -> program
   yacc.py:3381:Rule 1     program -> class_list
   yacc.py:3381:Rule 2     epsilon -> <empty>
   yacc.py:3381:Rule 3     class_list -> def_class class_list
   yacc.py:3381:Rule 4     class_list -> def_class
   yacc.py:3381:Rule 5     class_list -> error class_list
   yacc.py:3381:Rule 6     def_class -> class type ocur feature_list ccur semi
   yacc.py:3381:Rule 7     def_class -> class type inherits type ocur feature_list ccur semi
   yacc.py:3381:Rule 8     def_class -> class error ocur feature_list ccur semi
   yacc.py:3381:Rule 9     def_class -> class type ocur feature_list ccur error
   yacc.py:3381:Rule 10    def_class -> class error inherits type ocur feature_list ccur semi
   yacc.py:3381:Rule 11    def_class -> class error inherits error ocur feature_list ccur semi
   yacc.py:3381:Rule 12    def_class -> class type inherits error ocur feature_list ccur semi
   yacc.py:3381:Rule 13    def_class -> class type inherits type ocur feature_list ccur error
   yacc.py:3381:Rule 14    feature_list -> epsilon
   yacc.py:3381:Rule 15    feature_list -> def_attr semi feature_list
   yacc.py:3381:Rule 16    feature_list -> def_func semi feature_list
   yacc.py:3381:Rule 17    feature_list -> error feature_list
   yacc.py:3381:Rule 18    def_attr -> id colon type
   yacc.py:3381:Rule 19    def_attr -> id colon type larrow expr
   yacc.py:3381:Rule 20    def_attr -> error colon type
   yacc.py:3381:Rule 21    def_attr -> id colon error
   yacc.py:3381:Rule 22    def_attr -> error colon type larrow expr
   yacc.py:3381:Rule 23    def_attr -> id colon error larrow expr
   yacc.py:3381:Rule 24    def_attr -> id colon type larrow error
   yacc.py:3381:Rule 25    def_func -> id opar formals cpar colon type ocur expr ccur
   yacc.py:3381:Rule 26    def_func -> error opar formals cpar colon type ocur expr ccur
   yacc.py:3381:Rule 27    def_func -> id opar error cpar colon type ocur expr ccur
   yacc.py:3381:Rule 28    def_func -> id opar formals cpar colon error ocur expr ccur
   yacc.py:3381:Rule 29    def_func -> id opar formals cpar colon type ocur error ccur
   yacc.py:3381:Rule 30    formals -> param_list
   yacc.py:3381:Rule 31    formals -> param_list_empty
   yacc.py:3381:Rule 32    param_list -> param
   yacc.py:3381:Rule 33    param_list -> param comma param_list
   yacc.py:3381:Rule 34    param_list_empty -> epsilon
   yacc.py:3381:Rule 35    param -> id colon type
   yacc.py:3381:Rule 36    let_list -> let_assign
   yacc.py:3381:Rule 37    let_list -> let_assign comma let_list
   yacc.py:3381:Rule 38    let_assign -> param larrow expr
   yacc.py:3381:Rule 39    let_assign -> param
   yacc.py:3381:Rule 40    cases_list -> casep semi
   yacc.py:3381:Rule 41    cases_list -> casep semi cases_list
   yacc.py:3381:Rule 42    cases_list -> error cases_list
   yacc.py:3381:Rule 43    cases_list -> error semi
   yacc.py:3381:Rule 44    casep -> id colon type rarrow expr
   yacc.py:3381:Rule 45    expr -> id larrow expr
   yacc.py:3381:Rule 46    expr -> comp
   yacc.py:3381:Rule 47    comp -> comp less op
   yacc.py:3381:Rule 48    comp -> comp lesseq op
   yacc.py:3381:Rule 49    comp -> comp equal op
   yacc.py:3381:Rule 50    comp -> op
   yacc.py:3381:Rule 51    op -> op plus term
   yacc.py:3381:Rule 52    op -> op minus term
   yacc.py:3381:Rule 53    op -> term
   yacc.py:3381:Rule 54    term -> term star base_call
   yacc.py:3381:Rule 55    term -> term div base_call
   yacc.py:3381:Rule 56    term -> base_call
   yacc.py:3381:Rule 57    term -> term star error
   yacc.py:3381:Rule 58    term -> term div error
   yacc.py:3381:Rule 59    base_call -> factor arroba type dot func_call
   yacc.py:3381:Rule 60    base_call -> factor
   yacc.py:3381:Rule 61    base_call -> error arroba type dot func_call
   yacc.py:3381:Rule 62    base_call -> factor arroba error dot func_call
   yacc.py:3381:Rule 63    factor -> atom
   yacc.py:3381:Rule 64    factor -> opar expr cpar
   yacc.py:3381:Rule 65    factor -> factor dot func_call
   yacc.py:3381:Rule 66    factor -> not expr
   yacc.py:3381:Rule 67    factor -> func_call
   yacc.py:3381:Rule 68    factor -> isvoid base_call
   yacc.py:3381:Rule 69    factor -> nox base_call
   yacc.py:3381:Rule 70    factor -> let let_list in expr
   yacc.py:3381:Rule 71    factor -> case expr of cases_list esac
   yacc.py:3381:Rule 72    factor -> if expr then expr else expr fi
   yacc.py:3381:Rule 73    factor -> while expr loop expr pool
   yacc.py:3381:Rule 74    atom -> num
   yacc.py:3381:Rule 75    atom -> id
   yacc.py:3381:Rule 76    atom -> new type
   yacc.py:3381:Rule 77    atom -> ocur block ccur
   yacc.py:3381:Rule 78    atom -> error block ccur
   yacc.py:3381:Rule 79    atom -> ocur error ccur
   yacc.py:3381:Rule 80    atom -> ocur block error
   yacc.py:3381:Rule 81    atom -> true
   yacc.py:3381:Rule 82    atom -> false
   yacc.py:3381:Rule 83    atom -> string
   yacc.py:3381:Rule 84    block -> expr semi
   yacc.py:3381:Rule 85    block -> expr semi block
   yacc.py:3381:Rule 86    block -> error block
   yacc.py:3381:Rule 87    block -> error semi
   yacc.py:3381:Rule 88    func_call -> id opar args cpar
   yacc.py:3381:Rule 89    func_call -> id opar error cpar
   yacc.py:3381:Rule 90    func_call -> error opar args cpar
   yacc.py:3381:Rule 91    args -> arg_list
   yacc.py:3381:Rule 92    args -> arg_list_empty
   yacc.py:3381:Rule 93    arg_list -> expr
   yacc.py:3381:Rule 94    arg_list -> expr comma arg_list
   yacc.py:3381:Rule 95    arg_list -> error arg_list
   yacc.py:3381:Rule 96    arg_list_empty -> epsilon
   yacc.py:3399:
   yacc.py:3400:Terminals, with rules where they appear
   yacc.py:3401:
   yacc.py:3405:arroba               : 59 61 62
   yacc.py:3405:case                 : 71
   yacc.py:3405:ccur                 : 6 7 8 9 10 11 12 13 25 26 27 28 29 77 78 79
   yacc.py:3405:class                : 6 7 8 9 10 11 12 13
   yacc.py:3405:colon                : 18 19 20 21 22 23 24 25 26 27 28 29 35 44
   yacc.py:3405:comma                : 33 37 94
   yacc.py:3405:cpar                 : 25 26 27 28 29 64 88 89 90
   yacc.py:3405:div                  : 55 58
   yacc.py:3405:dot                  : 59 61 62 65
   yacc.py:3405:else                 : 72
   yacc.py:3405:equal                : 49
   yacc.py:3405:error                : 5 8 9 10 11 11 12 13 17 20 21 22 23 24 26 27 28 29 42 43 57 58 61 62 78 79 80 86 87 89 90 95
   yacc.py:3405:esac                 : 71
   yacc.py:3405:false                : 82
   yacc.py:3405:fi                   : 72
   yacc.py:3405:id                   : 18 19 21 23 24 25 27 28 29 35 44 45 75 88 89
   yacc.py:3405:if                   : 72
   yacc.py:3405:in                   : 70
   yacc.py:3405:inherits             : 7 10 11 12 13
   yacc.py:3405:isvoid               : 68
   yacc.py:3405:larrow               : 19 22 23 24 38 45
   yacc.py:3405:less                 : 47
   yacc.py:3405:lesseq               : 48
   yacc.py:3405:let                  : 70
   yacc.py:3405:loop                 : 73
   yacc.py:3405:minus                : 52
   yacc.py:3405:new                  : 76
   yacc.py:3405:not                  : 66
   yacc.py:3405:nox                  : 69
   yacc.py:3405:num                  : 74
   yacc.py:3405:ocur                 : 6 7 8 9 10 11 12 13 25 26 27 28 29 77 79 80
   yacc.py:3405:of                   : 71
   yacc.py:3405:opar                 : 25 26 27 28 29 64 88 89 90
   yacc.py:3405:plus                 : 51
   yacc.py:3405:pool                 : 73
   yacc.py:3405:rarrow               : 44
   yacc.py:3405:semi                 : 6 7 8 10 11 12 15 16 40 41 43 84 85 87
   yacc.py:3405:star                 : 54 57
   yacc.py:3405:string               : 83
   yacc.py:3405:then                 : 72
   yacc.py:3405:true                 : 81
   yacc.py:3405:type                 : 6 7 7 9 10 12 13 13 18 19 20 22 24 25 26 27 29 35 44 59 61 76
   yacc.py:3405:while                : 73
   yacc.py:3407:
   yacc.py:3408:Nonterminals, with rules where they appear
   yacc.py:3409:
   yacc.py:3413:arg_list             : 91 94 95
   yacc.py:3413:arg_list_empty       : 92
   yacc.py:3413:args                 : 88 90
   yacc.py:3413:atom                 : 63
   yacc.py:3413:base_call            : 54 55 56 68 69
   yacc.py:3413:block                : 77 78 80 85 86
   yacc.py:3413:casep                : 40 41
   yacc.py:3413:cases_list           : 41 42 71
   yacc.py:3413:class_list           : 1 3 5
   yacc.py:3413:comp                 : 46 47 48 49
   yacc.py:3413:def_attr             : 15
   yacc.py:3413:def_class            : 3 4
   yacc.py:3413:def_func             : 16
   yacc.py:3413:epsilon              : 14 34 96
   yacc.py:3413:expr                 : 19 22 23 25 26 27 28 38 44 45 64 66 70 71 72 72 72 73 73 84 85 93 94
   yacc.py:3413:factor               : 59 60 62 65
   yacc.py:3413:feature_list         : 6 7 8 9 10 11 12 13 15 16 17
   yacc.py:3413:formals              : 25 26 28 29
   yacc.py:3413:func_call            : 59 61 62 65 67
   yacc.py:3413:let_assign           : 36 37
   yacc.py:3413:let_list             : 37 70
   yacc.py:3413:op                   : 47 48 49 50 51 52
   yacc.py:3413:param                : 32 33 38 39
   yacc.py:3413:param_list           : 30 33
   yacc.py:3413:param_list_empty     : 31
   yacc.py:3413:program              : 0
   yacc.py:3413:term                 : 51 52 53 54 55 57 58
   yacc.py:3414:
   yacc.py:3436:Generating LALR tables
   yacc.py:2543:Parsing method: LALR
   yacc.py:2561:
   yacc.py:2562:state 0
   yacc.py:2563:
   yacc.py:2565:    (0) S' -> . program
   yacc.py:2565:    (1) program -> . class_list
   yacc.py:2565:    (3) class_list -> . def_class class_list
   yacc.py:2565:    (4) class_list -> . def_class
   yacc.py:2565:    (5) class_list -> . error class_list
   yacc.py:2565:    (6) def_class -> . class type ocur feature_list ccur semi
   yacc.py:2565:    (7) def_class -> . class type inherits type ocur feature_list ccur semi
   yacc.py:2565:    (8) def_class -> . class error ocur feature_list ccur semi
   yacc.py:2565:    (9) def_class -> . class type ocur feature_list ccur error
   yacc.py:2565:    (10) def_class -> . class error inherits type ocur feature_list ccur semi
   yacc.py:2565:    (11) def_class -> . class error inherits error ocur feature_list ccur semi
   yacc.py:2565:    (12) def_class -> . class type inherits error ocur feature_list ccur semi
   yacc.py:2565:    (13) def_class -> . class type inherits type ocur feature_list ccur error
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 4
   yacc.py:2687:    class           shift and go to state 5
   yacc.py:2689:
   yacc.py:2714:    program                        shift and go to state 1
   yacc.py:2714:    class_list                     shift and go to state 2
   yacc.py:2714:    def_class                      shift and go to state 3
   yacc.py:2561:
   yacc.py:2562:state 1
   yacc.py:2563:
   yacc.py:2565:    (0) S' -> program .
   yacc.py:2566:
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 2
   yacc.py:2563:
   yacc.py:2565:    (1) program -> class_list .
   yacc.py:2566:
   yacc.py:2687:    $end            reduce using rule 1 (program -> class_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 3
   yacc.py:2563:
   yacc.py:2565:    (3) class_list -> def_class . class_list
   yacc.py:2565:    (4) class_list -> def_class .
   yacc.py:2565:    (3) class_list -> . def_class class_list
   yacc.py:2565:    (4) class_list -> . def_class
   yacc.py:2565:    (5) class_list -> . error class_list
   yacc.py:2565:    (6) def_class -> . class type ocur feature_list ccur semi
   yacc.py:2565:    (7) def_class -> . class type inherits type ocur feature_list ccur semi
   yacc.py:2565:    (8) def_class -> . class error ocur feature_list ccur semi
   yacc.py:2565:    (9) def_class -> . class type ocur feature_list ccur error
   yacc.py:2565:    (10) def_class -> . class error inherits type ocur feature_list ccur semi
   yacc.py:2565:    (11) def_class -> . class error inherits error ocur feature_list ccur semi
   yacc.py:2565:    (12) def_class -> . class type inherits error ocur feature_list ccur semi
   yacc.py:2565:    (13) def_class -> . class type inherits type ocur feature_list ccur error
   yacc.py:2566:
   yacc.py:2687:    $end            reduce using rule 4 (class_list -> def_class .)
   yacc.py:2687:    error           shift and go to state 4
   yacc.py:2687:    class           shift and go to state 5
   yacc.py:2689:
   yacc.py:2714:    def_class                      shift and go to state 3
   yacc.py:2714:    class_list                     shift and go to state 6
   yacc.py:2561:
   yacc.py:2562:state 4
   yacc.py:2563:
   yacc.py:2565:    (5) class_list -> error . class_list
   yacc.py:2565:    (3) class_list -> . def_class class_list
   yacc.py:2565:    (4) class_list -> . def_class
   yacc.py:2565:    (5) class_list -> . error class_list
   yacc.py:2565:    (6) def_class -> . class type ocur feature_list ccur semi
   yacc.py:2565:    (7) def_class -> . class type inherits type ocur feature_list ccur semi
   yacc.py:2565:    (8) def_class -> . class error ocur feature_list ccur semi
   yacc.py:2565:    (9) def_class -> . class type ocur feature_list ccur error
   yacc.py:2565:    (10) def_class -> . class error inherits type ocur feature_list ccur semi
   yacc.py:2565:    (11) def_class -> . class error inherits error ocur feature_list ccur semi
   yacc.py:2565:    (12) def_class -> . class type inherits error ocur feature_list ccur semi
   yacc.py:2565:    (13) def_class -> . class type inherits type ocur feature_list ccur error
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 4
   yacc.py:2687:    class           shift and go to state 5
   yacc.py:2689:
   yacc.py:2714:    class_list                     shift and go to state 7
   yacc.py:2714:    def_class                      shift and go to state 3
   yacc.py:2561:
   yacc.py:2562:state 5
   yacc.py:2563:
   yacc.py:2565:    (6) def_class -> class . type ocur feature_list ccur semi
   yacc.py:2565:    (7) def_class -> class . type inherits type ocur feature_list ccur semi
   yacc.py:2565:    (8) def_class -> class . error ocur feature_list ccur semi
   yacc.py:2565:    (9) def_class -> class . type ocur feature_list ccur error
   yacc.py:2565:    (10) def_class -> class . error inherits type ocur feature_list ccur semi
   yacc.py:2565:    (11) def_class -> class . error inherits error ocur feature_list ccur semi
   yacc.py:2565:    (12) def_class -> class . type inherits error ocur feature_list ccur semi
   yacc.py:2565:    (13) def_class -> class . type inherits type ocur feature_list ccur error
   yacc.py:2566:
   yacc.py:2687:    type            shift and go to state 8
   yacc.py:2687:    error           shift and go to state 9
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 6
   yacc.py:2563:
   yacc.py:2565:    (3) class_list -> def_class class_list .
   yacc.py:2566:
   yacc.py:2687:    $end            reduce using rule 3 (class_list -> def_class class_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 7
   yacc.py:2563:
   yacc.py:2565:    (5) class_list -> error class_list .
   yacc.py:2566:
   yacc.py:2687:    $end            reduce using rule 5 (class_list -> error class_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 8
   yacc.py:2563:
   yacc.py:2565:    (6) def_class -> class type . ocur feature_list ccur semi
   yacc.py:2565:    (7) def_class -> class type . inherits type ocur feature_list ccur semi
   yacc.py:2565:    (9) def_class -> class type . ocur feature_list ccur error
   yacc.py:2565:    (12) def_class -> class type . inherits error ocur feature_list ccur semi
   yacc.py:2565:    (13) def_class -> class type . inherits type ocur feature_list ccur error
   yacc.py:2566:
   yacc.py:2687:    ocur            shift and go to state 10
   yacc.py:2687:    inherits        shift and go to state 11
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 9
   yacc.py:2563:
   yacc.py:2565:    (8) def_class -> class error . ocur feature_list ccur semi
   yacc.py:2565:    (10) def_class -> class error . inherits type ocur feature_list ccur semi
   yacc.py:2565:    (11) def_class -> class error . inherits error ocur feature_list ccur semi
   yacc.py:2566:
   yacc.py:2687:    ocur            shift and go to state 12
   yacc.py:2687:    inherits        shift and go to state 13
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 10
   yacc.py:2563:
   yacc.py:2565:    (6) def_class -> class type ocur . feature_list ccur semi
   yacc.py:2565:    (9) def_class -> class type ocur . feature_list ccur error
   yacc.py:2565:    (14) feature_list -> . epsilon
   yacc.py:2565:    (15) feature_list -> . def_attr semi feature_list
   yacc.py:2565:    (16) feature_list -> . def_func semi feature_list
   yacc.py:2565:    (17) feature_list -> . error feature_list
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2565:    (18) def_attr -> . id colon type
   yacc.py:2565:    (19) def_attr -> . id colon type larrow expr
   yacc.py:2565:    (20) def_attr -> . error colon type
   yacc.py:2565:    (21) def_attr -> . id colon error
   yacc.py:2565:    (22) def_attr -> . error colon type larrow expr
   yacc.py:2565:    (23) def_attr -> . id colon error larrow expr
   yacc.py:2565:    (24) def_attr -> . id colon type larrow error
   yacc.py:2565:    (25) def_func -> . id opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (26) def_func -> . error opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (27) def_func -> . id opar error cpar colon type ocur expr ccur
   yacc.py:2565:    (28) def_func -> . id opar formals cpar colon error ocur expr ccur
   yacc.py:2565:    (29) def_func -> . id opar formals cpar colon type ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 15
   yacc.py:2687:    ccur            reduce using rule 2 (epsilon -> .)
   yacc.py:2687:    id              shift and go to state 19
   yacc.py:2689:
   yacc.py:2714:    feature_list                   shift and go to state 14
   yacc.py:2714:    epsilon                        shift and go to state 16
   yacc.py:2714:    def_attr                       shift and go to state 17
   yacc.py:2714:    def_func                       shift and go to state 18
   yacc.py:2561:
   yacc.py:2562:state 11
   yacc.py:2563:
   yacc.py:2565:    (7) def_class -> class type inherits . type ocur feature_list ccur semi
   yacc.py:2565:    (12) def_class -> class type inherits . error ocur feature_list ccur semi
   yacc.py:2565:    (13) def_class -> class type inherits . type ocur feature_list ccur error
   yacc.py:2566:
   yacc.py:2687:    type            shift and go to state 20
   yacc.py:2687:    error           shift and go to state 21
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 12
   yacc.py:2563:
   yacc.py:2565:    (8) def_class -> class error ocur . feature_list ccur semi
   yacc.py:2565:    (14) feature_list -> . epsilon
   yacc.py:2565:    (15) feature_list -> . def_attr semi feature_list
   yacc.py:2565:    (16) feature_list -> . def_func semi feature_list
   yacc.py:2565:    (17) feature_list -> . error feature_list
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2565:    (18) def_attr -> . id colon type
   yacc.py:2565:    (19) def_attr -> . id colon type larrow expr
   yacc.py:2565:    (20) def_attr -> . error colon type
   yacc.py:2565:    (21) def_attr -> . id colon error
   yacc.py:2565:    (22) def_attr -> . error colon type larrow expr
   yacc.py:2565:    (23) def_attr -> . id colon error larrow expr
   yacc.py:2565:    (24) def_attr -> . id colon type larrow error
   yacc.py:2565:    (25) def_func -> . id opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (26) def_func -> . error opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (27) def_func -> . id opar error cpar colon type ocur expr ccur
   yacc.py:2565:    (28) def_func -> . id opar formals cpar colon error ocur expr ccur
   yacc.py:2565:    (29) def_func -> . id opar formals cpar colon type ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 15
   yacc.py:2687:    ccur            reduce using rule 2 (epsilon -> .)
   yacc.py:2687:    id              shift and go to state 19
   yacc.py:2689:
   yacc.py:2714:    feature_list                   shift and go to state 22
   yacc.py:2714:    epsilon                        shift and go to state 16
   yacc.py:2714:    def_attr                       shift and go to state 17
   yacc.py:2714:    def_func                       shift and go to state 18
   yacc.py:2561:
   yacc.py:2562:state 13
   yacc.py:2563:
   yacc.py:2565:    (10) def_class -> class error inherits . type ocur feature_list ccur semi
   yacc.py:2565:    (11) def_class -> class error inherits . error ocur feature_list ccur semi
   yacc.py:2566:
   yacc.py:2687:    type            shift and go to state 24
   yacc.py:2687:    error           shift and go to state 23
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 14
   yacc.py:2563:
   yacc.py:2565:    (6) def_class -> class type ocur feature_list . ccur semi
   yacc.py:2565:    (9) def_class -> class type ocur feature_list . ccur error
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 25
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 15
   yacc.py:2563:
   yacc.py:2565:    (17) feature_list -> error . feature_list
   yacc.py:2565:    (20) def_attr -> error . colon type
   yacc.py:2565:    (22) def_attr -> error . colon type larrow expr
   yacc.py:2565:    (26) def_func -> error . opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (14) feature_list -> . epsilon
   yacc.py:2565:    (15) feature_list -> . def_attr semi feature_list
   yacc.py:2565:    (16) feature_list -> . def_func semi feature_list
   yacc.py:2565:    (17) feature_list -> . error feature_list
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2565:    (18) def_attr -> . id colon type
   yacc.py:2565:    (19) def_attr -> . id colon type larrow expr
   yacc.py:2565:    (20) def_attr -> . error colon type
   yacc.py:2565:    (21) def_attr -> . id colon error
   yacc.py:2565:    (22) def_attr -> . error colon type larrow expr
   yacc.py:2565:    (23) def_attr -> . id colon error larrow expr
   yacc.py:2565:    (24) def_attr -> . id colon type larrow error
   yacc.py:2565:    (25) def_func -> . id opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (26) def_func -> . error opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (27) def_func -> . id opar error cpar colon type ocur expr ccur
   yacc.py:2565:    (28) def_func -> . id opar formals cpar colon error ocur expr ccur
   yacc.py:2565:    (29) def_func -> . id opar formals cpar colon type ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    colon           shift and go to state 27
   yacc.py:2687:    opar            shift and go to state 28
   yacc.py:2687:    error           shift and go to state 15
   yacc.py:2687:    ccur            reduce using rule 2 (epsilon -> .)
   yacc.py:2687:    id              shift and go to state 19
   yacc.py:2689:
   yacc.py:2714:    feature_list                   shift and go to state 26
   yacc.py:2714:    epsilon                        shift and go to state 16
   yacc.py:2714:    def_attr                       shift and go to state 17
   yacc.py:2714:    def_func                       shift and go to state 18
   yacc.py:2561:
   yacc.py:2562:state 16
   yacc.py:2563:
   yacc.py:2565:    (14) feature_list -> epsilon .
   yacc.py:2566:
   yacc.py:2687:    ccur            reduce using rule 14 (feature_list -> epsilon .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 17
   yacc.py:2563:
   yacc.py:2565:    (15) feature_list -> def_attr . semi feature_list
   yacc.py:2566:
   yacc.py:2687:    semi            shift and go to state 29
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 18
   yacc.py:2563:
   yacc.py:2565:    (16) feature_list -> def_func . semi feature_list
   yacc.py:2566:
   yacc.py:2687:    semi            shift and go to state 30
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 19
   yacc.py:2563:
   yacc.py:2565:    (18) def_attr -> id . colon type
   yacc.py:2565:    (19) def_attr -> id . colon type larrow expr
   yacc.py:2565:    (21) def_attr -> id . colon error
   yacc.py:2565:    (23) def_attr -> id . colon error larrow expr
   yacc.py:2565:    (24) def_attr -> id . colon type larrow error
   yacc.py:2565:    (25) def_func -> id . opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (27) def_func -> id . opar error cpar colon type ocur expr ccur
   yacc.py:2565:    (28) def_func -> id . opar formals cpar colon error ocur expr ccur
   yacc.py:2565:    (29) def_func -> id . opar formals cpar colon type ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    colon           shift and go to state 31
   yacc.py:2687:    opar            shift and go to state 32
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 20
   yacc.py:2563:
   yacc.py:2565:    (7) def_class -> class type inherits type . ocur feature_list ccur semi
   yacc.py:2565:    (13) def_class -> class type inherits type . ocur feature_list ccur error
   yacc.py:2566:
   yacc.py:2687:    ocur            shift and go to state 33
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 21
   yacc.py:2563:
   yacc.py:2565:    (12) def_class -> class type inherits error . ocur feature_list ccur semi
   yacc.py:2566:
   yacc.py:2687:    ocur            shift and go to state 34
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 22
   yacc.py:2563:
   yacc.py:2565:    (8) def_class -> class error ocur feature_list . ccur semi
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 35
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 23
   yacc.py:2563:
   yacc.py:2565:    (11) def_class -> class error inherits error . ocur feature_list ccur semi
   yacc.py:2566:
   yacc.py:2687:    ocur            shift and go to state 36
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 24
   yacc.py:2563:
   yacc.py:2565:    (10) def_class -> class error inherits type . ocur feature_list ccur semi
   yacc.py:2566:
   yacc.py:2687:    ocur            shift and go to state 37
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 25
   yacc.py:2563:
   yacc.py:2565:    (6) def_class -> class type ocur feature_list ccur . semi
   yacc.py:2565:    (9) def_class -> class type ocur feature_list ccur . error
   yacc.py:2566:
   yacc.py:2687:    semi            shift and go to state 38
   yacc.py:2687:    error           shift and go to state 39
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 26
   yacc.py:2563:
   yacc.py:2565:    (17) feature_list -> error feature_list .
   yacc.py:2566:
   yacc.py:2687:    ccur            reduce using rule 17 (feature_list -> error feature_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 27
   yacc.py:2563:
   yacc.py:2565:    (20) def_attr -> error colon . type
   yacc.py:2565:    (22) def_attr -> error colon . type larrow expr
   yacc.py:2566:
   yacc.py:2687:    type            shift and go to state 40
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 28
   yacc.py:2563:
   yacc.py:2565:    (26) def_func -> error opar . formals cpar colon type ocur expr ccur
   yacc.py:2565:    (30) formals -> . param_list
   yacc.py:2565:    (31) formals -> . param_list_empty
   yacc.py:2565:    (32) param_list -> . param
   yacc.py:2565:    (33) param_list -> . param comma param_list
   yacc.py:2565:    (34) param_list_empty -> . epsilon
   yacc.py:2565:    (35) param -> . id colon type
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 46
   yacc.py:2687:    cpar            reduce using rule 2 (epsilon -> .)
   yacc.py:2689:
   yacc.py:2714:    formals                        shift and go to state 41
   yacc.py:2714:    param_list                     shift and go to state 42
   yacc.py:2714:    param_list_empty               shift and go to state 43
   yacc.py:2714:    param                          shift and go to state 44
   yacc.py:2714:    epsilon                        shift and go to state 45
   yacc.py:2561:
   yacc.py:2562:state 29
   yacc.py:2563:
   yacc.py:2565:    (15) feature_list -> def_attr semi . feature_list
   yacc.py:2565:    (14) feature_list -> . epsilon
   yacc.py:2565:    (15) feature_list -> . def_attr semi feature_list
   yacc.py:2565:    (16) feature_list -> . def_func semi feature_list
   yacc.py:2565:    (17) feature_list -> . error feature_list
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2565:    (18) def_attr -> . id colon type
   yacc.py:2565:    (19) def_attr -> . id colon type larrow expr
   yacc.py:2565:    (20) def_attr -> . error colon type
   yacc.py:2565:    (21) def_attr -> . id colon error
   yacc.py:2565:    (22) def_attr -> . error colon type larrow expr
   yacc.py:2565:    (23) def_attr -> . id colon error larrow expr
   yacc.py:2565:    (24) def_attr -> . id colon type larrow error
   yacc.py:2565:    (25) def_func -> . id opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (26) def_func -> . error opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (27) def_func -> . id opar error cpar colon type ocur expr ccur
   yacc.py:2565:    (28) def_func -> . id opar formals cpar colon error ocur expr ccur
   yacc.py:2565:    (29) def_func -> . id opar formals cpar colon type ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 15
   yacc.py:2687:    ccur            reduce using rule 2 (epsilon -> .)
   yacc.py:2687:    id              shift and go to state 19
   yacc.py:2689:
   yacc.py:2714:    def_attr                       shift and go to state 17
   yacc.py:2714:    feature_list                   shift and go to state 47
   yacc.py:2714:    epsilon                        shift and go to state 16
   yacc.py:2714:    def_func                       shift and go to state 18
   yacc.py:2561:
   yacc.py:2562:state 30
   yacc.py:2563:
   yacc.py:2565:    (16) feature_list -> def_func semi . feature_list
   yacc.py:2565:    (14) feature_list -> . epsilon
   yacc.py:2565:    (15) feature_list -> . def_attr semi feature_list
   yacc.py:2565:    (16) feature_list -> . def_func semi feature_list
   yacc.py:2565:    (17) feature_list -> . error feature_list
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2565:    (18) def_attr -> . id colon type
   yacc.py:2565:    (19) def_attr -> . id colon type larrow expr
   yacc.py:2565:    (20) def_attr -> . error colon type
   yacc.py:2565:    (21) def_attr -> . id colon error
   yacc.py:2565:    (22) def_attr -> . error colon type larrow expr
   yacc.py:2565:    (23) def_attr -> . id colon error larrow expr
   yacc.py:2565:    (24) def_attr -> . id colon type larrow error
   yacc.py:2565:    (25) def_func -> . id opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (26) def_func -> . error opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (27) def_func -> . id opar error cpar colon type ocur expr ccur
   yacc.py:2565:    (28) def_func -> . id opar formals cpar colon error ocur expr ccur
   yacc.py:2565:    (29) def_func -> . id opar formals cpar colon type ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 15
   yacc.py:2687:    ccur            reduce using rule 2 (epsilon -> .)
   yacc.py:2687:    id              shift and go to state 19
   yacc.py:2689:
   yacc.py:2714:    def_func                       shift and go to state 18
   yacc.py:2714:    feature_list                   shift and go to state 48
   yacc.py:2714:    epsilon                        shift and go to state 16
   yacc.py:2714:    def_attr                       shift and go to state 17
   yacc.py:2561:
   yacc.py:2562:state 31
   yacc.py:2563:
   yacc.py:2565:    (18) def_attr -> id colon . type
   yacc.py:2565:    (19) def_attr -> id colon . type larrow expr
   yacc.py:2565:    (21) def_attr -> id colon . error
   yacc.py:2565:    (23) def_attr -> id colon . error larrow expr
   yacc.py:2565:    (24) def_attr -> id colon . type larrow error
   yacc.py:2566:
   yacc.py:2687:    type            shift and go to state 49
   yacc.py:2687:    error           shift and go to state 50
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 32
   yacc.py:2563:
   yacc.py:2565:    (25) def_func -> id opar . formals cpar colon type ocur expr ccur
   yacc.py:2565:    (27) def_func -> id opar . error cpar colon type ocur expr ccur
   yacc.py:2565:    (28) def_func -> id opar . formals cpar colon error ocur expr ccur
   yacc.py:2565:    (29) def_func -> id opar . formals cpar colon type ocur error ccur
   yacc.py:2565:    (30) formals -> . param_list
   yacc.py:2565:    (31) formals -> . param_list_empty
   yacc.py:2565:    (32) param_list -> . param
   yacc.py:2565:    (33) param_list -> . param comma param_list
   yacc.py:2565:    (34) param_list_empty -> . epsilon
   yacc.py:2565:    (35) param -> . id colon type
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 52
   yacc.py:2687:    id              shift and go to state 46
   yacc.py:2687:    cpar            reduce using rule 2 (epsilon -> .)
   yacc.py:2689:
   yacc.py:2714:    formals                        shift and go to state 51
   yacc.py:2714:    param_list                     shift and go to state 42
   yacc.py:2714:    param_list_empty               shift and go to state 43
   yacc.py:2714:    param                          shift and go to state 44
   yacc.py:2714:    epsilon                        shift and go to state 45
   yacc.py:2561:
   yacc.py:2562:state 33
   yacc.py:2563:
   yacc.py:2565:    (7) def_class -> class type inherits type ocur . feature_list ccur semi
   yacc.py:2565:    (13) def_class -> class type inherits type ocur . feature_list ccur error
   yacc.py:2565:    (14) feature_list -> . epsilon
   yacc.py:2565:    (15) feature_list -> . def_attr semi feature_list
   yacc.py:2565:    (16) feature_list -> . def_func semi feature_list
   yacc.py:2565:    (17) feature_list -> . error feature_list
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2565:    (18) def_attr -> . id colon type
   yacc.py:2565:    (19) def_attr -> . id colon type larrow expr
   yacc.py:2565:    (20) def_attr -> . error colon type
   yacc.py:2565:    (21) def_attr -> . id colon error
   yacc.py:2565:    (22) def_attr -> . error colon type larrow expr
   yacc.py:2565:    (23) def_attr -> . id colon error larrow expr
   yacc.py:2565:    (24) def_attr -> . id colon type larrow error
   yacc.py:2565:    (25) def_func -> . id opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (26) def_func -> . error opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (27) def_func -> . id opar error cpar colon type ocur expr ccur
   yacc.py:2565:    (28) def_func -> . id opar formals cpar colon error ocur expr ccur
   yacc.py:2565:    (29) def_func -> . id opar formals cpar colon type ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 15
   yacc.py:2687:    ccur            reduce using rule 2 (epsilon -> .)
   yacc.py:2687:    id              shift and go to state 19
   yacc.py:2689:
   yacc.py:2714:    feature_list                   shift and go to state 53
   yacc.py:2714:    epsilon                        shift and go to state 16
   yacc.py:2714:    def_attr                       shift and go to state 17
   yacc.py:2714:    def_func                       shift and go to state 18
   yacc.py:2561:
   yacc.py:2562:state 34
   yacc.py:2563:
   yacc.py:2565:    (12) def_class -> class type inherits error ocur . feature_list ccur semi
   yacc.py:2565:    (14) feature_list -> . epsilon
   yacc.py:2565:    (15) feature_list -> . def_attr semi feature_list
   yacc.py:2565:    (16) feature_list -> . def_func semi feature_list
   yacc.py:2565:    (17) feature_list -> . error feature_list
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2565:    (18) def_attr -> . id colon type
   yacc.py:2565:    (19) def_attr -> . id colon type larrow expr
   yacc.py:2565:    (20) def_attr -> . error colon type
   yacc.py:2565:    (21) def_attr -> . id colon error
   yacc.py:2565:    (22) def_attr -> . error colon type larrow expr
   yacc.py:2565:    (23) def_attr -> . id colon error larrow expr
   yacc.py:2565:    (24) def_attr -> . id colon type larrow error
   yacc.py:2565:    (25) def_func -> . id opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (26) def_func -> . error opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (27) def_func -> . id opar error cpar colon type ocur expr ccur
   yacc.py:2565:    (28) def_func -> . id opar formals cpar colon error ocur expr ccur
   yacc.py:2565:    (29) def_func -> . id opar formals cpar colon type ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 15
   yacc.py:2687:    ccur            reduce using rule 2 (epsilon -> .)
   yacc.py:2687:    id              shift and go to state 19
   yacc.py:2689:
   yacc.py:2714:    feature_list                   shift and go to state 54
   yacc.py:2714:    epsilon                        shift and go to state 16
   yacc.py:2714:    def_attr                       shift and go to state 17
   yacc.py:2714:    def_func                       shift and go to state 18
   yacc.py:2561:
   yacc.py:2562:state 35
   yacc.py:2563:
   yacc.py:2565:    (8) def_class -> class error ocur feature_list ccur . semi
   yacc.py:2566:
   yacc.py:2687:    semi            shift and go to state 55
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 36
   yacc.py:2563:
   yacc.py:2565:    (11) def_class -> class error inherits error ocur . feature_list ccur semi
   yacc.py:2565:    (14) feature_list -> . epsilon
   yacc.py:2565:    (15) feature_list -> . def_attr semi feature_list
   yacc.py:2565:    (16) feature_list -> . def_func semi feature_list
   yacc.py:2565:    (17) feature_list -> . error feature_list
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2565:    (18) def_attr -> . id colon type
   yacc.py:2565:    (19) def_attr -> . id colon type larrow expr
   yacc.py:2565:    (20) def_attr -> . error colon type
   yacc.py:2565:    (21) def_attr -> . id colon error
   yacc.py:2565:    (22) def_attr -> . error colon type larrow expr
   yacc.py:2565:    (23) def_attr -> . id colon error larrow expr
   yacc.py:2565:    (24) def_attr -> . id colon type larrow error
   yacc.py:2565:    (25) def_func -> . id opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (26) def_func -> . error opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (27) def_func -> . id opar error cpar colon type ocur expr ccur
   yacc.py:2565:    (28) def_func -> . id opar formals cpar colon error ocur expr ccur
   yacc.py:2565:    (29) def_func -> . id opar formals cpar colon type ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 15
   yacc.py:2687:    ccur            reduce using rule 2 (epsilon -> .)
   yacc.py:2687:    id              shift and go to state 19
   yacc.py:2689:
   yacc.py:2714:    feature_list                   shift and go to state 56
   yacc.py:2714:    epsilon                        shift and go to state 16
   yacc.py:2714:    def_attr                       shift and go to state 17
   yacc.py:2714:    def_func                       shift and go to state 18
   yacc.py:2561:
   yacc.py:2562:state 37
   yacc.py:2563:
   yacc.py:2565:    (10) def_class -> class error inherits type ocur . feature_list ccur semi
   yacc.py:2565:    (14) feature_list -> . epsilon
   yacc.py:2565:    (15) feature_list -> . def_attr semi feature_list
   yacc.py:2565:    (16) feature_list -> . def_func semi feature_list
   yacc.py:2565:    (17) feature_list -> . error feature_list
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2565:    (18) def_attr -> . id colon type
   yacc.py:2565:    (19) def_attr -> . id colon type larrow expr
   yacc.py:2565:    (20) def_attr -> . error colon type
   yacc.py:2565:    (21) def_attr -> . id colon error
   yacc.py:2565:    (22) def_attr -> . error colon type larrow expr
   yacc.py:2565:    (23) def_attr -> . id colon error larrow expr
   yacc.py:2565:    (24) def_attr -> . id colon type larrow error
   yacc.py:2565:    (25) def_func -> . id opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (26) def_func -> . error opar formals cpar colon type ocur expr ccur
   yacc.py:2565:    (27) def_func -> . id opar error cpar colon type ocur expr ccur
   yacc.py:2565:    (28) def_func -> . id opar formals cpar colon error ocur expr ccur
   yacc.py:2565:    (29) def_func -> . id opar formals cpar colon type ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 15
   yacc.py:2687:    ccur            reduce using rule 2 (epsilon -> .)
   yacc.py:2687:    id              shift and go to state 19
   yacc.py:2689:
   yacc.py:2714:    feature_list                   shift and go to state 57
   yacc.py:2714:    epsilon                        shift and go to state 16
   yacc.py:2714:    def_attr                       shift and go to state 17
   yacc.py:2714:    def_func                       shift and go to state 18
   yacc.py:2561:
   yacc.py:2562:state 38
   yacc.py:2563:
   yacc.py:2565:    (6) def_class -> class type ocur feature_list ccur semi .
   yacc.py:2566:
   yacc.py:2687:    error           reduce using rule 6 (def_class -> class type ocur feature_list ccur semi .)
   yacc.py:2687:    class           reduce using rule 6 (def_class -> class type ocur feature_list ccur semi .)
   yacc.py:2687:    $end            reduce using rule 6 (def_class -> class type ocur feature_list ccur semi .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 39
   yacc.py:2563:
   yacc.py:2565:    (9) def_class -> class type ocur feature_list ccur error .
   yacc.py:2566:
   yacc.py:2687:    error           reduce using rule 9 (def_class -> class type ocur feature_list ccur error .)
   yacc.py:2687:    class           reduce using rule 9 (def_class -> class type ocur feature_list ccur error .)
   yacc.py:2687:    $end            reduce using rule 9 (def_class -> class type ocur feature_list ccur error .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 40
   yacc.py:2563:
   yacc.py:2565:    (20) def_attr -> error colon type .
   yacc.py:2565:    (22) def_attr -> error colon type . larrow expr
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 20 (def_attr -> error colon type .)
   yacc.py:2687:    larrow          shift and go to state 58
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 41
   yacc.py:2563:
   yacc.py:2565:    (26) def_func -> error opar formals . cpar colon type ocur expr ccur
   yacc.py:2566:
   yacc.py:2687:    cpar            shift and go to state 59
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 42
   yacc.py:2563:
   yacc.py:2565:    (30) formals -> param_list .
   yacc.py:2566:
   yacc.py:2687:    cpar            reduce using rule 30 (formals -> param_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 43
   yacc.py:2563:
   yacc.py:2565:    (31) formals -> param_list_empty .
   yacc.py:2566:
   yacc.py:2687:    cpar            reduce using rule 31 (formals -> param_list_empty .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 44
   yacc.py:2563:
   yacc.py:2565:    (32) param_list -> param .
   yacc.py:2565:    (33) param_list -> param . comma param_list
   yacc.py:2566:
   yacc.py:2687:    cpar            reduce using rule 32 (param_list -> param .)
   yacc.py:2687:    comma           shift and go to state 60
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 45
   yacc.py:2563:
   yacc.py:2565:    (34) param_list_empty -> epsilon .
   yacc.py:2566:
   yacc.py:2687:    cpar            reduce using rule 34 (param_list_empty -> epsilon .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 46
   yacc.py:2563:
   yacc.py:2565:    (35) param -> id . colon type
   yacc.py:2566:
   yacc.py:2687:    colon           shift and go to state 61
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 47
   yacc.py:2563:
   yacc.py:2565:    (15) feature_list -> def_attr semi feature_list .
   yacc.py:2566:
   yacc.py:2687:    ccur            reduce using rule 15 (feature_list -> def_attr semi feature_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 48
   yacc.py:2563:
   yacc.py:2565:    (16) feature_list -> def_func semi feature_list .
   yacc.py:2566:
   yacc.py:2687:    ccur            reduce using rule 16 (feature_list -> def_func semi feature_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 49
   yacc.py:2563:
   yacc.py:2565:    (18) def_attr -> id colon type .
   yacc.py:2565:    (19) def_attr -> id colon type . larrow expr
   yacc.py:2565:    (24) def_attr -> id colon type . larrow error
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 18 (def_attr -> id colon type .)
   yacc.py:2687:    larrow          shift and go to state 62
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 50
   yacc.py:2563:
   yacc.py:2565:    (21) def_attr -> id colon error .
   yacc.py:2565:    (23) def_attr -> id colon error . larrow expr
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 21 (def_attr -> id colon error .)
   yacc.py:2687:    larrow          shift and go to state 63
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 51
   yacc.py:2563:
   yacc.py:2565:    (25) def_func -> id opar formals . cpar colon type ocur expr ccur
   yacc.py:2565:    (28) def_func -> id opar formals . cpar colon error ocur expr ccur
   yacc.py:2565:    (29) def_func -> id opar formals . cpar colon type ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    cpar            shift and go to state 64
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 52
   yacc.py:2563:
   yacc.py:2565:    (27) def_func -> id opar error . cpar colon type ocur expr ccur
   yacc.py:2566:
   yacc.py:2687:    cpar            shift and go to state 65
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 53
   yacc.py:2563:
   yacc.py:2565:    (7) def_class -> class type inherits type ocur feature_list . ccur semi
   yacc.py:2565:    (13) def_class -> class type inherits type ocur feature_list . ccur error
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 66
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 54
   yacc.py:2563:
   yacc.py:2565:    (12) def_class -> class type inherits error ocur feature_list . ccur semi
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 67
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 55
   yacc.py:2563:
   yacc.py:2565:    (8) def_class -> class error ocur feature_list ccur semi .
   yacc.py:2566:
   yacc.py:2687:    error           reduce using rule 8 (def_class -> class error ocur feature_list ccur semi .)
   yacc.py:2687:    class           reduce using rule 8 (def_class -> class error ocur feature_list ccur semi .)
   yacc.py:2687:    $end            reduce using rule 8 (def_class -> class error ocur feature_list ccur semi .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 56
   yacc.py:2563:
   yacc.py:2565:    (11) def_class -> class error inherits error ocur feature_list . ccur semi
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 68
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 57
   yacc.py:2563:
   yacc.py:2565:    (10) def_class -> class error inherits type ocur feature_list . ccur semi
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 69
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 58
   yacc.py:2563:
   yacc.py:2565:    (22) def_attr -> error colon type larrow . expr
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 71
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 59
   yacc.py:2563:
   yacc.py:2565:    (26) def_func -> error opar formals cpar . colon type ocur expr ccur
   yacc.py:2566:
   yacc.py:2687:    colon           shift and go to state 94
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 60
   yacc.py:2563:
   yacc.py:2565:    (33) param_list -> param comma . param_list
   yacc.py:2565:    (32) param_list -> . param
   yacc.py:2565:    (33) param_list -> . param comma param_list
   yacc.py:2565:    (35) param -> . id colon type
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 46
   yacc.py:2689:
   yacc.py:2714:    param                          shift and go to state 44
   yacc.py:2714:    param_list                     shift and go to state 95
   yacc.py:2561:
   yacc.py:2562:state 61
   yacc.py:2563:
   yacc.py:2565:    (35) param -> id colon . type
   yacc.py:2566:
   yacc.py:2687:    type            shift and go to state 96
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 62
   yacc.py:2563:
   yacc.py:2565:    (19) def_attr -> id colon type larrow . expr
   yacc.py:2565:    (24) def_attr -> id colon type larrow . error
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 98
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 97
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 63
   yacc.py:2563:
   yacc.py:2565:    (23) def_attr -> id colon error larrow . expr
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 99
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 64
   yacc.py:2563:
   yacc.py:2565:    (25) def_func -> id opar formals cpar . colon type ocur expr ccur
   yacc.py:2565:    (28) def_func -> id opar formals cpar . colon error ocur expr ccur
   yacc.py:2565:    (29) def_func -> id opar formals cpar . colon type ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    colon           shift and go to state 100
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 65
   yacc.py:2563:
   yacc.py:2565:    (27) def_func -> id opar error cpar . colon type ocur expr ccur
   yacc.py:2566:
   yacc.py:2687:    colon           shift and go to state 101
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 66
   yacc.py:2563:
   yacc.py:2565:    (7) def_class -> class type inherits type ocur feature_list ccur . semi
   yacc.py:2565:    (13) def_class -> class type inherits type ocur feature_list ccur . error
   yacc.py:2566:
   yacc.py:2687:    semi            shift and go to state 102
   yacc.py:2687:    error           shift and go to state 103
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 67
   yacc.py:2563:
   yacc.py:2565:    (12) def_class -> class type inherits error ocur feature_list ccur . semi
   yacc.py:2566:
   yacc.py:2687:    semi            shift and go to state 104
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 68
   yacc.py:2563:
   yacc.py:2565:    (11) def_class -> class error inherits error ocur feature_list ccur . semi
   yacc.py:2566:
   yacc.py:2687:    semi            shift and go to state 105
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 69
   yacc.py:2563:
   yacc.py:2565:    (10) def_class -> class error inherits type ocur feature_list ccur . semi
   yacc.py:2566:
   yacc.py:2687:    semi            shift and go to state 106
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 70
   yacc.py:2563:
   yacc.py:2565:    (61) base_call -> error . arroba type dot func_call
   yacc.py:2565:    (78) atom -> error . block ccur
   yacc.py:2565:    (90) func_call -> error . opar args cpar
   yacc.py:2565:    (84) block -> . expr semi
   yacc.py:2565:    (85) block -> . expr semi block
   yacc.py:2565:    (86) block -> . error block
   yacc.py:2565:    (87) block -> . error semi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    arroba          shift and go to state 108
   yacc.py:2687:    opar            shift and go to state 110
   yacc.py:2687:    error           shift and go to state 107
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    block                          shift and go to state 109
   yacc.py:2714:    expr                           shift and go to state 111
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 71
   yacc.py:2563:
   yacc.py:2565:    (22) def_attr -> error colon type larrow expr .
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 22 (def_attr -> error colon type larrow expr .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 72
   yacc.py:2563:
   yacc.py:2565:    (45) expr -> id . larrow expr
   yacc.py:2565:    (75) atom -> id .
   yacc.py:2565:    (88) func_call -> id . opar args cpar
   yacc.py:2565:    (89) func_call -> id . opar error cpar
   yacc.py:2566:
   yacc.py:2687:    larrow          shift and go to state 112
   yacc.py:2687:    arroba          reduce using rule 75 (atom -> id .)
   yacc.py:2687:    dot             reduce using rule 75 (atom -> id .)
   yacc.py:2687:    star            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    div             reduce using rule 75 (atom -> id .)
   yacc.py:2687:    plus            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    minus           reduce using rule 75 (atom -> id .)
   yacc.py:2687:    less            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    lesseq          reduce using rule 75 (atom -> id .)
   yacc.py:2687:    equal           reduce using rule 75 (atom -> id .)
   yacc.py:2687:    semi            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    cpar            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    of              reduce using rule 75 (atom -> id .)
   yacc.py:2687:    then            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    loop            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    comma           reduce using rule 75 (atom -> id .)
   yacc.py:2687:    in              reduce using rule 75 (atom -> id .)
   yacc.py:2687:    else            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    pool            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    ccur            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    fi              reduce using rule 75 (atom -> id .)
   yacc.py:2687:    opar            shift and go to state 113
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 73
   yacc.py:2563:
   yacc.py:2565:    (46) expr -> comp .
   yacc.py:2565:    (47) comp -> comp . less op
   yacc.py:2565:    (48) comp -> comp . lesseq op
   yacc.py:2565:    (49) comp -> comp . equal op
   yacc.py:2566:
   yacc.py:2666:  ! shift/reduce conflict for less resolved as shift
   yacc.py:2666:  ! shift/reduce conflict for lesseq resolved as shift
   yacc.py:2666:  ! shift/reduce conflict for equal resolved as shift
   yacc.py:2687:    semi            reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    cpar            reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    arroba          reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    dot             reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    star            reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    div             reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    plus            reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    minus           reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    of              reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    then            reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    loop            reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    comma           reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    in              reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    else            reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    pool            reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    ccur            reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    fi              reduce using rule 46 (expr -> comp .)
   yacc.py:2687:    less            shift and go to state 114
   yacc.py:2687:    lesseq          shift and go to state 115
   yacc.py:2687:    equal           shift and go to state 116
   yacc.py:2689:
   yacc.py:2696:  ! less            [ reduce using rule 46 (expr -> comp .) ]
   yacc.py:2696:  ! lesseq          [ reduce using rule 46 (expr -> comp .) ]
   yacc.py:2696:  ! equal           [ reduce using rule 46 (expr -> comp .) ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 74
   yacc.py:2563:
   yacc.py:2565:    (50) comp -> op .
   yacc.py:2565:    (51) op -> op . plus term
   yacc.py:2565:    (52) op -> op . minus term
   yacc.py:2566:
   yacc.py:2666:  ! shift/reduce conflict for plus resolved as shift
   yacc.py:2666:  ! shift/reduce conflict for minus resolved as shift
   yacc.py:2687:    less            reduce using rule 50 (comp -> op .)
   yacc.py:2687:    lesseq          reduce using rule 50 (comp -> op .)
   yacc.py:2687:    equal           reduce using rule 50 (comp -> op .)
   yacc.py:2687:    semi            reduce using rule 50 (comp -> op .)
   yacc.py:2687:    cpar            reduce using rule 50 (comp -> op .)
   yacc.py:2687:    arroba          reduce using rule 50 (comp -> op .)
   yacc.py:2687:    dot             reduce using rule 50 (comp -> op .)
   yacc.py:2687:    star            reduce using rule 50 (comp -> op .)
   yacc.py:2687:    div             reduce using rule 50 (comp -> op .)
   yacc.py:2687:    of              reduce using rule 50 (comp -> op .)
   yacc.py:2687:    then            reduce using rule 50 (comp -> op .)
   yacc.py:2687:    loop            reduce using rule 50 (comp -> op .)
   yacc.py:2687:    comma           reduce using rule 50 (comp -> op .)
   yacc.py:2687:    in              reduce using rule 50 (comp -> op .)
   yacc.py:2687:    else            reduce using rule 50 (comp -> op .)
   yacc.py:2687:    pool            reduce using rule 50 (comp -> op .)
   yacc.py:2687:    ccur            reduce using rule 50 (comp -> op .)
   yacc.py:2687:    fi              reduce using rule 50 (comp -> op .)
   yacc.py:2687:    plus            shift and go to state 117
   yacc.py:2687:    minus           shift and go to state 118
   yacc.py:2689:
   yacc.py:2696:  ! plus            [ reduce using rule 50 (comp -> op .) ]
   yacc.py:2696:  ! minus           [ reduce using rule 50 (comp -> op .) ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 75
   yacc.py:2563:
   yacc.py:2565:    (53) op -> term .
   yacc.py:2565:    (54) term -> term . star base_call
   yacc.py:2565:    (55) term -> term . div base_call
   yacc.py:2565:    (57) term -> term . star error
   yacc.py:2565:    (58) term -> term . div error
   yacc.py:2566:
   yacc.py:2666:  ! shift/reduce conflict for star resolved as shift
   yacc.py:2666:  ! shift/reduce conflict for div resolved as shift
   yacc.py:2687:    plus            reduce using rule 53 (op -> term .)
   yacc.py:2687:    minus           reduce using rule 53 (op -> term .)
   yacc.py:2687:    less            reduce using rule 53 (op -> term .)
   yacc.py:2687:    lesseq          reduce using rule 53 (op -> term .)
   yacc.py:2687:    equal           reduce using rule 53 (op -> term .)
   yacc.py:2687:    semi            reduce using rule 53 (op -> term .)
   yacc.py:2687:    cpar            reduce using rule 53 (op -> term .)
   yacc.py:2687:    arroba          reduce using rule 53 (op -> term .)
   yacc.py:2687:    dot             reduce using rule 53 (op -> term .)
   yacc.py:2687:    of              reduce using rule 53 (op -> term .)
   yacc.py:2687:    then            reduce using rule 53 (op -> term .)
   yacc.py:2687:    loop            reduce using rule 53 (op -> term .)
   yacc.py:2687:    comma           reduce using rule 53 (op -> term .)
   yacc.py:2687:    in              reduce using rule 53 (op -> term .)
   yacc.py:2687:    else            reduce using rule 53 (op -> term .)
   yacc.py:2687:    pool            reduce using rule 53 (op -> term .)
   yacc.py:2687:    ccur            reduce using rule 53 (op -> term .)
   yacc.py:2687:    fi              reduce using rule 53 (op -> term .)
   yacc.py:2687:    star            shift and go to state 119
   yacc.py:2687:    div             shift and go to state 120
   yacc.py:2689:
   yacc.py:2696:  ! star            [ reduce using rule 53 (op -> term .) ]
   yacc.py:2696:  ! div             [ reduce using rule 53 (op -> term .) ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 76
   yacc.py:2563:
   yacc.py:2565:    (56) term -> base_call .
   yacc.py:2566:
   yacc.py:2687:    star            reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    div             reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    plus            reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    minus           reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    less            reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    lesseq          reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    equal           reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    semi            reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    cpar            reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    arroba          reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    dot             reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    of              reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    then            reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    loop            reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    comma           reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    in              reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    else            reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    pool            reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    ccur            reduce using rule 56 (term -> base_call .)
   yacc.py:2687:    fi              reduce using rule 56 (term -> base_call .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 77
   yacc.py:2563:
   yacc.py:2565:    (59) base_call -> factor . arroba type dot func_call
   yacc.py:2565:    (60) base_call -> factor .
   yacc.py:2565:    (62) base_call -> factor . arroba error dot func_call
   yacc.py:2565:    (65) factor -> factor . dot func_call
   yacc.py:2566:
   yacc.py:2609:  ! shift/reduce conflict for arroba resolved as shift
   yacc.py:2666:  ! shift/reduce conflict for dot resolved as shift
   yacc.py:2687:    arroba          shift and go to state 121
   yacc.py:2687:    star            reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    div             reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    plus            reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    minus           reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    less            reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    lesseq          reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    equal           reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    semi            reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    cpar            reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    of              reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    then            reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    loop            reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    comma           reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    in              reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    else            reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    pool            reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    ccur            reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    fi              reduce using rule 60 (base_call -> factor .)
   yacc.py:2687:    dot             shift and go to state 122
   yacc.py:2689:
   yacc.py:2696:  ! arroba          [ reduce using rule 60 (base_call -> factor .) ]
   yacc.py:2696:  ! dot             [ reduce using rule 60 (base_call -> factor .) ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 78
   yacc.py:2563:
   yacc.py:2565:    (67) factor -> func_call .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    dot             reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    star            reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    div             reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    plus            reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    minus           reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    less            reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    lesseq          reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    equal           reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    semi            reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    cpar            reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    of              reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    then            reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    loop            reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    comma           reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    in              reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    else            reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    pool            reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    ccur            reduce using rule 67 (factor -> func_call .)
   yacc.py:2687:    fi              reduce using rule 67 (factor -> func_call .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 79
   yacc.py:2563:
   yacc.py:2565:    (63) factor -> atom .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    dot             reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    star            reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    div             reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    plus            reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    minus           reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    less            reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    lesseq          reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    equal           reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    semi            reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    cpar            reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    of              reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    then            reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    loop            reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    comma           reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    in              reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    else            reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    pool            reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    ccur            reduce using rule 63 (factor -> atom .)
   yacc.py:2687:    fi              reduce using rule 63 (factor -> atom .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 80
   yacc.py:2563:
   yacc.py:2565:    (64) factor -> opar . expr cpar
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 123
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 81
   yacc.py:2563:
   yacc.py:2565:    (66) factor -> not . expr
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 124
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 82
   yacc.py:2563:
   yacc.py:2565:    (68) factor -> isvoid . base_call
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    id              shift and go to state 126
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    base_call                      shift and go to state 125
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 83
   yacc.py:2563:
   yacc.py:2565:    (69) factor -> nox . base_call
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    id              shift and go to state 126
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    base_call                      shift and go to state 127
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 84
   yacc.py:2563:
   yacc.py:2565:    (70) factor -> let . let_list in expr
   yacc.py:2565:    (36) let_list -> . let_assign
   yacc.py:2565:    (37) let_list -> . let_assign comma let_list
   yacc.py:2565:    (38) let_assign -> . param larrow expr
   yacc.py:2565:    (39) let_assign -> . param
   yacc.py:2565:    (35) param -> . id colon type
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 46
   yacc.py:2689:
   yacc.py:2714:    let_list                       shift and go to state 128
   yacc.py:2714:    let_assign                     shift and go to state 129
   yacc.py:2714:    param                          shift and go to state 130
   yacc.py:2561:
   yacc.py:2562:state 85
   yacc.py:2563:
   yacc.py:2565:    (71) factor -> case . expr of cases_list esac
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 131
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 86
   yacc.py:2563:
   yacc.py:2565:    (72) factor -> if . expr then expr else expr fi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 132
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 87
   yacc.py:2563:
   yacc.py:2565:    (73) factor -> while . expr loop expr pool
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 133
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 88
   yacc.py:2563:
   yacc.py:2565:    (74) atom -> num .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 74 (atom -> num .)
   yacc.py:2687:    dot             reduce using rule 74 (atom -> num .)
   yacc.py:2687:    star            reduce using rule 74 (atom -> num .)
   yacc.py:2687:    div             reduce using rule 74 (atom -> num .)
   yacc.py:2687:    plus            reduce using rule 74 (atom -> num .)
   yacc.py:2687:    minus           reduce using rule 74 (atom -> num .)
   yacc.py:2687:    less            reduce using rule 74 (atom -> num .)
   yacc.py:2687:    lesseq          reduce using rule 74 (atom -> num .)
   yacc.py:2687:    equal           reduce using rule 74 (atom -> num .)
   yacc.py:2687:    semi            reduce using rule 74 (atom -> num .)
   yacc.py:2687:    cpar            reduce using rule 74 (atom -> num .)
   yacc.py:2687:    of              reduce using rule 74 (atom -> num .)
   yacc.py:2687:    then            reduce using rule 74 (atom -> num .)
   yacc.py:2687:    loop            reduce using rule 74 (atom -> num .)
   yacc.py:2687:    comma           reduce using rule 74 (atom -> num .)
   yacc.py:2687:    in              reduce using rule 74 (atom -> num .)
   yacc.py:2687:    else            reduce using rule 74 (atom -> num .)
   yacc.py:2687:    pool            reduce using rule 74 (atom -> num .)
   yacc.py:2687:    ccur            reduce using rule 74 (atom -> num .)
   yacc.py:2687:    fi              reduce using rule 74 (atom -> num .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 89
   yacc.py:2563:
   yacc.py:2565:    (76) atom -> new . type
   yacc.py:2566:
   yacc.py:2687:    type            shift and go to state 134
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 90
   yacc.py:2563:
   yacc.py:2565:    (77) atom -> ocur . block ccur
   yacc.py:2565:    (79) atom -> ocur . error ccur
   yacc.py:2565:    (80) atom -> ocur . block error
   yacc.py:2565:    (84) block -> . expr semi
   yacc.py:2565:    (85) block -> . expr semi block
   yacc.py:2565:    (86) block -> . error block
   yacc.py:2565:    (87) block -> . error semi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 136
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    block                          shift and go to state 135
   yacc.py:2714:    expr                           shift and go to state 111
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 91
   yacc.py:2563:
   yacc.py:2565:    (81) atom -> true .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 81 (atom -> true .)
   yacc.py:2687:    dot             reduce using rule 81 (atom -> true .)
   yacc.py:2687:    star            reduce using rule 81 (atom -> true .)
   yacc.py:2687:    div             reduce using rule 81 (atom -> true .)
   yacc.py:2687:    plus            reduce using rule 81 (atom -> true .)
   yacc.py:2687:    minus           reduce using rule 81 (atom -> true .)
   yacc.py:2687:    less            reduce using rule 81 (atom -> true .)
   yacc.py:2687:    lesseq          reduce using rule 81 (atom -> true .)
   yacc.py:2687:    equal           reduce using rule 81 (atom -> true .)
   yacc.py:2687:    semi            reduce using rule 81 (atom -> true .)
   yacc.py:2687:    cpar            reduce using rule 81 (atom -> true .)
   yacc.py:2687:    of              reduce using rule 81 (atom -> true .)
   yacc.py:2687:    then            reduce using rule 81 (atom -> true .)
   yacc.py:2687:    loop            reduce using rule 81 (atom -> true .)
   yacc.py:2687:    comma           reduce using rule 81 (atom -> true .)
   yacc.py:2687:    in              reduce using rule 81 (atom -> true .)
   yacc.py:2687:    else            reduce using rule 81 (atom -> true .)
   yacc.py:2687:    pool            reduce using rule 81 (atom -> true .)
   yacc.py:2687:    ccur            reduce using rule 81 (atom -> true .)
   yacc.py:2687:    fi              reduce using rule 81 (atom -> true .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 92
   yacc.py:2563:
   yacc.py:2565:    (82) atom -> false .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 82 (atom -> false .)
   yacc.py:2687:    dot             reduce using rule 82 (atom -> false .)
   yacc.py:2687:    star            reduce using rule 82 (atom -> false .)
   yacc.py:2687:    div             reduce using rule 82 (atom -> false .)
   yacc.py:2687:    plus            reduce using rule 82 (atom -> false .)
   yacc.py:2687:    minus           reduce using rule 82 (atom -> false .)
   yacc.py:2687:    less            reduce using rule 82 (atom -> false .)
   yacc.py:2687:    lesseq          reduce using rule 82 (atom -> false .)
   yacc.py:2687:    equal           reduce using rule 82 (atom -> false .)
   yacc.py:2687:    semi            reduce using rule 82 (atom -> false .)
   yacc.py:2687:    cpar            reduce using rule 82 (atom -> false .)
   yacc.py:2687:    of              reduce using rule 82 (atom -> false .)
   yacc.py:2687:    then            reduce using rule 82 (atom -> false .)
   yacc.py:2687:    loop            reduce using rule 82 (atom -> false .)
   yacc.py:2687:    comma           reduce using rule 82 (atom -> false .)
   yacc.py:2687:    in              reduce using rule 82 (atom -> false .)
   yacc.py:2687:    else            reduce using rule 82 (atom -> false .)
   yacc.py:2687:    pool            reduce using rule 82 (atom -> false .)
   yacc.py:2687:    ccur            reduce using rule 82 (atom -> false .)
   yacc.py:2687:    fi              reduce using rule 82 (atom -> false .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 93
   yacc.py:2563:
   yacc.py:2565:    (83) atom -> string .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 83 (atom -> string .)
   yacc.py:2687:    dot             reduce using rule 83 (atom -> string .)
   yacc.py:2687:    star            reduce using rule 83 (atom -> string .)
   yacc.py:2687:    div             reduce using rule 83 (atom -> string .)
   yacc.py:2687:    plus            reduce using rule 83 (atom -> string .)
   yacc.py:2687:    minus           reduce using rule 83 (atom -> string .)
   yacc.py:2687:    less            reduce using rule 83 (atom -> string .)
   yacc.py:2687:    lesseq          reduce using rule 83 (atom -> string .)
   yacc.py:2687:    equal           reduce using rule 83 (atom -> string .)
   yacc.py:2687:    semi            reduce using rule 83 (atom -> string .)
   yacc.py:2687:    cpar            reduce using rule 83 (atom -> string .)
   yacc.py:2687:    of              reduce using rule 83 (atom -> string .)
   yacc.py:2687:    then            reduce using rule 83 (atom -> string .)
   yacc.py:2687:    loop            reduce using rule 83 (atom -> string .)
   yacc.py:2687:    comma           reduce using rule 83 (atom -> string .)
   yacc.py:2687:    in              reduce using rule 83 (atom -> string .)
   yacc.py:2687:    else            reduce using rule 83 (atom -> string .)
   yacc.py:2687:    pool            reduce using rule 83 (atom -> string .)
   yacc.py:2687:    ccur            reduce using rule 83 (atom -> string .)
   yacc.py:2687:    fi              reduce using rule 83 (atom -> string .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 94
   yacc.py:2563:
   yacc.py:2565:    (26) def_func -> error opar formals cpar colon . type ocur expr ccur
   yacc.py:2566:
   yacc.py:2687:    type            shift and go to state 137
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 95
   yacc.py:2563:
   yacc.py:2565:    (33) param_list -> param comma param_list .
   yacc.py:2566:
   yacc.py:2687:    cpar            reduce using rule 33 (param_list -> param comma param_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 96
   yacc.py:2563:
   yacc.py:2565:    (35) param -> id colon type .
   yacc.py:2566:
   yacc.py:2687:    comma           reduce using rule 35 (param -> id colon type .)
   yacc.py:2687:    cpar            reduce using rule 35 (param -> id colon type .)
   yacc.py:2687:    larrow          reduce using rule 35 (param -> id colon type .)
   yacc.py:2687:    in              reduce using rule 35 (param -> id colon type .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 97
   yacc.py:2563:
   yacc.py:2565:    (19) def_attr -> id colon type larrow expr .
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 19 (def_attr -> id colon type larrow expr .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 98
   yacc.py:2563:
   yacc.py:2565:    (24) def_attr -> id colon type larrow error .
   yacc.py:2565:    (61) base_call -> error . arroba type dot func_call
   yacc.py:2565:    (78) atom -> error . block ccur
   yacc.py:2565:    (90) func_call -> error . opar args cpar
   yacc.py:2565:    (84) block -> . expr semi
   yacc.py:2565:    (85) block -> . expr semi block
   yacc.py:2565:    (86) block -> . error block
   yacc.py:2565:    (87) block -> . error semi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 24 (def_attr -> id colon type larrow error .)
   yacc.py:2687:    arroba          shift and go to state 108
   yacc.py:2687:    opar            shift and go to state 110
   yacc.py:2687:    error           shift and go to state 107
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    block                          shift and go to state 109
   yacc.py:2714:    expr                           shift and go to state 111
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 99
   yacc.py:2563:
   yacc.py:2565:    (23) def_attr -> id colon error larrow expr .
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 23 (def_attr -> id colon error larrow expr .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 100
   yacc.py:2563:
   yacc.py:2565:    (25) def_func -> id opar formals cpar colon . type ocur expr ccur
   yacc.py:2565:    (28) def_func -> id opar formals cpar colon . error ocur expr ccur
   yacc.py:2565:    (29) def_func -> id opar formals cpar colon . type ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    type            shift and go to state 138
   yacc.py:2687:    error           shift and go to state 139
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 101
   yacc.py:2563:
   yacc.py:2565:    (27) def_func -> id opar error cpar colon . type ocur expr ccur
   yacc.py:2566:
   yacc.py:2687:    type            shift and go to state 140
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 102
   yacc.py:2563:
   yacc.py:2565:    (7) def_class -> class type inherits type ocur feature_list ccur semi .
   yacc.py:2566:
   yacc.py:2687:    error           reduce using rule 7 (def_class -> class type inherits type ocur feature_list ccur semi .)
   yacc.py:2687:    class           reduce using rule 7 (def_class -> class type inherits type ocur feature_list ccur semi .)
   yacc.py:2687:    $end            reduce using rule 7 (def_class -> class type inherits type ocur feature_list ccur semi .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 103
   yacc.py:2563:
   yacc.py:2565:    (13) def_class -> class type inherits type ocur feature_list ccur error .
   yacc.py:2566:
   yacc.py:2687:    error           reduce using rule 13 (def_class -> class type inherits type ocur feature_list ccur error .)
   yacc.py:2687:    class           reduce using rule 13 (def_class -> class type inherits type ocur feature_list ccur error .)
   yacc.py:2687:    $end            reduce using rule 13 (def_class -> class type inherits type ocur feature_list ccur error .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 104
   yacc.py:2563:
   yacc.py:2565:    (12) def_class -> class type inherits error ocur feature_list ccur semi .
   yacc.py:2566:
   yacc.py:2687:    error           reduce using rule 12 (def_class -> class type inherits error ocur feature_list ccur semi .)
   yacc.py:2687:    class           reduce using rule 12 (def_class -> class type inherits error ocur feature_list ccur semi .)
   yacc.py:2687:    $end            reduce using rule 12 (def_class -> class type inherits error ocur feature_list ccur semi .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 105
   yacc.py:2563:
   yacc.py:2565:    (11) def_class -> class error inherits error ocur feature_list ccur semi .
   yacc.py:2566:
   yacc.py:2687:    error           reduce using rule 11 (def_class -> class error inherits error ocur feature_list ccur semi .)
   yacc.py:2687:    class           reduce using rule 11 (def_class -> class error inherits error ocur feature_list ccur semi .)
   yacc.py:2687:    $end            reduce using rule 11 (def_class -> class error inherits error ocur feature_list ccur semi .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 106
   yacc.py:2563:
   yacc.py:2565:    (10) def_class -> class error inherits type ocur feature_list ccur semi .
   yacc.py:2566:
   yacc.py:2687:    error           reduce using rule 10 (def_class -> class error inherits type ocur feature_list ccur semi .)
   yacc.py:2687:    class           reduce using rule 10 (def_class -> class error inherits type ocur feature_list ccur semi .)
   yacc.py:2687:    $end            reduce using rule 10 (def_class -> class error inherits type ocur feature_list ccur semi .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 107
   yacc.py:2563:
   yacc.py:2565:    (86) block -> error . block
   yacc.py:2565:    (87) block -> error . semi
   yacc.py:2565:    (61) base_call -> error . arroba type dot func_call
   yacc.py:2565:    (78) atom -> error . block ccur
   yacc.py:2565:    (90) func_call -> error . opar args cpar
   yacc.py:2565:    (84) block -> . expr semi
   yacc.py:2565:    (85) block -> . expr semi block
   yacc.py:2565:    (86) block -> . error block
   yacc.py:2565:    (87) block -> . error semi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    semi            shift and go to state 142
   yacc.py:2687:    arroba          shift and go to state 108
   yacc.py:2687:    opar            shift and go to state 110
   yacc.py:2687:    error           shift and go to state 107
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    block                          shift and go to state 141
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    expr                           shift and go to state 111
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 108
   yacc.py:2563:
   yacc.py:2565:    (61) base_call -> error arroba . type dot func_call
   yacc.py:2566:
   yacc.py:2687:    type            shift and go to state 143
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 109
   yacc.py:2563:
   yacc.py:2565:    (78) atom -> error block . ccur
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 144
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 110
   yacc.py:2563:
   yacc.py:2565:    (90) func_call -> error opar . args cpar
   yacc.py:2565:    (64) factor -> opar . expr cpar
   yacc.py:2565:    (91) args -> . arg_list
   yacc.py:2565:    (92) args -> . arg_list_empty
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (93) arg_list -> . expr
   yacc.py:2565:    (94) arg_list -> . expr comma arg_list
   yacc.py:2565:    (95) arg_list -> . error arg_list
   yacc.py:2565:    (96) arg_list_empty -> . epsilon
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 145
   yacc.py:2687:    cpar            reduce using rule 2 (epsilon -> .)
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    args                           shift and go to state 146
   yacc.py:2714:    expr                           shift and go to state 147
   yacc.py:2714:    arg_list                       shift and go to state 148
   yacc.py:2714:    arg_list_empty                 shift and go to state 149
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    epsilon                        shift and go to state 150
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 111
   yacc.py:2563:
   yacc.py:2565:    (84) block -> expr . semi
   yacc.py:2565:    (85) block -> expr . semi block
   yacc.py:2566:
   yacc.py:2687:    semi            shift and go to state 151
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 112
   yacc.py:2563:
   yacc.py:2565:    (45) expr -> id larrow . expr
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 152
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 113
   yacc.py:2563:
   yacc.py:2565:    (88) func_call -> id opar . args cpar
   yacc.py:2565:    (89) func_call -> id opar . error cpar
   yacc.py:2565:    (91) args -> . arg_list
   yacc.py:2565:    (92) args -> . arg_list_empty
   yacc.py:2565:    (93) arg_list -> . expr
   yacc.py:2565:    (94) arg_list -> . expr comma arg_list
   yacc.py:2565:    (95) arg_list -> . error arg_list
   yacc.py:2565:    (96) arg_list_empty -> . epsilon
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 154
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    cpar            reduce using rule 2 (epsilon -> .)
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    args                           shift and go to state 153
   yacc.py:2714:    arg_list                       shift and go to state 148
   yacc.py:2714:    arg_list_empty                 shift and go to state 149
   yacc.py:2714:    expr                           shift and go to state 155
   yacc.py:2714:    epsilon                        shift and go to state 150
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 114
   yacc.py:2563:
   yacc.py:2565:    (47) comp -> comp less . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    id              shift and go to state 126
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    op                             shift and go to state 156
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 115
   yacc.py:2563:
   yacc.py:2565:    (48) comp -> comp lesseq . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    id              shift and go to state 126
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    op                             shift and go to state 157
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 116
   yacc.py:2563:
   yacc.py:2565:    (49) comp -> comp equal . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    id              shift and go to state 126
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    op                             shift and go to state 158
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 117
   yacc.py:2563:
   yacc.py:2565:    (51) op -> op plus . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    id              shift and go to state 126
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    term                           shift and go to state 159
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 118
   yacc.py:2563:
   yacc.py:2565:    (52) op -> op minus . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    id              shift and go to state 126
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    term                           shift and go to state 160
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 119
   yacc.py:2563:
   yacc.py:2565:    (54) term -> term star . base_call
   yacc.py:2565:    (57) term -> term star . error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 162
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    id              shift and go to state 126
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    base_call                      shift and go to state 161
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 120
   yacc.py:2563:
   yacc.py:2565:    (55) term -> term div . base_call
   yacc.py:2565:    (58) term -> term div . error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 164
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    id              shift and go to state 126
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    base_call                      shift and go to state 163
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 121
   yacc.py:2563:
   yacc.py:2565:    (59) base_call -> factor arroba . type dot func_call
   yacc.py:2565:    (62) base_call -> factor arroba . error dot func_call
   yacc.py:2566:
   yacc.py:2687:    type            shift and go to state 165
   yacc.py:2687:    error           shift and go to state 166
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 122
   yacc.py:2563:
   yacc.py:2565:    (65) factor -> factor dot . func_call
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 168
   yacc.py:2687:    error           shift and go to state 169
   yacc.py:2689:
   yacc.py:2714:    func_call                      shift and go to state 167
   yacc.py:2561:
   yacc.py:2562:state 123
   yacc.py:2563:
   yacc.py:2565:    (64) factor -> opar expr . cpar
   yacc.py:2566:
   yacc.py:2687:    cpar            shift and go to state 170
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 124
   yacc.py:2563:
   yacc.py:2565:    (66) factor -> not expr .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    dot             reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    star            reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    div             reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    plus            reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    minus           reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    less            reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    lesseq          reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    equal           reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    semi            reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    cpar            reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    of              reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    then            reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    loop            reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    comma           reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    in              reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    else            reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    pool            reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    ccur            reduce using rule 66 (factor -> not expr .)
   yacc.py:2687:    fi              reduce using rule 66 (factor -> not expr .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 125
   yacc.py:2563:
   yacc.py:2565:    (68) factor -> isvoid base_call .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    dot             reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    star            reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    div             reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    plus            reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    minus           reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    less            reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    lesseq          reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    equal           reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    semi            reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    cpar            reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    of              reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    then            reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    loop            reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    comma           reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    in              reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    else            reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    pool            reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    ccur            reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2687:    fi              reduce using rule 68 (factor -> isvoid base_call .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 126
   yacc.py:2563:
   yacc.py:2565:    (75) atom -> id .
   yacc.py:2565:    (88) func_call -> id . opar args cpar
   yacc.py:2565:    (89) func_call -> id . opar error cpar
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 75 (atom -> id .)
   yacc.py:2687:    dot             reduce using rule 75 (atom -> id .)
   yacc.py:2687:    star            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    div             reduce using rule 75 (atom -> id .)
   yacc.py:2687:    plus            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    minus           reduce using rule 75 (atom -> id .)
   yacc.py:2687:    less            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    lesseq          reduce using rule 75 (atom -> id .)
   yacc.py:2687:    equal           reduce using rule 75 (atom -> id .)
   yacc.py:2687:    semi            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    cpar            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    of              reduce using rule 75 (atom -> id .)
   yacc.py:2687:    then            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    loop            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    comma           reduce using rule 75 (atom -> id .)
   yacc.py:2687:    in              reduce using rule 75 (atom -> id .)
   yacc.py:2687:    else            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    pool            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    ccur            reduce using rule 75 (atom -> id .)
   yacc.py:2687:    fi              reduce using rule 75 (atom -> id .)
   yacc.py:2687:    opar            shift and go to state 113
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 127
   yacc.py:2563:
   yacc.py:2565:    (69) factor -> nox base_call .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    dot             reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    star            reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    div             reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    plus            reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    minus           reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    less            reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    lesseq          reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    equal           reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    semi            reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    cpar            reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    of              reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    then            reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    loop            reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    comma           reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    in              reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    else            reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    pool            reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    ccur            reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2687:    fi              reduce using rule 69 (factor -> nox base_call .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 128
   yacc.py:2563:
   yacc.py:2565:    (70) factor -> let let_list . in expr
   yacc.py:2566:
   yacc.py:2687:    in              shift and go to state 171
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 129
   yacc.py:2563:
   yacc.py:2565:    (36) let_list -> let_assign .
   yacc.py:2565:    (37) let_list -> let_assign . comma let_list
   yacc.py:2566:
   yacc.py:2687:    in              reduce using rule 36 (let_list -> let_assign .)
   yacc.py:2687:    comma           shift and go to state 172
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 130
   yacc.py:2563:
   yacc.py:2565:    (38) let_assign -> param . larrow expr
   yacc.py:2565:    (39) let_assign -> param .
   yacc.py:2566:
   yacc.py:2687:    larrow          shift and go to state 173
   yacc.py:2687:    comma           reduce using rule 39 (let_assign -> param .)
   yacc.py:2687:    in              reduce using rule 39 (let_assign -> param .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 131
   yacc.py:2563:
   yacc.py:2565:    (71) factor -> case expr . of cases_list esac
   yacc.py:2566:
   yacc.py:2687:    of              shift and go to state 174
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 132
   yacc.py:2563:
   yacc.py:2565:    (72) factor -> if expr . then expr else expr fi
   yacc.py:2566:
   yacc.py:2687:    then            shift and go to state 175
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 133
   yacc.py:2563:
   yacc.py:2565:    (73) factor -> while expr . loop expr pool
   yacc.py:2566:
   yacc.py:2687:    loop            shift and go to state 176
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 134
   yacc.py:2563:
   yacc.py:2565:    (76) atom -> new type .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    dot             reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    star            reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    div             reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    plus            reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    minus           reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    less            reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    lesseq          reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    equal           reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    semi            reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    cpar            reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    of              reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    then            reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    loop            reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    comma           reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    in              reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    else            reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    pool            reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    ccur            reduce using rule 76 (atom -> new type .)
   yacc.py:2687:    fi              reduce using rule 76 (atom -> new type .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 135
   yacc.py:2563:
   yacc.py:2565:    (77) atom -> ocur block . ccur
   yacc.py:2565:    (80) atom -> ocur block . error
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 177
   yacc.py:2687:    error           shift and go to state 178
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 136
   yacc.py:2563:
   yacc.py:2565:    (79) atom -> ocur error . ccur
   yacc.py:2565:    (86) block -> error . block
   yacc.py:2565:    (87) block -> error . semi
   yacc.py:2565:    (61) base_call -> error . arroba type dot func_call
   yacc.py:2565:    (78) atom -> error . block ccur
   yacc.py:2565:    (90) func_call -> error . opar args cpar
   yacc.py:2565:    (84) block -> . expr semi
   yacc.py:2565:    (85) block -> . expr semi block
   yacc.py:2565:    (86) block -> . error block
   yacc.py:2565:    (87) block -> . error semi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 179
   yacc.py:2687:    semi            shift and go to state 142
   yacc.py:2687:    arroba          shift and go to state 108
   yacc.py:2687:    opar            shift and go to state 110
   yacc.py:2687:    error           shift and go to state 107
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    block                          shift and go to state 141
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    expr                           shift and go to state 111
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 137
   yacc.py:2563:
   yacc.py:2565:    (26) def_func -> error opar formals cpar colon type . ocur expr ccur
   yacc.py:2566:
   yacc.py:2687:    ocur            shift and go to state 180
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 138
   yacc.py:2563:
   yacc.py:2565:    (25) def_func -> id opar formals cpar colon type . ocur expr ccur
   yacc.py:2565:    (29) def_func -> id opar formals cpar colon type . ocur error ccur
   yacc.py:2566:
   yacc.py:2687:    ocur            shift and go to state 181
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 139
   yacc.py:2563:
   yacc.py:2565:    (28) def_func -> id opar formals cpar colon error . ocur expr ccur
   yacc.py:2566:
   yacc.py:2687:    ocur            shift and go to state 182
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 140
   yacc.py:2563:
   yacc.py:2565:    (27) def_func -> id opar error cpar colon type . ocur expr ccur
   yacc.py:2566:
   yacc.py:2687:    ocur            shift and go to state 183
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 141
   yacc.py:2563:
   yacc.py:2565:    (86) block -> error block .
   yacc.py:2565:    (78) atom -> error block . ccur
   yacc.py:2566:
   yacc.py:2666:  ! shift/reduce conflict for ccur resolved as shift
   yacc.py:2687:    error           reduce using rule 86 (block -> error block .)
   yacc.py:2687:    ccur            shift and go to state 144
   yacc.py:2689:
   yacc.py:2696:  ! ccur            [ reduce using rule 86 (block -> error block .) ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 142
   yacc.py:2563:
   yacc.py:2565:    (87) block -> error semi .
   yacc.py:2566:
   yacc.py:2687:    ccur            reduce using rule 87 (block -> error semi .)
   yacc.py:2687:    error           reduce using rule 87 (block -> error semi .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 143
   yacc.py:2563:
   yacc.py:2565:    (61) base_call -> error arroba type . dot func_call
   yacc.py:2566:
   yacc.py:2687:    dot             shift and go to state 184
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 144
   yacc.py:2563:
   yacc.py:2565:    (78) atom -> error block ccur .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    dot             reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    star            reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    div             reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    plus            reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    minus           reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    less            reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    lesseq          reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    equal           reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    semi            reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    cpar            reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    of              reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    then            reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    loop            reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    comma           reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    in              reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    else            reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    pool            reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    ccur            reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2687:    fi              reduce using rule 78 (atom -> error block ccur .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 145
   yacc.py:2563:
   yacc.py:2565:    (95) arg_list -> error . arg_list
   yacc.py:2565:    (61) base_call -> error . arroba type dot func_call
   yacc.py:2565:    (78) atom -> error . block ccur
   yacc.py:2565:    (90) func_call -> error . opar args cpar
   yacc.py:2565:    (93) arg_list -> . expr
   yacc.py:2565:    (94) arg_list -> . expr comma arg_list
   yacc.py:2565:    (95) arg_list -> . error arg_list
   yacc.py:2565:    (84) block -> . expr semi
   yacc.py:2565:    (85) block -> . expr semi block
   yacc.py:2565:    (86) block -> . error block
   yacc.py:2565:    (87) block -> . error semi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    arroba          shift and go to state 108
   yacc.py:2687:    opar            shift and go to state 110
   yacc.py:2687:    error           shift and go to state 185
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    arg_list                       shift and go to state 186
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    block                          shift and go to state 109
   yacc.py:2714:    expr                           shift and go to state 187
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 146
   yacc.py:2563:
   yacc.py:2565:    (90) func_call -> error opar args . cpar
   yacc.py:2566:
   yacc.py:2687:    cpar            shift and go to state 188
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 147
   yacc.py:2563:
   yacc.py:2565:    (64) factor -> opar expr . cpar
   yacc.py:2565:    (93) arg_list -> expr .
   yacc.py:2565:    (94) arg_list -> expr . comma arg_list
   yacc.py:2566:
   yacc.py:2609:  ! shift/reduce conflict for cpar resolved as shift
   yacc.py:2687:    cpar            shift and go to state 170
   yacc.py:2687:    comma           shift and go to state 189
   yacc.py:2689:
   yacc.py:2696:  ! cpar            [ reduce using rule 93 (arg_list -> expr .) ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 148
   yacc.py:2563:
   yacc.py:2565:    (91) args -> arg_list .
   yacc.py:2566:
   yacc.py:2687:    cpar            reduce using rule 91 (args -> arg_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 149
   yacc.py:2563:
   yacc.py:2565:    (92) args -> arg_list_empty .
   yacc.py:2566:
   yacc.py:2687:    cpar            reduce using rule 92 (args -> arg_list_empty .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 150
   yacc.py:2563:
   yacc.py:2565:    (96) arg_list_empty -> epsilon .
   yacc.py:2566:
   yacc.py:2687:    cpar            reduce using rule 96 (arg_list_empty -> epsilon .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 151
   yacc.py:2563:
   yacc.py:2565:    (84) block -> expr semi .
   yacc.py:2565:    (85) block -> expr semi . block
   yacc.py:2565:    (84) block -> . expr semi
   yacc.py:2565:    (85) block -> . expr semi block
   yacc.py:2565:    (86) block -> . error block
   yacc.py:2565:    (87) block -> . error semi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2666:  ! shift/reduce conflict for error resolved as shift
   yacc.py:2687:    ccur            reduce using rule 84 (block -> expr semi .)
   yacc.py:2687:    error           shift and go to state 107
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2696:  ! error           [ reduce using rule 84 (block -> expr semi .) ]
   yacc.py:2700:
   yacc.py:2714:    expr                           shift and go to state 111
   yacc.py:2714:    block                          shift and go to state 190
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 152
   yacc.py:2563:
   yacc.py:2565:    (45) expr -> id larrow expr .
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    cpar            reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    arroba          reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    dot             reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    star            reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    div             reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    plus            reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    minus           reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    less            reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    lesseq          reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    equal           reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    of              reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    then            reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    loop            reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    comma           reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    in              reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    else            reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    pool            reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    ccur            reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2687:    fi              reduce using rule 45 (expr -> id larrow expr .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 153
   yacc.py:2563:
   yacc.py:2565:    (88) func_call -> id opar args . cpar
   yacc.py:2566:
   yacc.py:2687:    cpar            shift and go to state 191
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 154
   yacc.py:2563:
   yacc.py:2565:    (89) func_call -> id opar error . cpar
   yacc.py:2565:    (95) arg_list -> error . arg_list
   yacc.py:2565:    (61) base_call -> error . arroba type dot func_call
   yacc.py:2565:    (78) atom -> error . block ccur
   yacc.py:2565:    (90) func_call -> error . opar args cpar
   yacc.py:2565:    (93) arg_list -> . expr
   yacc.py:2565:    (94) arg_list -> . expr comma arg_list
   yacc.py:2565:    (95) arg_list -> . error arg_list
   yacc.py:2565:    (84) block -> . expr semi
   yacc.py:2565:    (85) block -> . expr semi block
   yacc.py:2565:    (86) block -> . error block
   yacc.py:2565:    (87) block -> . error semi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    cpar            shift and go to state 192
   yacc.py:2687:    arroba          shift and go to state 108
   yacc.py:2687:    opar            shift and go to state 110
   yacc.py:2687:    error           shift and go to state 185
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    arg_list                       shift and go to state 186
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    block                          shift and go to state 109
   yacc.py:2714:    expr                           shift and go to state 187
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 155
   yacc.py:2563:
   yacc.py:2565:    (93) arg_list -> expr .
   yacc.py:2565:    (94) arg_list -> expr . comma arg_list
   yacc.py:2566:
   yacc.py:2687:    cpar            reduce using rule 93 (arg_list -> expr .)
   yacc.py:2687:    comma           shift and go to state 189
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 156
   yacc.py:2563:
   yacc.py:2565:    (47) comp -> comp less op .
   yacc.py:2565:    (51) op -> op . plus term
   yacc.py:2565:    (52) op -> op . minus term
   yacc.py:2566:
   yacc.py:2666:  ! shift/reduce conflict for plus resolved as shift
   yacc.py:2666:  ! shift/reduce conflict for minus resolved as shift
   yacc.py:2687:    less            reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    lesseq          reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    equal           reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    semi            reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    cpar            reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    arroba          reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    dot             reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    star            reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    div             reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    of              reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    then            reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    loop            reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    comma           reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    in              reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    else            reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    pool            reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    ccur            reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    fi              reduce using rule 47 (comp -> comp less op .)
   yacc.py:2687:    plus            shift and go to state 117
   yacc.py:2687:    minus           shift and go to state 118
   yacc.py:2689:
   yacc.py:2696:  ! plus            [ reduce using rule 47 (comp -> comp less op .) ]
   yacc.py:2696:  ! minus           [ reduce using rule 47 (comp -> comp less op .) ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 157
   yacc.py:2563:
   yacc.py:2565:    (48) comp -> comp lesseq op .
   yacc.py:2565:    (51) op -> op . plus term
   yacc.py:2565:    (52) op -> op . minus term
   yacc.py:2566:
   yacc.py:2666:  ! shift/reduce conflict for plus resolved as shift
   yacc.py:2666:  ! shift/reduce conflict for minus resolved as shift
   yacc.py:2687:    less            reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    lesseq          reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    equal           reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    semi            reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    cpar            reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    arroba          reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    dot             reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    star            reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    div             reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    of              reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    then            reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    loop            reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    comma           reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    in              reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    else            reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    pool            reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    ccur            reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    fi              reduce using rule 48 (comp -> comp lesseq op .)
   yacc.py:2687:    plus            shift and go to state 117
   yacc.py:2687:    minus           shift and go to state 118
   yacc.py:2689:
   yacc.py:2696:  ! plus            [ reduce using rule 48 (comp -> comp lesseq op .) ]
   yacc.py:2696:  ! minus           [ reduce using rule 48 (comp -> comp lesseq op .) ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 158
   yacc.py:2563:
   yacc.py:2565:    (49) comp -> comp equal op .
   yacc.py:2565:    (51) op -> op . plus term
   yacc.py:2565:    (52) op -> op . minus term
   yacc.py:2566:
   yacc.py:2666:  ! shift/reduce conflict for plus resolved as shift
   yacc.py:2666:  ! shift/reduce conflict for minus resolved as shift
   yacc.py:2687:    less            reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    lesseq          reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    equal           reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    semi            reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    cpar            reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    arroba          reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    dot             reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    star            reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    div             reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    of              reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    then            reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    loop            reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    comma           reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    in              reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    else            reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    pool            reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    ccur            reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    fi              reduce using rule 49 (comp -> comp equal op .)
   yacc.py:2687:    plus            shift and go to state 117
   yacc.py:2687:    minus           shift and go to state 118
   yacc.py:2689:
   yacc.py:2696:  ! plus            [ reduce using rule 49 (comp -> comp equal op .) ]
   yacc.py:2696:  ! minus           [ reduce using rule 49 (comp -> comp equal op .) ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 159
   yacc.py:2563:
   yacc.py:2565:    (51) op -> op plus term .
   yacc.py:2565:    (54) term -> term . star base_call
   yacc.py:2565:    (55) term -> term . div base_call
   yacc.py:2565:    (57) term -> term . star error
   yacc.py:2565:    (58) term -> term . div error
   yacc.py:2566:
   yacc.py:2666:  ! shift/reduce conflict for star resolved as shift
   yacc.py:2666:  ! shift/reduce conflict for div resolved as shift
   yacc.py:2687:    plus            reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    minus           reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    less            reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    lesseq          reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    equal           reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    semi            reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    cpar            reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    arroba          reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    dot             reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    of              reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    then            reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    loop            reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    comma           reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    in              reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    else            reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    pool            reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    ccur            reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    fi              reduce using rule 51 (op -> op plus term .)
   yacc.py:2687:    star            shift and go to state 119
   yacc.py:2687:    div             shift and go to state 120
   yacc.py:2689:
   yacc.py:2696:  ! star            [ reduce using rule 51 (op -> op plus term .) ]
   yacc.py:2696:  ! div             [ reduce using rule 51 (op -> op plus term .) ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 160
   yacc.py:2563:
   yacc.py:2565:    (52) op -> op minus term .
   yacc.py:2565:    (54) term -> term . star base_call
   yacc.py:2565:    (55) term -> term . div base_call
   yacc.py:2565:    (57) term -> term . star error
   yacc.py:2565:    (58) term -> term . div error
   yacc.py:2566:
   yacc.py:2666:  ! shift/reduce conflict for star resolved as shift
   yacc.py:2666:  ! shift/reduce conflict for div resolved as shift
   yacc.py:2687:    plus            reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    minus           reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    less            reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    lesseq          reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    equal           reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    semi            reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    cpar            reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    arroba          reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    dot             reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    of              reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    then            reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    loop            reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    comma           reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    in              reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    else            reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    pool            reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    ccur            reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    fi              reduce using rule 52 (op -> op minus term .)
   yacc.py:2687:    star            shift and go to state 119
   yacc.py:2687:    div             shift and go to state 120
   yacc.py:2689:
   yacc.py:2696:  ! star            [ reduce using rule 52 (op -> op minus term .) ]
   yacc.py:2696:  ! div             [ reduce using rule 52 (op -> op minus term .) ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 161
   yacc.py:2563:
   yacc.py:2565:    (54) term -> term star base_call .
   yacc.py:2566:
   yacc.py:2687:    star            reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    div             reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    plus            reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    minus           reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    less            reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    lesseq          reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    equal           reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    semi            reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    cpar            reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    arroba          reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    dot             reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    of              reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    then            reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    loop            reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    comma           reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    in              reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    else            reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    pool            reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    ccur            reduce using rule 54 (term -> term star base_call .)
   yacc.py:2687:    fi              reduce using rule 54 (term -> term star base_call .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 162
   yacc.py:2563:
   yacc.py:2565:    (57) term -> term star error .
   yacc.py:2565:    (61) base_call -> error . arroba type dot func_call
   yacc.py:2565:    (78) atom -> error . block ccur
   yacc.py:2565:    (90) func_call -> error . opar args cpar
   yacc.py:2565:    (84) block -> . expr semi
   yacc.py:2565:    (85) block -> . expr semi block
   yacc.py:2565:    (86) block -> . error block
   yacc.py:2565:    (87) block -> . error semi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2666:  ! shift/reduce conflict for arroba resolved as shift
   yacc.py:2687:    star            reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    div             reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    plus            reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    minus           reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    less            reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    lesseq          reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    equal           reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    semi            reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    cpar            reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    dot             reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    of              reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    then            reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    loop            reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    comma           reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    in              reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    else            reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    pool            reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    ccur            reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    fi              reduce using rule 57 (term -> term star error .)
   yacc.py:2687:    arroba          shift and go to state 108
   yacc.py:2687:    opar            shift and go to state 110
   yacc.py:2687:    error           shift and go to state 107
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2696:  ! arroba          [ reduce using rule 57 (term -> term star error .) ]
   yacc.py:2700:
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    block                          shift and go to state 109
   yacc.py:2714:    expr                           shift and go to state 111
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 163
   yacc.py:2563:
   yacc.py:2565:    (55) term -> term div base_call .
   yacc.py:2566:
   yacc.py:2687:    star            reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    div             reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    plus            reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    minus           reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    less            reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    lesseq          reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    equal           reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    semi            reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    cpar            reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    arroba          reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    dot             reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    of              reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    then            reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    loop            reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    comma           reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    in              reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    else            reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    pool            reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    ccur            reduce using rule 55 (term -> term div base_call .)
   yacc.py:2687:    fi              reduce using rule 55 (term -> term div base_call .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 164
   yacc.py:2563:
   yacc.py:2565:    (58) term -> term div error .
   yacc.py:2565:    (61) base_call -> error . arroba type dot func_call
   yacc.py:2565:    (78) atom -> error . block ccur
   yacc.py:2565:    (90) func_call -> error . opar args cpar
   yacc.py:2565:    (84) block -> . expr semi
   yacc.py:2565:    (85) block -> . expr semi block
   yacc.py:2565:    (86) block -> . error block
   yacc.py:2565:    (87) block -> . error semi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2666:  ! shift/reduce conflict for arroba resolved as shift
   yacc.py:2687:    star            reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    div             reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    plus            reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    minus           reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    less            reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    lesseq          reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    equal           reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    semi            reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    cpar            reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    dot             reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    of              reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    then            reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    loop            reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    comma           reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    in              reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    else            reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    pool            reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    ccur            reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    fi              reduce using rule 58 (term -> term div error .)
   yacc.py:2687:    arroba          shift and go to state 108
   yacc.py:2687:    opar            shift and go to state 110
   yacc.py:2687:    error           shift and go to state 107
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2696:  ! arroba          [ reduce using rule 58 (term -> term div error .) ]
   yacc.py:2700:
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    block                          shift and go to state 109
   yacc.py:2714:    expr                           shift and go to state 111
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 165
   yacc.py:2563:
   yacc.py:2565:    (59) base_call -> factor arroba type . dot func_call
   yacc.py:2566:
   yacc.py:2687:    dot             shift and go to state 193
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 166
   yacc.py:2563:
   yacc.py:2565:    (62) base_call -> factor arroba error . dot func_call
   yacc.py:2566:
   yacc.py:2687:    dot             shift and go to state 194
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 167
   yacc.py:2563:
   yacc.py:2565:    (65) factor -> factor dot func_call .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    dot             reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    star            reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    div             reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    plus            reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    minus           reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    less            reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    lesseq          reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    equal           reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    semi            reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    cpar            reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    of              reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    then            reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    loop            reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    comma           reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    in              reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    else            reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    pool            reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    ccur            reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2687:    fi              reduce using rule 65 (factor -> factor dot func_call .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 168
   yacc.py:2563:
   yacc.py:2565:    (88) func_call -> id . opar args cpar
   yacc.py:2565:    (89) func_call -> id . opar error cpar
   yacc.py:2566:
   yacc.py:2687:    opar            shift and go to state 113
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 169
   yacc.py:2563:
   yacc.py:2565:    (90) func_call -> error . opar args cpar
   yacc.py:2566:
   yacc.py:2687:    opar            shift and go to state 195
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 170
   yacc.py:2563:
   yacc.py:2565:    (64) factor -> opar expr cpar .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    dot             reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    star            reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    div             reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    plus            reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    minus           reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    less            reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    lesseq          reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    equal           reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    semi            reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    cpar            reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    of              reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    then            reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    loop            reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    comma           reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    in              reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    else            reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    pool            reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    ccur            reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2687:    fi              reduce using rule 64 (factor -> opar expr cpar .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 171
   yacc.py:2563:
   yacc.py:2565:    (70) factor -> let let_list in . expr
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 196
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 172
   yacc.py:2563:
   yacc.py:2565:    (37) let_list -> let_assign comma . let_list
   yacc.py:2565:    (36) let_list -> . let_assign
   yacc.py:2565:    (37) let_list -> . let_assign comma let_list
   yacc.py:2565:    (38) let_assign -> . param larrow expr
   yacc.py:2565:    (39) let_assign -> . param
   yacc.py:2565:    (35) param -> . id colon type
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 46
   yacc.py:2689:
   yacc.py:2714:    let_assign                     shift and go to state 129
   yacc.py:2714:    let_list                       shift and go to state 197
   yacc.py:2714:    param                          shift and go to state 130
   yacc.py:2561:
   yacc.py:2562:state 173
   yacc.py:2563:
   yacc.py:2565:    (38) let_assign -> param larrow . expr
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 198
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 174
   yacc.py:2563:
   yacc.py:2565:    (71) factor -> case expr of . cases_list esac
   yacc.py:2565:    (40) cases_list -> . casep semi
   yacc.py:2565:    (41) cases_list -> . casep semi cases_list
   yacc.py:2565:    (42) cases_list -> . error cases_list
   yacc.py:2565:    (43) cases_list -> . error semi
   yacc.py:2565:    (44) casep -> . id colon type rarrow expr
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 201
   yacc.py:2687:    id              shift and go to state 202
   yacc.py:2689:
   yacc.py:2714:    cases_list                     shift and go to state 199
   yacc.py:2714:    casep                          shift and go to state 200
   yacc.py:2561:
   yacc.py:2562:state 175
   yacc.py:2563:
   yacc.py:2565:    (72) factor -> if expr then . expr else expr fi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 203
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 176
   yacc.py:2563:
   yacc.py:2565:    (73) factor -> while expr loop . expr pool
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 204
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 177
   yacc.py:2563:
   yacc.py:2565:    (77) atom -> ocur block ccur .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    dot             reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    star            reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    div             reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    plus            reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    minus           reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    less            reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    lesseq          reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    equal           reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    semi            reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    cpar            reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    of              reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    then            reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    loop            reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    comma           reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    in              reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    else            reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    pool            reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    ccur            reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2687:    fi              reduce using rule 77 (atom -> ocur block ccur .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 178
   yacc.py:2563:
   yacc.py:2565:    (80) atom -> ocur block error .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    dot             reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    star            reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    div             reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    plus            reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    minus           reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    less            reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    lesseq          reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    equal           reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    semi            reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    cpar            reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    of              reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    then            reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    loop            reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    comma           reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    in              reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    else            reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    pool            reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    ccur            reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2687:    fi              reduce using rule 80 (atom -> ocur block error .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 179
   yacc.py:2563:
   yacc.py:2565:    (79) atom -> ocur error ccur .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    dot             reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    star            reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    div             reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    plus            reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    minus           reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    less            reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    lesseq          reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    equal           reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    semi            reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    cpar            reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    of              reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    then            reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    loop            reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    comma           reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    in              reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    else            reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    pool            reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    ccur            reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2687:    fi              reduce using rule 79 (atom -> ocur error ccur .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 180
   yacc.py:2563:
   yacc.py:2565:    (26) def_func -> error opar formals cpar colon type ocur . expr ccur
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 205
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 181
   yacc.py:2563:
   yacc.py:2565:    (25) def_func -> id opar formals cpar colon type ocur . expr ccur
   yacc.py:2565:    (29) def_func -> id opar formals cpar colon type ocur . error ccur
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 207
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 206
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 182
   yacc.py:2563:
   yacc.py:2565:    (28) def_func -> id opar formals cpar colon error ocur . expr ccur
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 208
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 183
   yacc.py:2563:
   yacc.py:2565:    (27) def_func -> id opar error cpar colon type ocur . expr ccur
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 209
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 184
   yacc.py:2563:
   yacc.py:2565:    (61) base_call -> error arroba type dot . func_call
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 168
   yacc.py:2687:    error           shift and go to state 169
   yacc.py:2689:
   yacc.py:2714:    func_call                      shift and go to state 210
   yacc.py:2561:
   yacc.py:2562:state 185
   yacc.py:2563:
   yacc.py:2565:    (95) arg_list -> error . arg_list
   yacc.py:2565:    (86) block -> error . block
   yacc.py:2565:    (87) block -> error . semi
   yacc.py:2565:    (61) base_call -> error . arroba type dot func_call
   yacc.py:2565:    (78) atom -> error . block ccur
   yacc.py:2565:    (90) func_call -> error . opar args cpar
   yacc.py:2565:    (93) arg_list -> . expr
   yacc.py:2565:    (94) arg_list -> . expr comma arg_list
   yacc.py:2565:    (95) arg_list -> . error arg_list
   yacc.py:2565:    (84) block -> . expr semi
   yacc.py:2565:    (85) block -> . expr semi block
   yacc.py:2565:    (86) block -> . error block
   yacc.py:2565:    (87) block -> . error semi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    semi            shift and go to state 142
   yacc.py:2687:    arroba          shift and go to state 108
   yacc.py:2687:    opar            shift and go to state 110
   yacc.py:2687:    error           shift and go to state 185
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    arg_list                       shift and go to state 186
   yacc.py:2714:    block                          shift and go to state 141
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    expr                           shift and go to state 187
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 186
   yacc.py:2563:
   yacc.py:2565:    (95) arg_list -> error arg_list .
   yacc.py:2566:
   yacc.py:2687:    cpar            reduce using rule 95 (arg_list -> error arg_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 187
   yacc.py:2563:
   yacc.py:2565:    (93) arg_list -> expr .
   yacc.py:2565:    (94) arg_list -> expr . comma arg_list
   yacc.py:2565:    (84) block -> expr . semi
   yacc.py:2565:    (85) block -> expr . semi block
   yacc.py:2566:
   yacc.py:2687:    cpar            reduce using rule 93 (arg_list -> expr .)
   yacc.py:2687:    comma           shift and go to state 189
   yacc.py:2687:    semi            shift and go to state 151
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 188
   yacc.py:2563:
   yacc.py:2565:    (90) func_call -> error opar args cpar .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    dot             reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    star            reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    div             reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    plus            reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    minus           reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    less            reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    lesseq          reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    equal           reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    semi            reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    cpar            reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    of              reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    then            reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    loop            reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    comma           reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    in              reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    else            reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    pool            reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    ccur            reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2687:    fi              reduce using rule 90 (func_call -> error opar args cpar .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 189
   yacc.py:2563:
   yacc.py:2565:    (94) arg_list -> expr comma . arg_list
   yacc.py:2565:    (93) arg_list -> . expr
   yacc.py:2565:    (94) arg_list -> . expr comma arg_list
   yacc.py:2565:    (95) arg_list -> . error arg_list
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 145
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 155
   yacc.py:2714:    arg_list                       shift and go to state 211
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 190
   yacc.py:2563:
   yacc.py:2565:    (85) block -> expr semi block .
   yacc.py:2566:
   yacc.py:2687:    ccur            reduce using rule 85 (block -> expr semi block .)
   yacc.py:2687:    error           reduce using rule 85 (block -> expr semi block .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 191
   yacc.py:2563:
   yacc.py:2565:    (88) func_call -> id opar args cpar .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    dot             reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    star            reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    div             reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    plus            reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    minus           reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    less            reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    lesseq          reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    equal           reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    semi            reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    cpar            reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    of              reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    then            reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    loop            reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    comma           reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    in              reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    else            reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    pool            reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    ccur            reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2687:    fi              reduce using rule 88 (func_call -> id opar args cpar .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 192
   yacc.py:2563:
   yacc.py:2565:    (89) func_call -> id opar error cpar .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    dot             reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    star            reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    div             reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    plus            reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    minus           reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    less            reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    lesseq          reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    equal           reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    semi            reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    cpar            reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    of              reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    then            reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    loop            reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    comma           reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    in              reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    else            reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    pool            reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    ccur            reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2687:    fi              reduce using rule 89 (func_call -> id opar error cpar .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 193
   yacc.py:2563:
   yacc.py:2565:    (59) base_call -> factor arroba type dot . func_call
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 168
   yacc.py:2687:    error           shift and go to state 169
   yacc.py:2689:
   yacc.py:2714:    func_call                      shift and go to state 212
   yacc.py:2561:
   yacc.py:2562:state 194
   yacc.py:2563:
   yacc.py:2565:    (62) base_call -> factor arroba error dot . func_call
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 168
   yacc.py:2687:    error           shift and go to state 169
   yacc.py:2689:
   yacc.py:2714:    func_call                      shift and go to state 213
   yacc.py:2561:
   yacc.py:2562:state 195
   yacc.py:2563:
   yacc.py:2565:    (90) func_call -> error opar . args cpar
   yacc.py:2565:    (91) args -> . arg_list
   yacc.py:2565:    (92) args -> . arg_list_empty
   yacc.py:2565:    (93) arg_list -> . expr
   yacc.py:2565:    (94) arg_list -> . expr comma arg_list
   yacc.py:2565:    (95) arg_list -> . error arg_list
   yacc.py:2565:    (96) arg_list_empty -> . epsilon
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (2) epsilon -> .
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    error           shift and go to state 145
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    cpar            reduce using rule 2 (epsilon -> .)
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    args                           shift and go to state 146
   yacc.py:2714:    arg_list                       shift and go to state 148
   yacc.py:2714:    arg_list_empty                 shift and go to state 149
   yacc.py:2714:    expr                           shift and go to state 155
   yacc.py:2714:    epsilon                        shift and go to state 150
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 196
   yacc.py:2563:
   yacc.py:2565:    (70) factor -> let let_list in expr .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    dot             reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    star            reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    div             reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    plus            reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    minus           reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    less            reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    lesseq          reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    equal           reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    semi            reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    cpar            reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    of              reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    then            reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    loop            reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    comma           reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    in              reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    else            reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    pool            reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    ccur            reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2687:    fi              reduce using rule 70 (factor -> let let_list in expr .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 197
   yacc.py:2563:
   yacc.py:2565:    (37) let_list -> let_assign comma let_list .
   yacc.py:2566:
   yacc.py:2687:    in              reduce using rule 37 (let_list -> let_assign comma let_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 198
   yacc.py:2563:
   yacc.py:2565:    (38) let_assign -> param larrow expr .
   yacc.py:2566:
   yacc.py:2687:    comma           reduce using rule 38 (let_assign -> param larrow expr .)
   yacc.py:2687:    in              reduce using rule 38 (let_assign -> param larrow expr .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 199
   yacc.py:2563:
   yacc.py:2565:    (71) factor -> case expr of cases_list . esac
   yacc.py:2566:
   yacc.py:2687:    esac            shift and go to state 214
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 200
   yacc.py:2563:
   yacc.py:2565:    (40) cases_list -> casep . semi
   yacc.py:2565:    (41) cases_list -> casep . semi cases_list
   yacc.py:2566:
   yacc.py:2687:    semi            shift and go to state 215
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 201
   yacc.py:2563:
   yacc.py:2565:    (42) cases_list -> error . cases_list
   yacc.py:2565:    (43) cases_list -> error . semi
   yacc.py:2565:    (40) cases_list -> . casep semi
   yacc.py:2565:    (41) cases_list -> . casep semi cases_list
   yacc.py:2565:    (42) cases_list -> . error cases_list
   yacc.py:2565:    (43) cases_list -> . error semi
   yacc.py:2565:    (44) casep -> . id colon type rarrow expr
   yacc.py:2566:
   yacc.py:2687:    semi            shift and go to state 217
   yacc.py:2687:    error           shift and go to state 201
   yacc.py:2687:    id              shift and go to state 202
   yacc.py:2689:
   yacc.py:2714:    cases_list                     shift and go to state 216
   yacc.py:2714:    casep                          shift and go to state 200
   yacc.py:2561:
   yacc.py:2562:state 202
   yacc.py:2563:
   yacc.py:2565:    (44) casep -> id . colon type rarrow expr
   yacc.py:2566:
   yacc.py:2687:    colon           shift and go to state 218
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 203
   yacc.py:2563:
   yacc.py:2565:    (72) factor -> if expr then expr . else expr fi
   yacc.py:2566:
   yacc.py:2687:    else            shift and go to state 219
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 204
   yacc.py:2563:
   yacc.py:2565:    (73) factor -> while expr loop expr . pool
   yacc.py:2566:
   yacc.py:2687:    pool            shift and go to state 220
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 205
   yacc.py:2563:
   yacc.py:2565:    (26) def_func -> error opar formals cpar colon type ocur expr . ccur
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 221
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 206
   yacc.py:2563:
   yacc.py:2565:    (25) def_func -> id opar formals cpar colon type ocur expr . ccur
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 222
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 207
   yacc.py:2563:
   yacc.py:2565:    (29) def_func -> id opar formals cpar colon type ocur error . ccur
   yacc.py:2565:    (61) base_call -> error . arroba type dot func_call
   yacc.py:2565:    (78) atom -> error . block ccur
   yacc.py:2565:    (90) func_call -> error . opar args cpar
   yacc.py:2565:    (84) block -> . expr semi
   yacc.py:2565:    (85) block -> . expr semi block
   yacc.py:2565:    (86) block -> . error block
   yacc.py:2565:    (87) block -> . error semi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 223
   yacc.py:2687:    arroba          shift and go to state 108
   yacc.py:2687:    opar            shift and go to state 110
   yacc.py:2687:    error           shift and go to state 107
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    block                          shift and go to state 109
   yacc.py:2714:    expr                           shift and go to state 111
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 208
   yacc.py:2563:
   yacc.py:2565:    (28) def_func -> id opar formals cpar colon error ocur expr . ccur
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 224
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 209
   yacc.py:2563:
   yacc.py:2565:    (27) def_func -> id opar error cpar colon type ocur expr . ccur
   yacc.py:2566:
   yacc.py:2687:    ccur            shift and go to state 225
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 210
   yacc.py:2563:
   yacc.py:2565:    (61) base_call -> error arroba type dot func_call .
   yacc.py:2566:
   yacc.py:2687:    star            reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    div             reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    plus            reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    minus           reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    less            reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    lesseq          reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    equal           reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    semi            reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    cpar            reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    arroba          reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    dot             reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    of              reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    then            reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    loop            reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    comma           reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    in              reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    else            reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    pool            reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    ccur            reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2687:    fi              reduce using rule 61 (base_call -> error arroba type dot func_call .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 211
   yacc.py:2563:
   yacc.py:2565:    (94) arg_list -> expr comma arg_list .
   yacc.py:2566:
   yacc.py:2687:    cpar            reduce using rule 94 (arg_list -> expr comma arg_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 212
   yacc.py:2563:
   yacc.py:2565:    (59) base_call -> factor arroba type dot func_call .
   yacc.py:2566:
   yacc.py:2687:    star            reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    div             reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    plus            reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    minus           reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    less            reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    lesseq          reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    equal           reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    semi            reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    cpar            reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    arroba          reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    dot             reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    of              reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    then            reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    loop            reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    comma           reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    in              reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    else            reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    pool            reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    ccur            reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2687:    fi              reduce using rule 59 (base_call -> factor arroba type dot func_call .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 213
   yacc.py:2563:
   yacc.py:2565:    (62) base_call -> factor arroba error dot func_call .
   yacc.py:2566:
   yacc.py:2687:    star            reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    div             reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    plus            reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    minus           reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    less            reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    lesseq          reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    equal           reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    semi            reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    cpar            reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    arroba          reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    dot             reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    of              reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    then            reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    loop            reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    comma           reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    in              reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    else            reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    pool            reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    ccur            reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2687:    fi              reduce using rule 62 (base_call -> factor arroba error dot func_call .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 214
   yacc.py:2563:
   yacc.py:2565:    (71) factor -> case expr of cases_list esac .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    dot             reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    star            reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    div             reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    plus            reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    minus           reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    less            reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    lesseq          reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    equal           reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    semi            reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    cpar            reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    of              reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    then            reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    loop            reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    comma           reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    in              reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    else            reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    pool            reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    ccur            reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2687:    fi              reduce using rule 71 (factor -> case expr of cases_list esac .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 215
   yacc.py:2563:
   yacc.py:2565:    (40) cases_list -> casep semi .
   yacc.py:2565:    (41) cases_list -> casep semi . cases_list
   yacc.py:2565:    (40) cases_list -> . casep semi
   yacc.py:2565:    (41) cases_list -> . casep semi cases_list
   yacc.py:2565:    (42) cases_list -> . error cases_list
   yacc.py:2565:    (43) cases_list -> . error semi
   yacc.py:2565:    (44) casep -> . id colon type rarrow expr
   yacc.py:2566:
   yacc.py:2687:    esac            reduce using rule 40 (cases_list -> casep semi .)
   yacc.py:2687:    error           shift and go to state 201
   yacc.py:2687:    id              shift and go to state 202
   yacc.py:2689:
   yacc.py:2714:    casep                          shift and go to state 200
   yacc.py:2714:    cases_list                     shift and go to state 226
   yacc.py:2561:
   yacc.py:2562:state 216
   yacc.py:2563:
   yacc.py:2565:    (42) cases_list -> error cases_list .
   yacc.py:2566:
   yacc.py:2687:    esac            reduce using rule 42 (cases_list -> error cases_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 217
   yacc.py:2563:
   yacc.py:2565:    (43) cases_list -> error semi .
   yacc.py:2566:
   yacc.py:2687:    esac            reduce using rule 43 (cases_list -> error semi .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 218
   yacc.py:2563:
   yacc.py:2565:    (44) casep -> id colon . type rarrow expr
   yacc.py:2566:
   yacc.py:2687:    type            shift and go to state 227
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 219
   yacc.py:2563:
   yacc.py:2565:    (72) factor -> if expr then expr else . expr fi
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 228
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 220
   yacc.py:2563:
   yacc.py:2565:    (73) factor -> while expr loop expr pool .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    dot             reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    star            reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    div             reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    plus            reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    minus           reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    less            reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    lesseq          reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    equal           reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    semi            reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    cpar            reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    of              reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    then            reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    loop            reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    comma           reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    in              reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    else            reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    pool            reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    ccur            reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2687:    fi              reduce using rule 73 (factor -> while expr loop expr pool .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 221
   yacc.py:2563:
   yacc.py:2565:    (26) def_func -> error opar formals cpar colon type ocur expr ccur .
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 26 (def_func -> error opar formals cpar colon type ocur expr ccur .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 222
   yacc.py:2563:
   yacc.py:2565:    (25) def_func -> id opar formals cpar colon type ocur expr ccur .
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 25 (def_func -> id opar formals cpar colon type ocur expr ccur .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 223
   yacc.py:2563:
   yacc.py:2565:    (29) def_func -> id opar formals cpar colon type ocur error ccur .
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 29 (def_func -> id opar formals cpar colon type ocur error ccur .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 224
   yacc.py:2563:
   yacc.py:2565:    (28) def_func -> id opar formals cpar colon error ocur expr ccur .
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 28 (def_func -> id opar formals cpar colon error ocur expr ccur .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 225
   yacc.py:2563:
   yacc.py:2565:    (27) def_func -> id opar error cpar colon type ocur expr ccur .
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 27 (def_func -> id opar error cpar colon type ocur expr ccur .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 226
   yacc.py:2563:
   yacc.py:2565:    (41) cases_list -> casep semi cases_list .
   yacc.py:2566:
   yacc.py:2687:    esac            reduce using rule 41 (cases_list -> casep semi cases_list .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 227
   yacc.py:2563:
   yacc.py:2565:    (44) casep -> id colon type . rarrow expr
   yacc.py:2566:
   yacc.py:2687:    rarrow          shift and go to state 229
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 228
   yacc.py:2563:
   yacc.py:2565:    (72) factor -> if expr then expr else expr . fi
   yacc.py:2566:
   yacc.py:2687:    fi              shift and go to state 230
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 229
   yacc.py:2563:
   yacc.py:2565:    (44) casep -> id colon type rarrow . expr
   yacc.py:2565:    (45) expr -> . id larrow expr
   yacc.py:2565:    (46) expr -> . comp
   yacc.py:2565:    (47) comp -> . comp less op
   yacc.py:2565:    (48) comp -> . comp lesseq op
   yacc.py:2565:    (49) comp -> . comp equal op
   yacc.py:2565:    (50) comp -> . op
   yacc.py:2565:    (51) op -> . op plus term
   yacc.py:2565:    (52) op -> . op minus term
   yacc.py:2565:    (53) op -> . term
   yacc.py:2565:    (54) term -> . term star base_call
   yacc.py:2565:    (55) term -> . term div base_call
   yacc.py:2565:    (56) term -> . base_call
   yacc.py:2565:    (57) term -> . term star error
   yacc.py:2565:    (58) term -> . term div error
   yacc.py:2565:    (59) base_call -> . factor arroba type dot func_call
   yacc.py:2565:    (60) base_call -> . factor
   yacc.py:2565:    (61) base_call -> . error arroba type dot func_call
   yacc.py:2565:    (62) base_call -> . factor arroba error dot func_call
   yacc.py:2565:    (63) factor -> . atom
   yacc.py:2565:    (64) factor -> . opar expr cpar
   yacc.py:2565:    (65) factor -> . factor dot func_call
   yacc.py:2565:    (66) factor -> . not expr
   yacc.py:2565:    (67) factor -> . func_call
   yacc.py:2565:    (68) factor -> . isvoid base_call
   yacc.py:2565:    (69) factor -> . nox base_call
   yacc.py:2565:    (70) factor -> . let let_list in expr
   yacc.py:2565:    (71) factor -> . case expr of cases_list esac
   yacc.py:2565:    (72) factor -> . if expr then expr else expr fi
   yacc.py:2565:    (73) factor -> . while expr loop expr pool
   yacc.py:2565:    (74) atom -> . num
   yacc.py:2565:    (75) atom -> . id
   yacc.py:2565:    (76) atom -> . new type
   yacc.py:2565:    (77) atom -> . ocur block ccur
   yacc.py:2565:    (78) atom -> . error block ccur
   yacc.py:2565:    (79) atom -> . ocur error ccur
   yacc.py:2565:    (80) atom -> . ocur block error
   yacc.py:2565:    (81) atom -> . true
   yacc.py:2565:    (82) atom -> . false
   yacc.py:2565:    (83) atom -> . string
   yacc.py:2565:    (88) func_call -> . id opar args cpar
   yacc.py:2565:    (89) func_call -> . id opar error cpar
   yacc.py:2565:    (90) func_call -> . error opar args cpar
   yacc.py:2566:
   yacc.py:2687:    id              shift and go to state 72
   yacc.py:2687:    error           shift and go to state 70
   yacc.py:2687:    opar            shift and go to state 80
   yacc.py:2687:    not             shift and go to state 81
   yacc.py:2687:    isvoid          shift and go to state 82
   yacc.py:2687:    nox             shift and go to state 83
   yacc.py:2687:    let             shift and go to state 84
   yacc.py:2687:    case            shift and go to state 85
   yacc.py:2687:    if              shift and go to state 86
   yacc.py:2687:    while           shift and go to state 87
   yacc.py:2687:    num             shift and go to state 88
   yacc.py:2687:    new             shift and go to state 89
   yacc.py:2687:    ocur            shift and go to state 90
   yacc.py:2687:    true            shift and go to state 91
   yacc.py:2687:    false           shift and go to state 92
   yacc.py:2687:    string          shift and go to state 93
   yacc.py:2689:
   yacc.py:2714:    expr                           shift and go to state 231
   yacc.py:2714:    comp                           shift and go to state 73
   yacc.py:2714:    op                             shift and go to state 74
   yacc.py:2714:    term                           shift and go to state 75
   yacc.py:2714:    base_call                      shift and go to state 76
   yacc.py:2714:    factor                         shift and go to state 77
   yacc.py:2714:    func_call                      shift and go to state 78
   yacc.py:2714:    atom                           shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 230
   yacc.py:2563:
   yacc.py:2565:    (72) factor -> if expr then expr else expr fi .
   yacc.py:2566:
   yacc.py:2687:    arroba          reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    dot             reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    star            reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    div             reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    plus            reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    minus           reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    less            reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    lesseq          reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    equal           reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    semi            reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    cpar            reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    of              reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    then            reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    loop            reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    comma           reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    in              reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    else            reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    pool            reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    ccur            reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2687:    fi              reduce using rule 72 (factor -> if expr then expr else expr fi .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 231
   yacc.py:2563:
   yacc.py:2565:    (44) casep -> id colon type rarrow expr .
   yacc.py:2566:
   yacc.py:2687:    semi            reduce using rule 44 (casep -> id colon type rarrow expr .)
   yacc.py:2689:
   yacc.py:3447:24 shift/reduce conflicts
   yacc.py:3457:
   yacc.py:3458:Conflicts:
   yacc.py:3459:
   yacc.py:3462:shift/reduce conflict for less in state 73 resolved as shift
   yacc.py:3462:shift/reduce conflict for lesseq in state 73 resolved as shift
   yacc.py:3462:shift/reduce conflict for equal in state 73 resolved as shift
   yacc.py:3462:shift/reduce conflict for plus in state 74 resolved as shift
   yacc.py:3462:shift/reduce conflict for minus in state 74 resolved as shift
   yacc.py:3462:shift/reduce conflict for star in state 75 resolved as shift
   yacc.py:3462:shift/reduce conflict for div in state 75 resolved as shift
   yacc.py:3462:shift/reduce conflict for arroba in state 77 resolved as shift
   yacc.py:3462:shift/reduce conflict for dot in state 77 resolved as shift
   yacc.py:3462:shift/reduce conflict for ccur in state 141 resolved as shift
   yacc.py:3462:shift/reduce conflict for cpar in state 147 resolved as shift
   yacc.py:3462:shift/reduce conflict for error in state 151 resolved as shift
   yacc.py:3462:shift/reduce conflict for plus in state 156 resolved as shift
   yacc.py:3462:shift/reduce conflict for minus in state 156 resolved as shift
   yacc.py:3462:shift/reduce conflict for plus in state 157 resolved as shift
   yacc.py:3462:shift/reduce conflict for minus in state 157 resolved as shift
   yacc.py:3462:shift/reduce conflict for plus in state 158 resolved as shift
   yacc.py:3462:shift/reduce conflict for minus in state 158 resolved as shift
   yacc.py:3462:shift/reduce conflict for star in state 159 resolved as shift
   yacc.py:3462:shift/reduce conflict for div in state 159 resolved as shift
   yacc.py:3462:shift/reduce conflict for star in state 160 resolved as shift
   yacc.py:3462:shift/reduce conflict for div in state 160 resolved as shift
   yacc.py:3462:shift/reduce conflict for arroba in state 162 resolved as shift
   yacc.py:3462:shift/reduce conflict for arroba in state 164 resolved as shift
   yacc.py:3488:Couldn't create 'parsetab'. [Errno 2] No such file or directory: 'src/output_parser/parsetab.py'
   yacc.py: 362:PLY: PARSE DEBUG START
   yacc.py: 410:
   yacc.py: 411:State  : 0
   yacc.py: 435:Stack  : . LexToken(class,'class',3,63)
   yacc.py: 445:Action : Shift and goto state 5
   yacc.py: 410:
   yacc.py: 411:State  : 5
   yacc.py: 435:Stack  : class . LexToken(type,'Main',3,69)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 435:Stack  : class type . LexToken(ocur,'{',3,74)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
   yacc.py: 435:Stack  : class type ocur . LexToken(id,'main',4,80)
   yacc.py: 445:Action : Shift and goto state 19
   yacc.py: 410:
   yacc.py: 411:State  : 19
   yacc.py: 435:Stack  : class type ocur id . LexToken(opar,'(',4,84)
   yacc.py: 445:Action : Shift and goto state 32
   yacc.py: 410:
   yacc.py: 411:State  : 32
   yacc.py: 435:Stack  : class type ocur id opar . LexToken(cpar,')',4,85)
   yacc.py: 474:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x55810cd760f0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 430:Defaulted state 45: Reduce using 34
   yacc.py: 435:Stack  : class type ocur id opar epsilon . LexToken(cpar,')',4,85)
   yacc.py: 471:Action : Reduce rule [param_list_empty -> epsilon] with [None] and goto state 43
   yacc.py: 506:Result : <list @ 0x7ff028d08c48> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 43
   yacc.py: 430:Defaulted state 43: Reduce using 31
   yacc.py: 435:Stack  : class type ocur id opar param_list_empty . LexToken(cpar,')',4,85)
   yacc.py: 471:Action : Reduce rule [formals -> param_list_empty] with [[]] and goto state 51
   yacc.py: 506:Result : <list @ 0x7ff028d08c48> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : class type ocur id opar formals . LexToken(cpar,')',4,85)
   yacc.py: 445:Action : Shift and goto state 64
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 435:Stack  : class type ocur id opar formals cpar . LexToken(colon,':',4,86)
   yacc.py: 445:Action : Shift and goto state 100
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon . LexToken(type,'Object',4,88)
   yacc.py: 445:Action : Shift and goto state 138
   yacc.py: 410:
   yacc.py: 411:State  : 138
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type . LexToken(ocur,'{',4,95)
   yacc.py: 445:Action : Shift and goto state 181
   yacc.py: 410:
   yacc.py: 411:State  : 181
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur . LexToken(opar,'(',5,105)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur opar . LexToken(new,'new',5,106)
   yacc.py: 445:Action : Shift and goto state 89
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur opar new . LexToken(type,'Alpha',5,110)
   yacc.py: 445:Action : Shift and goto state 134
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur opar new type . LexToken(cpar,')',5,115)
   yacc.py: 471:Action : Reduce rule [atom -> new type] with ['new','Alpha'] and goto state 79
   yacc.py: 506:Result : <InstantiateNode @ 0x7ff028dfe5c0> (<tools.ast.InstantiateNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur opar atom . LexToken(cpar,')',5,115)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<InstantiateNode @ 0x7ff028dfe5c0>] and goto state 77
   yacc.py: 506:Result : <InstantiateNode @ 0x7ff028dfe5c0> (<tools.ast.InstantiateNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur opar factor . LexToken(cpar,')',5,115)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<InstantiateNode @ 0x7ff028dfe5c0>] and goto state 76
   yacc.py: 506:Result : <InstantiateNode @ 0x7ff028dfe5c0> (<tools.ast.InstantiateNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur opar base_call . LexToken(cpar,')',5,115)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<InstantiateNode @ 0x7ff028dfe5c0>] and goto state 75
   yacc.py: 506:Result : <InstantiateNode @ 0x7ff028dfe5c0> (<tools.ast.InstantiateNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur opar term . LexToken(cpar,')',5,115)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<InstantiateNode @ 0x7ff028dfe5c0>] and goto state 74
   yacc.py: 506:Result : <InstantiateNode @ 0x7ff028dfe5c0> (<tools.ast.InstantiateNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur opar op . LexToken(cpar,')',5,115)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<InstantiateNode @ 0x7ff028dfe5c0>] and goto state 73
   yacc.py: 506:Result : <InstantiateNode @ 0x7ff028dfe5c0> (<tools.ast.InstantiateNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur opar comp . LexToken(cpar,')',5,115)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<InstantiateNode @ 0x7ff028dfe5c0>] and goto state 123
   yacc.py: 506:Result : <InstantiateNode @ 0x7ff028dfe5c0> (<tools.ast.InstantiateNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 123
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur opar expr . LexToken(cpar,')',5,115)
   yacc.py: 445:Action : Shift and goto state 170
   yacc.py: 410:
   yacc.py: 411:State  : 170
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur opar expr cpar . LexToken(dot,'.',5,116)
   yacc.py: 471:Action : Reduce rule [factor -> opar expr cpar] with ['(',<InstantiateNode @ 0x7ff028dfe5c0>,')'] and goto state 77
   yacc.py: 506:Result : <InstantiateNode @ 0x7ff028dfe5c0> (<tools.ast.InstantiateNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur factor . LexToken(dot,'.',5,116)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur factor dot . LexToken(id,'print',5,117)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur factor dot id . LexToken(opar,'(',5,122)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur factor dot id opar . LexToken(cpar,')',5,123)
   yacc.py: 474:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 150
   yacc.py: 548:Result : <NoneType @ 0x55810cd760f0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 150
   yacc.py: 430:Defaulted state 150: Reduce using 96
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur factor dot id opar epsilon . LexToken(cpar,')',5,123)
   yacc.py: 471:Action : Reduce rule [arg_list_empty -> epsilon] with [None] and goto state 149
   yacc.py: 506:Result : <list @ 0x7ff028d08ec8> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 430:Defaulted state 149: Reduce using 92
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur factor dot id opar arg_list_empty . LexToken(cpar,')',5,123)
   yacc.py: 471:Action : Reduce rule [args -> arg_list_empty] with [[]] and goto state 153
   yacc.py: 506:Result : <list @ 0x7ff028d08ec8> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur factor dot id opar args . LexToken(cpar,')',5,123)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur factor dot id opar args cpar . LexToken(ccur,'}',6,129)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['print','(',[],')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7ff028cccac8> (('print', []))
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur factor dot func_call . LexToken(ccur,'}',6,129)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<InstantiateNode @ 0x7ff028dfe5c0>,'.',('print', [])] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7ff028e500f0> (<tools.ast.CallNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur factor . LexToken(ccur,'}',6,129)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<CallNode @ 0x7ff028e500f0>] and goto state 76
   yacc.py: 506:Result : <CallNode @ 0x7ff028e500f0> (<tools.ast.CallNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur base_call . LexToken(ccur,'}',6,129)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<CallNode @ 0x7ff028e500f0>] and goto state 75
   yacc.py: 506:Result : <CallNode @ 0x7ff028e500f0> (<tools.ast.CallNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur term . LexToken(ccur,'}',6,129)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<CallNode @ 0x7ff028e500f0>] and goto state 74
   yacc.py: 506:Result : <CallNode @ 0x7ff028e500f0> (<tools.ast.CallNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur op . LexToken(ccur,'}',6,129)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<CallNode @ 0x7ff028e500f0>] and goto state 73
   yacc.py: 506:Result : <CallNode @ 0x7ff028e500f0> (<tools.ast.CallNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur comp . LexToken(ccur,'}',6,129)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<CallNode @ 0x7ff028e500f0>] and goto state 206
   yacc.py: 506:Result : <CallNode @ 0x7ff028e500f0> (<tools.ast.CallNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 206
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur expr . LexToken(ccur,'}',6,129)
   yacc.py: 445:Action : Shift and goto state 222
   yacc.py: 410:
   yacc.py: 411:State  : 222
   yacc.py: 430:Defaulted state 222: Reduce using 25
   yacc.py: 435:Stack  : class type ocur id opar formals cpar colon type ocur expr ccur . None
   yacc.py: 471:Action : Reduce rule [def_func -> id opar formals cpar colon type ocur expr ccur] with ['main','(',[],')',':','Object','{',<CallNode @ 0x7ff028e500f0>,'}'] and goto state 18
   yacc.py: 506:Result : <FuncDeclarationNode @ 0x7ff028e501d0> (<tools.ast.FuncDeclarationNode object at ...)
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 435:Stack  : class type ocur def_func . LexToken(semi,';',6,130)
   yacc.py: 445:Action : Shift and goto state 30
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 435:Stack  : class type ocur def_func semi . LexToken(ccur,'}',7,132)
   yacc.py: 474:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 16
   yacc.py: 548:Result : <NoneType @ 0x55810cd760f0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 16
   yacc.py: 430:Defaulted state 16: Reduce using 14
   yacc.py: 435:Stack  : class type ocur def_func semi epsilon . LexToken(ccur,'}',7,132)
   yacc.py: 471:Action : Reduce rule [feature_list -> epsilon] with [None] and goto state 48
   yacc.py: 506:Result : <list @ 0x7ff028d090c8> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 430:Defaulted state 48: Reduce using 16
   yacc.py: 435:Stack  : class type ocur def_func semi feature_list . LexToken(ccur,'}',7,132)
   yacc.py: 471:Action : Reduce rule [feature_list -> def_func semi feature_list] with [<FuncDeclarationNode @ 0x7ff028e501d0>,';',[]] and goto state 14
   yacc.py: 506:Result : <list @ 0x7ff028d092c8> ([<tools.ast.FuncDeclarationNode object a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 14
   yacc.py: 435:Stack  : class type ocur feature_list . LexToken(ccur,'}',7,132)
   yacc.py: 445:Action : Shift and goto state 25
   yacc.py: 410:
   yacc.py: 411:State  : 25
   yacc.py: 435:Stack  : class type ocur feature_list ccur . LexToken(semi,';',7,133)
   yacc.py: 445:Action : Shift and goto state 38
   yacc.py: 410:
   yacc.py: 411:State  : 38
   yacc.py: 435:Stack  : class type ocur feature_list ccur semi . LexToken(class,'class',9,136)
   yacc.py: 471:Action : Reduce rule [def_class -> class type ocur feature_list ccur semi] with ['class','Main','{',<list @ 0x7ff028d092c8>,'}',';'] and goto state 3
   yacc.py: 506:Result : <ClassDeclarationNode @ 0x7ff028dfe080> (<tools.ast.ClassDeclarationNode object a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 3
   yacc.py: 435:Stack  : def_class . LexToken(class,'class',9,136)
   yacc.py: 445:Action : Shift and goto state 5
   yacc.py: 410:
   yacc.py: 411:State  : 5
   yacc.py: 435:Stack  : def_class class . LexToken(type,'Test',9,142)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 435:Stack  : def_class class type . LexToken(ocur,'{',9,147)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
   yacc.py: 435:Stack  : def_class class type ocur . LexToken(id,'test1',10,153)
   yacc.py: 445:Action : Shift and goto state 19
   yacc.py: 410:
   yacc.py: 411:State  : 19
   yacc.py: 435:Stack  : def_class class type ocur id . LexToken(colon,':',10,158)
   yacc.py: 445:Action : Shift and goto state 31
   yacc.py: 410:
   yacc.py: 411:State  : 31
   yacc.py: 435:Stack  : def_class class type ocur id colon . LexToken(type,'Object',10,160)
   yacc.py: 445:Action : Shift and goto state 49
   yacc.py: 410:
   yacc.py: 411:State  : 49
   yacc.py: 435:Stack  : def_class class type ocur id colon type . LexToken(semi,';',10,166)
   yacc.py: 471:Action : Reduce rule [def_attr -> id colon type] with ['test1',':','Object'] and goto state 17
   yacc.py: 506:Result : <AttrDeclarationNode @ 0x7ff028dfe550> (<tools.ast.AttrDeclarationNode object at ...)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 435:Stack  : def_class class type ocur def_attr . LexToken(semi,';',10,166)
   yacc.py: 445:Action : Shift and goto state 29
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi . LexToken(id,'testing1',12,177)
   yacc.py: 445:Action : Shift and goto state 19
   yacc.py: 410:
   yacc.py: 411:State  : 19
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi id . LexToken(opar,'(',12,185)
   yacc.py: 445:Action : Shift and goto state 32
   yacc.py: 410:
   yacc.py: 411:State  : 32
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi id opar . LexToken(cpar,')',12,186)
   yacc.py: 474:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x55810cd760f0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 430:Defaulted state 45: Reduce using 34
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi id opar epsilon . LexToken(cpar,')',12,186)
   yacc.py: 471:Action : Reduce rule [param_list_empty -> epsilon] with [None] and goto state 43
   yacc.py: 506:Result : <list @ 0x7ff028d08c88> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 43
   yacc.py: 430:Defaulted state 43: Reduce using 31
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi id opar param_list_empty . LexToken(cpar,')',12,186)
   yacc.py: 471:Action : Reduce rule [formals -> param_list_empty] with [[]] and goto state 51
   yacc.py: 506:Result : <list @ 0x7ff028d08c88> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi id opar formals . LexToken(cpar,')',12,186)
   yacc.py: 445:Action : Shift and goto state 64
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi id opar formals cpar . LexToken(colon,':',12,187)
   yacc.py: 445:Action : Shift and goto state 100
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi id opar formals cpar colon . LexToken(type,'Int',12,189)
   yacc.py: 445:Action : Shift and goto state 138
   yacc.py: 410:
   yacc.py: 411:State  : 138
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi id opar formals cpar colon type . LexToken(ocur,'{',12,193)
   yacc.py: 445:Action : Shift and goto state 181
   yacc.py: 410:
   yacc.py: 411:State  : 181
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi id opar formals cpar colon type ocur . LexToken(num,2.0,13,203)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi id opar formals cpar colon type ocur num . LexToken(plus,'+',13,205)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [2.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028dfe630> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi id opar formals cpar colon type ocur atom . LexToken(plus,'+',13,205)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028dfe630>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028dfe630> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor . LexToken(plus,'+',13,205)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028dfe630>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028dfe630> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi id opar formals cpar colon type ocur base_call . LexToken(plus,'+',13,205)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7ff028dfe630>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028dfe630> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi id opar formals cpar colon type ocur term . LexToken(plus,'+',13,205)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7ff028dfe630>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028dfe630> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi id opar formals cpar colon type ocur op . LexToken(plus,'+',13,205)
   yacc.py: 445:Action : Shift and goto state 117
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi id opar formals cpar colon type ocur op plus . LexToken(num,2.0,13,207)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi id opar formals cpar colon type ocur op plus num . LexToken(ccur,'}',14,213)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [2.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028dfe898> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi id opar formals cpar colon type ocur op plus atom . LexToken(ccur,'}',14,213)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028dfe898>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028dfe898> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi id opar formals cpar colon type ocur op plus factor . LexToken(ccur,'}',14,213)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028dfe898>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028dfe898> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi id opar formals cpar colon type ocur op plus base_call . LexToken(ccur,'}',14,213)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7ff028dfe898>] and goto state 159
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028dfe898> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi id opar formals cpar colon type ocur op plus term . LexToken(ccur,'}',14,213)
   yacc.py: 471:Action : Reduce rule [op -> op plus term] with [<ConstantNumNode @ 0x7ff028dfe630>,'+',<ConstantNumNode @ 0x7ff028dfe898>] and goto state 74
   yacc.py: 506:Result : <PlusNode @ 0x7ff028e50470> (<tools.ast.PlusNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi id opar formals cpar colon type ocur op . LexToken(ccur,'}',14,213)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<PlusNode @ 0x7ff028e50470>] and goto state 73
   yacc.py: 506:Result : <PlusNode @ 0x7ff028e50470> (<tools.ast.PlusNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi id opar formals cpar colon type ocur comp . LexToken(ccur,'}',14,213)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<PlusNode @ 0x7ff028e50470>] and goto state 206
   yacc.py: 506:Result : <PlusNode @ 0x7ff028e50470> (<tools.ast.PlusNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 206
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi id opar formals cpar colon type ocur expr . LexToken(ccur,'}',14,213)
   yacc.py: 445:Action : Shift and goto state 222
   yacc.py: 410:
   yacc.py: 411:State  : 222
   yacc.py: 430:Defaulted state 222: Reduce using 25
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi id opar formals cpar colon type ocur expr ccur . None
   yacc.py: 471:Action : Reduce rule [def_func -> id opar formals cpar colon type ocur expr ccur] with ['testing1','(',[],')',':','Int','{',<PlusNode @ 0x7ff028e50470>,'}'] and goto state 18
   yacc.py: 506:Result : <FuncDeclarationNode @ 0x7ff028e504e0> (<tools.ast.FuncDeclarationNode object at ...)
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func . LexToken(semi,';',14,214)
   yacc.py: 445:Action : Shift and goto state 30
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi . LexToken(id,'test2',16,221)
   yacc.py: 445:Action : Shift and goto state 19
   yacc.py: 410:
   yacc.py: 411:State  : 19
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi id . LexToken(colon,':',16,226)
   yacc.py: 445:Action : Shift and goto state 31
   yacc.py: 410:
   yacc.py: 411:State  : 31
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi id colon . LexToken(type,'Int',16,228)
   yacc.py: 445:Action : Shift and goto state 49
   yacc.py: 410:
   yacc.py: 411:State  : 49
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi id colon type . LexToken(larrow,'<-',16,232)
   yacc.py: 445:Action : Shift and goto state 62
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi id colon type larrow . LexToken(num,1.0,16,235)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi id colon type larrow num . LexToken(semi,';',16,236)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [1.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028dfe7b8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi id colon type larrow atom . LexToken(semi,';',16,236)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028dfe7b8>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028dfe7b8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi id colon type larrow factor . LexToken(semi,';',16,236)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028dfe7b8>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028dfe7b8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi id colon type larrow base_call . LexToken(semi,';',16,236)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7ff028dfe7b8>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028dfe7b8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi id colon type larrow term . LexToken(semi,';',16,236)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7ff028dfe7b8>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028dfe7b8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi id colon type larrow op . LexToken(semi,';',16,236)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantNumNode @ 0x7ff028dfe7b8>] and goto state 73
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028dfe7b8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi id colon type larrow comp . LexToken(semi,';',16,236)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantNumNode @ 0x7ff028dfe7b8>] and goto state 97
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028dfe7b8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 19
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi id colon type larrow expr . LexToken(semi,';',16,236)
   yacc.py: 471:Action : Reduce rule [def_attr -> id colon type larrow expr] with ['test2',':','Int','<-',<ConstantNumNode @ 0x7ff028dfe7b8>] and goto state 17
   yacc.py: 506:Result : <AttrDeclarationNode @ 0x7ff028dfe5f8> (<tools.ast.AttrDeclarationNode object at ...)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr . LexToken(semi,';',16,236)
   yacc.py: 445:Action : Shift and goto state 29
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi . LexToken(id,'test3',18,243)
   yacc.py: 445:Action : Shift and goto state 19
   yacc.py: 410:
   yacc.py: 411:State  : 19
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi id . LexToken(colon,':',18,248)
   yacc.py: 445:Action : Shift and goto state 31
   yacc.py: 410:
   yacc.py: 411:State  : 31
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi id colon . LexToken(type,'String',18,250)
   yacc.py: 445:Action : Shift and goto state 49
   yacc.py: 410:
   yacc.py: 411:State  : 49
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi id colon type . LexToken(larrow,'<-',18,257)
   yacc.py: 445:Action : Shift and goto state 62
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi id colon type larrow . LexToken(string,'1',18,262)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi id colon type larrow string . LexToken(semi,';',18,263)
   yacc.py: 471:Action : Reduce rule [atom -> string] with ['1'] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028dfe710> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi id colon type larrow atom . LexToken(semi,';',18,263)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7ff028dfe710>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028dfe710> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi id colon type larrow factor . LexToken(semi,';',18,263)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantStrNode @ 0x7ff028dfe710>] and goto state 76
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028dfe710> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi id colon type larrow base_call . LexToken(semi,';',18,263)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantStrNode @ 0x7ff028dfe710>] and goto state 75
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028dfe710> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi id colon type larrow term . LexToken(semi,';',18,263)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantStrNode @ 0x7ff028dfe710>] and goto state 74
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028dfe710> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi id colon type larrow op . LexToken(semi,';',18,263)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantStrNode @ 0x7ff028dfe710>] and goto state 73
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028dfe710> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi id colon type larrow comp . LexToken(semi,';',18,263)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantStrNode @ 0x7ff028dfe710>] and goto state 97
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028dfe710> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 19
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi id colon type larrow expr . LexToken(semi,';',18,263)
   yacc.py: 471:Action : Reduce rule [def_attr -> id colon type larrow expr] with ['test3',':','String','<-',<ConstantStrNode @ 0x7ff028dfe710>] and goto state 17
   yacc.py: 506:Result : <AttrDeclarationNode @ 0x7ff028e506d8> (<tools.ast.AttrDeclarationNode object at ...)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr . LexToken(semi,';',18,263)
   yacc.py: 445:Action : Shift and goto state 29
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi . LexToken(id,'testing2',20,270)
   yacc.py: 445:Action : Shift and goto state 19
   yacc.py: 410:
   yacc.py: 411:State  : 19
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi id . LexToken(opar,'(',20,278)
   yacc.py: 445:Action : Shift and goto state 32
   yacc.py: 410:
   yacc.py: 411:State  : 32
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi id opar . LexToken(id,'a',20,279)
   yacc.py: 445:Action : Shift and goto state 46
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi id opar id . LexToken(colon,':',20,280)
   yacc.py: 445:Action : Shift and goto state 61
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi id opar id colon . LexToken(type,'Alpha',20,282)
   yacc.py: 445:Action : Shift and goto state 96
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi id opar id colon type . LexToken(comma,',',20,287)
   yacc.py: 471:Action : Reduce rule [param -> id colon type] with ['a',':','Alpha'] and goto state 44
   yacc.py: 506:Result : <tuple @ 0x7ff028cccac8> (('a', 'Alpha'))
   yacc.py: 410:
   yacc.py: 411:State  : 44
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi id opar param . LexToken(comma,',',20,287)
   yacc.py: 445:Action : Shift and goto state 60
   yacc.py: 410:
   yacc.py: 411:State  : 60
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi id opar param comma . LexToken(id,'b',20,289)
   yacc.py: 445:Action : Shift and goto state 46
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi id opar param comma id . LexToken(colon,':',20,290)
   yacc.py: 445:Action : Shift and goto state 61
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi id opar param comma id colon . LexToken(type,'Int',20,292)
   yacc.py: 445:Action : Shift and goto state 96
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi id opar param comma id colon type . LexToken(cpar,')',20,295)
   yacc.py: 471:Action : Reduce rule [param -> id colon type] with ['b',':','Int'] and goto state 44
   yacc.py: 506:Result : <tuple @ 0x7ff028ccc548> (('b', 'Int'))
   yacc.py: 410:
   yacc.py: 411:State  : 44
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi id opar param comma param . LexToken(cpar,')',20,295)
   yacc.py: 471:Action : Reduce rule [param_list -> param] with [('b', 'Int')] and goto state 95
   yacc.py: 506:Result : <list @ 0x7ff028d08e88> ([('b', 'Int')])
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 430:Defaulted state 95: Reduce using 33
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi id opar param comma param_list . LexToken(cpar,')',20,295)
   yacc.py: 471:Action : Reduce rule [param_list -> param comma param_list] with [('a', 'Alpha'),',',[('b', 'Int')]] and goto state 42
   yacc.py: 506:Result : <list @ 0x7ff028d09308> ([('a', 'Alpha'), ('b', 'Int')])
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 430:Defaulted state 42: Reduce using 30
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi id opar param_list . LexToken(cpar,')',20,295)
   yacc.py: 471:Action : Reduce rule [formals -> param_list] with [<list @ 0x7ff028d09308>] and goto state 51
   yacc.py: 506:Result : <list @ 0x7ff028d09308> ([('a', 'Alpha'), ('b', 'Int')])
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi id opar formals . LexToken(cpar,')',20,295)
   yacc.py: 445:Action : Shift and goto state 64
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi id opar formals cpar . LexToken(colon,':',20,296)
   yacc.py: 445:Action : Shift and goto state 100
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi id opar formals cpar colon . LexToken(type,'Int',20,298)
   yacc.py: 445:Action : Shift and goto state 138
   yacc.py: 410:
   yacc.py: 411:State  : 138
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi id opar formals cpar colon type . LexToken(ocur,'{',20,302)
   yacc.py: 445:Action : Shift and goto state 181
   yacc.py: 410:
   yacc.py: 411:State  : 181
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi id opar formals cpar colon type ocur . LexToken(num,2.0,21,312)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi id opar formals cpar colon type ocur num . LexToken(plus,'+',21,314)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [2.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50160> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi id opar formals cpar colon type ocur atom . LexToken(plus,'+',21,314)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028e50160>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50160> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi id opar formals cpar colon type ocur factor . LexToken(plus,'+',21,314)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028e50160>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50160> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi id opar formals cpar colon type ocur base_call . LexToken(plus,'+',21,314)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7ff028e50160>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50160> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi id opar formals cpar colon type ocur term . LexToken(plus,'+',21,314)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7ff028e50160>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50160> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi id opar formals cpar colon type ocur op . LexToken(plus,'+',21,314)
   yacc.py: 445:Action : Shift and goto state 117
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi id opar formals cpar colon type ocur op plus . LexToken(num,2.0,21,316)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi id opar formals cpar colon type ocur op plus num . LexToken(ccur,'}',22,322)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [2.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e507b8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi id opar formals cpar colon type ocur op plus atom . LexToken(ccur,'}',22,322)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028e507b8>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e507b8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi id opar formals cpar colon type ocur op plus factor . LexToken(ccur,'}',22,322)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028e507b8>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e507b8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi id opar formals cpar colon type ocur op plus base_call . LexToken(ccur,'}',22,322)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7ff028e507b8>] and goto state 159
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e507b8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi id opar formals cpar colon type ocur op plus term . LexToken(ccur,'}',22,322)
   yacc.py: 471:Action : Reduce rule [op -> op plus term] with [<ConstantNumNode @ 0x7ff028e50160>,'+',<ConstantNumNode @ 0x7ff028e507b8>] and goto state 74
   yacc.py: 506:Result : <PlusNode @ 0x7ff028e50908> (<tools.ast.PlusNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi id opar formals cpar colon type ocur op . LexToken(ccur,'}',22,322)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<PlusNode @ 0x7ff028e50908>] and goto state 73
   yacc.py: 506:Result : <PlusNode @ 0x7ff028e50908> (<tools.ast.PlusNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi id opar formals cpar colon type ocur comp . LexToken(ccur,'}',22,322)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<PlusNode @ 0x7ff028e50908>] and goto state 206
   yacc.py: 506:Result : <PlusNode @ 0x7ff028e50908> (<tools.ast.PlusNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 206
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi id opar formals cpar colon type ocur expr . LexToken(ccur,'}',22,322)
   yacc.py: 445:Action : Shift and goto state 222
   yacc.py: 410:
   yacc.py: 411:State  : 222
   yacc.py: 430:Defaulted state 222: Reduce using 25
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi id opar formals cpar colon type ocur expr ccur . None
   yacc.py: 471:Action : Reduce rule [def_func -> id opar formals cpar colon type ocur expr ccur] with ['testing2','(',<list @ 0x7ff028d09308>,')',':','Int','{',<PlusNode @ 0x7ff028e50908>,'}'] and goto state 18
   yacc.py: 506:Result : <FuncDeclarationNode @ 0x7ff028e50978> (<tools.ast.FuncDeclarationNode object at ...)
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func . LexToken(semi,';',22,323)
   yacc.py: 445:Action : Shift and goto state 30
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi . LexToken(id,'testing3',24,330)
   yacc.py: 445:Action : Shift and goto state 19
   yacc.py: 410:
   yacc.py: 411:State  : 19
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi id . LexToken(opar,'(',24,338)
   yacc.py: 445:Action : Shift and goto state 32
   yacc.py: 410:
   yacc.py: 411:State  : 32
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi id opar . LexToken(cpar,')',24,339)
   yacc.py: 474:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x55810cd760f0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 430:Defaulted state 45: Reduce using 34
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi id opar epsilon . LexToken(cpar,')',24,339)
   yacc.py: 471:Action : Reduce rule [param_list_empty -> epsilon] with [None] and goto state 43
   yacc.py: 506:Result : <list @ 0x7ff028d090c8> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 43
   yacc.py: 430:Defaulted state 43: Reduce using 31
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi id opar param_list_empty . LexToken(cpar,')',24,339)
   yacc.py: 471:Action : Reduce rule [formals -> param_list_empty] with [[]] and goto state 51
   yacc.py: 506:Result : <list @ 0x7ff028d090c8> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi id opar formals . LexToken(cpar,')',24,339)
   yacc.py: 445:Action : Shift and goto state 64
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi id opar formals cpar . LexToken(colon,':',24,340)
   yacc.py: 445:Action : Shift and goto state 100
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi id opar formals cpar colon . LexToken(type,'String',24,342)
   yacc.py: 445:Action : Shift and goto state 138
   yacc.py: 410:
   yacc.py: 411:State  : 138
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi id opar formals cpar colon type . LexToken(ocur,'{',24,349)
   yacc.py: 445:Action : Shift and goto state 181
   yacc.py: 410:
   yacc.py: 411:State  : 181
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi id opar formals cpar colon type ocur . LexToken(string,'2 + 2',25,365)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi id opar formals cpar colon type ocur string . LexToken(ccur,'}',26,371)
   yacc.py: 471:Action : Reduce rule [atom -> string] with ['2 + 2'] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028e505c0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi id opar formals cpar colon type ocur atom . LexToken(ccur,'}',26,371)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7ff028e505c0>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028e505c0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi id opar formals cpar colon type ocur factor . LexToken(ccur,'}',26,371)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantStrNode @ 0x7ff028e505c0>] and goto state 76
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028e505c0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi id opar formals cpar colon type ocur base_call . LexToken(ccur,'}',26,371)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantStrNode @ 0x7ff028e505c0>] and goto state 75
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028e505c0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi id opar formals cpar colon type ocur term . LexToken(ccur,'}',26,371)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantStrNode @ 0x7ff028e505c0>] and goto state 74
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028e505c0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi id opar formals cpar colon type ocur op . LexToken(ccur,'}',26,371)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantStrNode @ 0x7ff028e505c0>] and goto state 73
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028e505c0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi id opar formals cpar colon type ocur comp . LexToken(ccur,'}',26,371)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantStrNode @ 0x7ff028e505c0>] and goto state 206
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028e505c0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 206
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi id opar formals cpar colon type ocur expr . LexToken(ccur,'}',26,371)
   yacc.py: 445:Action : Shift and goto state 222
   yacc.py: 410:
   yacc.py: 411:State  : 222
   yacc.py: 430:Defaulted state 222: Reduce using 25
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi id opar formals cpar colon type ocur expr ccur . None
   yacc.py: 471:Action : Reduce rule [def_func -> id opar formals cpar colon type ocur expr ccur] with ['testing3','(',[],')',':','String','{',<ConstantStrNode @ 0x7ff028e505c0>,'}'] and goto state 18
   yacc.py: 506:Result : <FuncDeclarationNode @ 0x7ff028e508d0> (<tools.ast.FuncDeclarationNode object at ...)
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func . LexToken(semi,';',26,372)
   yacc.py: 445:Action : Shift and goto state 30
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi . LexToken(id,'testing4',28,379)
   yacc.py: 445:Action : Shift and goto state 19
   yacc.py: 410:
   yacc.py: 411:State  : 19
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi id . LexToken(opar,'(',28,387)
   yacc.py: 445:Action : Shift and goto state 32
   yacc.py: 410:
   yacc.py: 411:State  : 32
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi id opar . LexToken(id,'x',28,388)
   yacc.py: 445:Action : Shift and goto state 46
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi id opar id . LexToken(colon,':',28,389)
   yacc.py: 445:Action : Shift and goto state 61
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi id opar id colon . LexToken(type,'Int',28,391)
   yacc.py: 445:Action : Shift and goto state 96
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi id opar id colon type . LexToken(comma,',',28,394)
   yacc.py: 471:Action : Reduce rule [param -> id colon type] with ['x',':','Int'] and goto state 44
   yacc.py: 506:Result : <tuple @ 0x7ff028ccca08> (('x', 'Int'))
   yacc.py: 410:
   yacc.py: 411:State  : 44
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi id opar param . LexToken(comma,',',28,394)
   yacc.py: 445:Action : Shift and goto state 60
   yacc.py: 410:
   yacc.py: 411:State  : 60
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi id opar param comma . LexToken(id,'y',28,396)
   yacc.py: 445:Action : Shift and goto state 46
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi id opar param comma id . LexToken(colon,':',28,397)
   yacc.py: 445:Action : Shift and goto state 61
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi id opar param comma id colon . LexToken(type,'Int',28,399)
   yacc.py: 445:Action : Shift and goto state 96
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi id opar param comma id colon type . LexToken(cpar,')',28,402)
   yacc.py: 471:Action : Reduce rule [param -> id colon type] with ['y',':','Int'] and goto state 44
   yacc.py: 506:Result : <tuple @ 0x7ff028ccc848> (('y', 'Int'))
   yacc.py: 410:
   yacc.py: 411:State  : 44
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi id opar param comma param . LexToken(cpar,')',28,402)
   yacc.py: 471:Action : Reduce rule [param_list -> param] with [('y', 'Int')] and goto state 95
   yacc.py: 506:Result : <list @ 0x7ff028d09108> ([('y', 'Int')])
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 430:Defaulted state 95: Reduce using 33
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi id opar param comma param_list . LexToken(cpar,')',28,402)
   yacc.py: 471:Action : Reduce rule [param_list -> param comma param_list] with [('x', 'Int'),',',[('y', 'Int')]] and goto state 42
   yacc.py: 506:Result : <list @ 0x7ff028d09508> ([('x', 'Int'), ('y', 'Int')])
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 430:Defaulted state 42: Reduce using 30
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi id opar param_list . LexToken(cpar,')',28,402)
   yacc.py: 471:Action : Reduce rule [formals -> param_list] with [<list @ 0x7ff028d09508>] and goto state 51
   yacc.py: 506:Result : <list @ 0x7ff028d09508> ([('x', 'Int'), ('y', 'Int')])
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi id opar formals . LexToken(cpar,')',28,402)
   yacc.py: 445:Action : Shift and goto state 64
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi id opar formals cpar . LexToken(colon,':',28,403)
   yacc.py: 445:Action : Shift and goto state 100
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi id opar formals cpar colon . LexToken(type,'Test',28,405)
   yacc.py: 445:Action : Shift and goto state 138
   yacc.py: 410:
   yacc.py: 411:State  : 138
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi id opar formals cpar colon type . LexToken(ocur,'{',28,410)
   yacc.py: 445:Action : Shift and goto state 181
   yacc.py: 410:
   yacc.py: 411:State  : 181
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur . LexToken(id,'self',29,420)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur id . LexToken(ccur,'}',30,429)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['self'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7ff028e50438> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur atom . LexToken(ccur,'}',30,429)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7ff028e50438>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7ff028e50438> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor . LexToken(ccur,'}',30,429)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7ff028e50438>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7ff028e50438> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur base_call . LexToken(ccur,'}',30,429)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7ff028e50438>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7ff028e50438> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur term . LexToken(ccur,'}',30,429)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7ff028e50438>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7ff028e50438> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur op . LexToken(ccur,'}',30,429)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<VariableNode @ 0x7ff028e50438>] and goto state 73
   yacc.py: 506:Result : <VariableNode @ 0x7ff028e50438> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur comp . LexToken(ccur,'}',30,429)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<VariableNode @ 0x7ff028e50438>] and goto state 206
   yacc.py: 506:Result : <VariableNode @ 0x7ff028e50438> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 206
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur expr . LexToken(ccur,'}',30,429)
   yacc.py: 445:Action : Shift and goto state 222
   yacc.py: 410:
   yacc.py: 411:State  : 222
   yacc.py: 430:Defaulted state 222: Reduce using 25
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur expr ccur . None
   yacc.py: 471:Action : Reduce rule [def_func -> id opar formals cpar colon type ocur expr ccur] with ['testing4','(',<list @ 0x7ff028d09508>,')',':','Test','{',<VariableNode @ 0x7ff028e50438>,'}'] and goto state 18
   yacc.py: 506:Result : <FuncDeclarationNode @ 0x7ff028e50a20> (<tools.ast.FuncDeclarationNode object at ...)
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func . LexToken(semi,';',30,430)
   yacc.py: 445:Action : Shift and goto state 30
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi . LexToken(id,'testing5',32,437)
   yacc.py: 445:Action : Shift and goto state 19
   yacc.py: 410:
   yacc.py: 411:State  : 19
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id . LexToken(opar,'(',32,445)
   yacc.py: 445:Action : Shift and goto state 32
   yacc.py: 410:
   yacc.py: 411:State  : 32
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar . LexToken(id,'a',32,446)
   yacc.py: 445:Action : Shift and goto state 46
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar id . LexToken(colon,':',32,447)
   yacc.py: 445:Action : Shift and goto state 61
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar id colon . LexToken(type,'String',32,449)
   yacc.py: 445:Action : Shift and goto state 96
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar id colon type . LexToken(comma,',',32,455)
   yacc.py: 471:Action : Reduce rule [param -> id colon type] with ['a',':','String'] and goto state 44
   yacc.py: 506:Result : <tuple @ 0x7ff028cccfc8> (('a', 'String'))
   yacc.py: 410:
   yacc.py: 411:State  : 44
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar param . LexToken(comma,',',32,455)
   yacc.py: 445:Action : Shift and goto state 60
   yacc.py: 410:
   yacc.py: 411:State  : 60
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar param comma . LexToken(id,'b',32,457)
   yacc.py: 445:Action : Shift and goto state 46
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar param comma id . LexToken(colon,':',32,458)
   yacc.py: 445:Action : Shift and goto state 61
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar param comma id colon . LexToken(type,'String',32,460)
   yacc.py: 445:Action : Shift and goto state 96
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar param comma id colon type . LexToken(cpar,')',32,466)
   yacc.py: 471:Action : Reduce rule [param -> id colon type] with ['b',':','String'] and goto state 44
   yacc.py: 506:Result : <tuple @ 0x7ff028ccc5c8> (('b', 'String'))
   yacc.py: 410:
   yacc.py: 411:State  : 44
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar param comma param . LexToken(cpar,')',32,466)
   yacc.py: 471:Action : Reduce rule [param_list -> param] with [('b', 'String')] and goto state 95
   yacc.py: 506:Result : <list @ 0x7ff028d08e88> ([('b', 'String')])
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 430:Defaulted state 95: Reduce using 33
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar param comma param_list . LexToken(cpar,')',32,466)
   yacc.py: 471:Action : Reduce rule [param_list -> param comma param_list] with [('a', 'String'),',',<list @ 0x7ff028d08e88>] and goto state 42
   yacc.py: 506:Result : <list @ 0x7ff028d096c8> ([('a', 'String'), ('b', 'String')])
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 430:Defaulted state 42: Reduce using 30
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar param_list . LexToken(cpar,')',32,466)
   yacc.py: 471:Action : Reduce rule [formals -> param_list] with [<list @ 0x7ff028d096c8>] and goto state 51
   yacc.py: 506:Result : <list @ 0x7ff028d096c8> ([('a', 'String'), ('b', 'String')])
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals . LexToken(cpar,')',32,466)
   yacc.py: 445:Action : Shift and goto state 64
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar . LexToken(colon,':',32,467)
   yacc.py: 445:Action : Shift and goto state 100
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon . LexToken(type,'IO',32,469)
   yacc.py: 445:Action : Shift and goto state 138
   yacc.py: 410:
   yacc.py: 411:State  : 138
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type . LexToken(ocur,'{',32,472)
   yacc.py: 445:Action : Shift and goto state 181
   yacc.py: 410:
   yacc.py: 411:State  : 181
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur . LexToken(if,'If',33,482)
   yacc.py: 445:Action : Shift and goto state 86
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if . LexToken(id,'a',33,485)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if id . LexToken(dot,'.',33,486)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['a'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7ff028e509e8> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if atom . LexToken(dot,'.',33,486)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7ff028e509e8>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7ff028e509e8> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if factor . LexToken(dot,'.',33,486)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if factor dot . LexToken(id,'length',33,487)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if factor dot id . LexToken(opar,'(',33,493)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if factor dot id opar . LexToken(cpar,')',33,494)
   yacc.py: 474:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 150
   yacc.py: 548:Result : <NoneType @ 0x55810cd760f0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 150
   yacc.py: 430:Defaulted state 150: Reduce using 96
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if factor dot id opar epsilon . LexToken(cpar,')',33,494)
   yacc.py: 471:Action : Reduce rule [arg_list_empty -> epsilon] with [None] and goto state 149
   yacc.py: 506:Result : <list @ 0x7ff028d094c8> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 430:Defaulted state 149: Reduce using 92
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if factor dot id opar arg_list_empty . LexToken(cpar,')',33,494)
   yacc.py: 471:Action : Reduce rule [args -> arg_list_empty] with [[]] and goto state 153
   yacc.py: 506:Result : <list @ 0x7ff028d094c8> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if factor dot id opar args . LexToken(cpar,')',33,494)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if factor dot id opar args cpar . LexToken(less,'<',33,496)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['length','(',[],')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7ff028cccb48> (('length', []))
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if factor dot func_call . LexToken(less,'<',33,496)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<VariableNode @ 0x7ff028e509e8>,'.',('length', [])] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7ff028e50e48> (<tools.ast.CallNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if factor . LexToken(less,'<',33,496)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<CallNode @ 0x7ff028e50e48>] and goto state 76
   yacc.py: 506:Result : <CallNode @ 0x7ff028e50e48> (<tools.ast.CallNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if base_call . LexToken(less,'<',33,496)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<CallNode @ 0x7ff028e50e48>] and goto state 75
   yacc.py: 506:Result : <CallNode @ 0x7ff028e50e48> (<tools.ast.CallNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if term . LexToken(less,'<',33,496)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<CallNode @ 0x7ff028e50e48>] and goto state 74
   yacc.py: 506:Result : <CallNode @ 0x7ff028e50e48> (<tools.ast.CallNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if op . LexToken(less,'<',33,496)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<CallNode @ 0x7ff028e50e48>] and goto state 73
   yacc.py: 506:Result : <CallNode @ 0x7ff028e50e48> (<tools.ast.CallNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if comp . LexToken(less,'<',33,496)
   yacc.py: 445:Action : Shift and goto state 114
   yacc.py: 410:
   yacc.py: 411:State  : 114
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if comp less . LexToken(id,'b',33,498)
   yacc.py: 445:Action : Shift and goto state 126
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if comp less id . LexToken(dot,'.',33,499)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['b'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7ff028e50860> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if comp less atom . LexToken(dot,'.',33,499)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7ff028e50860>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7ff028e50860> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if comp less factor . LexToken(dot,'.',33,499)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if comp less factor dot . LexToken(id,'length',33,500)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if comp less factor dot id . LexToken(opar,'(',33,506)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if comp less factor dot id opar . LexToken(cpar,')',33,507)
   yacc.py: 474:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 150
   yacc.py: 548:Result : <NoneType @ 0x55810cd760f0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 150
   yacc.py: 430:Defaulted state 150: Reduce using 96
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if comp less factor dot id opar epsilon . LexToken(cpar,')',33,507)
   yacc.py: 471:Action : Reduce rule [arg_list_empty -> epsilon] with [None] and goto state 149
   yacc.py: 506:Result : <list @ 0x7ff028d09708> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 430:Defaulted state 149: Reduce using 92
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if comp less factor dot id opar arg_list_empty . LexToken(cpar,')',33,507)
   yacc.py: 471:Action : Reduce rule [args -> arg_list_empty] with [[]] and goto state 153
   yacc.py: 506:Result : <list @ 0x7ff028d09708> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if comp less factor dot id opar args . LexToken(cpar,')',33,507)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if comp less factor dot id opar args cpar . LexToken(then,'THeN',33,509)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['length','(',[],')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7ff028cccb48> (('length', []))
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if comp less factor dot func_call . LexToken(then,'THeN',33,509)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<VariableNode @ 0x7ff028e50860>,'.',('length', [])] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7ff028e50eb8> (<tools.ast.CallNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if comp less factor . LexToken(then,'THeN',33,509)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<CallNode @ 0x7ff028e50eb8>] and goto state 76
   yacc.py: 506:Result : <CallNode @ 0x7ff028e50eb8> (<tools.ast.CallNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if comp less base_call . LexToken(then,'THeN',33,509)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<CallNode @ 0x7ff028e50eb8>] and goto state 75
   yacc.py: 506:Result : <CallNode @ 0x7ff028e50eb8> (<tools.ast.CallNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if comp less term . LexToken(then,'THeN',33,509)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<CallNode @ 0x7ff028e50eb8>] and goto state 156
   yacc.py: 506:Result : <CallNode @ 0x7ff028e50eb8> (<tools.ast.CallNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 156
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if comp less op . LexToken(then,'THeN',33,509)
   yacc.py: 471:Action : Reduce rule [comp -> comp less op] with [<CallNode @ 0x7ff028e50e48>,'<',<CallNode @ 0x7ff028e50eb8>] and goto state 73
   yacc.py: 506:Result : <LessNode @ 0x7ff028e50fd0> (<tools.ast.LessNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if comp . LexToken(then,'THeN',33,509)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<LessNode @ 0x7ff028e50fd0>] and goto state 132
   yacc.py: 506:Result : <LessNode @ 0x7ff028e50fd0> (<tools.ast.LessNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr . LexToken(then,'THeN',33,509)
   yacc.py: 445:Action : Shift and goto state 175
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then . LexToken(new,'new',34,526)
   yacc.py: 445:Action : Shift and goto state 89
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then new . LexToken(type,'IO',34,530)
   yacc.py: 445:Action : Shift and goto state 134
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then new type . LexToken(dot,'.',34,532)
   yacc.py: 471:Action : Reduce rule [atom -> new type] with ['new','IO'] and goto state 79
   yacc.py: 506:Result : <InstantiateNode @ 0x7ff028e50ef0> (<tools.ast.InstantiateNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then atom . LexToken(dot,'.',34,532)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<InstantiateNode @ 0x7ff028e50ef0>] and goto state 77
   yacc.py: 506:Result : <InstantiateNode @ 0x7ff028e50ef0> (<tools.ast.InstantiateNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor . LexToken(dot,'.',34,532)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot . LexToken(id,'out_string',34,533)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id . LexToken(opar,'(',34,543)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar . LexToken(string,'La cadena "',34,557)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar string . LexToken(dot,'.',34,558)
   yacc.py: 471:Action : Reduce rule [atom -> string] with ['La cadena "'] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028e50e80> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar atom . LexToken(dot,'.',34,558)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7ff028e50e80>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028e50e80> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor . LexToken(dot,'.',34,558)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot . LexToken(id,'concat',34,559)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id . LexToken(opar,'(',34,565)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar . LexToken(id,'b',34,566)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar id . LexToken(cpar,')',34,567)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['b'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7ff028e50f28> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar atom . LexToken(cpar,')',34,567)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7ff028e50f28>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7ff028e50f28> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar factor . LexToken(cpar,')',34,567)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7ff028e50f28>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7ff028e50f28> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar base_call . LexToken(cpar,')',34,567)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7ff028e50f28>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7ff028e50f28> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar term . LexToken(cpar,')',34,567)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7ff028e50f28>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7ff028e50f28> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar op . LexToken(cpar,')',34,567)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<VariableNode @ 0x7ff028e50f28>] and goto state 73
   yacc.py: 506:Result : <VariableNode @ 0x7ff028e50f28> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar comp . LexToken(cpar,')',34,567)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<VariableNode @ 0x7ff028e50f28>] and goto state 155
   yacc.py: 506:Result : <VariableNode @ 0x7ff028e50f28> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar expr . LexToken(cpar,')',34,567)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<VariableNode @ 0x7ff028e50f28>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7ff028d08e88> ([<tools.ast.VariableNode object at 0x7ff ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar arg_list . LexToken(cpar,')',34,567)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7ff028d08e88>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7ff028d08e88> ([<tools.ast.VariableNode object at 0x7ff ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar args . LexToken(cpar,')',34,567)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar args cpar . LexToken(dot,'.',34,568)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['concat','(',<list @ 0x7ff028d08e88>,')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7ff028cccb48> (('concat', [<tools.ast.VariableNode obje ...)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot func_call . LexToken(dot,'.',34,568)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<ConstantStrNode @ 0x7ff028e50e80>,'.',<tuple @ 0x7ff028cccb48>] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7ff028d00240> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor . LexToken(dot,'.',34,568)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot . LexToken(id,'concat',34,569)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id . LexToken(opar,'(',34,575)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar . LexToken(string,'" es mas larga que la cadena "',34,609)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar string . LexToken(cpar,')',34,610)
   yacc.py: 471:Action : Reduce rule [atom -> string] with [<str @ 0x7ff028e1da30>] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d001d0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar atom . LexToken(cpar,')',34,610)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7ff028d001d0>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d001d0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar factor . LexToken(cpar,')',34,610)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantStrNode @ 0x7ff028d001d0>] and goto state 76
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d001d0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar base_call . LexToken(cpar,')',34,610)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantStrNode @ 0x7ff028d001d0>] and goto state 75
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d001d0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar term . LexToken(cpar,')',34,610)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantStrNode @ 0x7ff028d001d0>] and goto state 74
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d001d0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar op . LexToken(cpar,')',34,610)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantStrNode @ 0x7ff028d001d0>] and goto state 73
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d001d0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar comp . LexToken(cpar,')',34,610)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantStrNode @ 0x7ff028d001d0>] and goto state 155
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d001d0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar expr . LexToken(cpar,')',34,610)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<ConstantStrNode @ 0x7ff028d001d0>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7ff028d09908> ([<tools.ast.ConstantStrNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar arg_list . LexToken(cpar,')',34,610)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7ff028d09908>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7ff028d09908> ([<tools.ast.ConstantStrNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar args . LexToken(cpar,')',34,610)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar args cpar . LexToken(dot,'.',34,611)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['concat','(',<list @ 0x7ff028d09908>,')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7ff028cccb48> (('concat', [<tools.ast.ConstantStrNode o ...)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot func_call . LexToken(dot,'.',34,611)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<CallNode @ 0x7ff028d00240>,'.',<tuple @ 0x7ff028cccb48>] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7ff028d002b0> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor . LexToken(dot,'.',34,611)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot . LexToken(id,'concat',34,612)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id . LexToken(opar,'(',34,618)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar . LexToken(id,'a',34,619)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar id . LexToken(cpar,')',34,620)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['a'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d00320> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar atom . LexToken(cpar,')',34,620)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7ff028d00320>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d00320> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar factor . LexToken(cpar,')',34,620)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7ff028d00320>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d00320> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar base_call . LexToken(cpar,')',34,620)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7ff028d00320>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d00320> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar term . LexToken(cpar,')',34,620)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7ff028d00320>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d00320> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar op . LexToken(cpar,')',34,620)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<VariableNode @ 0x7ff028d00320>] and goto state 73
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d00320> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar comp . LexToken(cpar,')',34,620)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<VariableNode @ 0x7ff028d00320>] and goto state 155
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d00320> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar expr . LexToken(cpar,')',34,620)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<VariableNode @ 0x7ff028d00320>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7ff028d09948> ([<tools.ast.VariableNode object at 0x7ff ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar arg_list . LexToken(cpar,')',34,620)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7ff028d09948>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7ff028d09948> ([<tools.ast.VariableNode object at 0x7ff ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar args . LexToken(cpar,')',34,620)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar args cpar . LexToken(dot,'.',34,621)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['concat','(',<list @ 0x7ff028d09948>,')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7ff028cccb48> (('concat', [<tools.ast.VariableNode obje ...)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot func_call . LexToken(dot,'.',34,621)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<CallNode @ 0x7ff028d002b0>,'.',<tuple @ 0x7ff028cccb48>] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7ff028d00400> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor . LexToken(dot,'.',34,621)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot . LexToken(id,'concat',34,622)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id . LexToken(opar,'(',34,628)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar . LexToken(string,'".',34,633)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar string . LexToken(cpar,')',34,634)
   yacc.py: 471:Action : Reduce rule [atom -> string] with ['".'] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d00160> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar atom . LexToken(cpar,')',34,634)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7ff028d00160>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d00160> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar factor . LexToken(cpar,')',34,634)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantStrNode @ 0x7ff028d00160>] and goto state 76
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d00160> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar base_call . LexToken(cpar,')',34,634)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantStrNode @ 0x7ff028d00160>] and goto state 75
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d00160> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar term . LexToken(cpar,')',34,634)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantStrNode @ 0x7ff028d00160>] and goto state 74
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d00160> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar op . LexToken(cpar,')',34,634)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantStrNode @ 0x7ff028d00160>] and goto state 73
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d00160> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar comp . LexToken(cpar,')',34,634)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantStrNode @ 0x7ff028d00160>] and goto state 155
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d00160> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar expr . LexToken(cpar,')',34,634)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<ConstantStrNode @ 0x7ff028d00160>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7ff028d09b88> ([<tools.ast.ConstantStrNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar arg_list . LexToken(cpar,')',34,634)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7ff028d09b88>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7ff028d09b88> ([<tools.ast.ConstantStrNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar args . LexToken(cpar,')',34,634)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot id opar args cpar . LexToken(cpar,')',34,635)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['concat','(',<list @ 0x7ff028d09b88>,')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7ff028cccb48> (('concat', [<tools.ast.ConstantStrNode o ...)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor dot func_call . LexToken(cpar,')',34,635)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<CallNode @ 0x7ff028d00400>,'.',<tuple @ 0x7ff028cccb48>] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7ff028d00470> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar factor . LexToken(cpar,')',34,635)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<CallNode @ 0x7ff028d00470>] and goto state 76
   yacc.py: 506:Result : <CallNode @ 0x7ff028d00470> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar base_call . LexToken(cpar,')',34,635)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<CallNode @ 0x7ff028d00470>] and goto state 75
   yacc.py: 506:Result : <CallNode @ 0x7ff028d00470> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar term . LexToken(cpar,')',34,635)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<CallNode @ 0x7ff028d00470>] and goto state 74
   yacc.py: 506:Result : <CallNode @ 0x7ff028d00470> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar op . LexToken(cpar,')',34,635)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<CallNode @ 0x7ff028d00470>] and goto state 73
   yacc.py: 506:Result : <CallNode @ 0x7ff028d00470> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar comp . LexToken(cpar,')',34,635)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<CallNode @ 0x7ff028d00470>] and goto state 155
   yacc.py: 506:Result : <CallNode @ 0x7ff028d00470> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar expr . LexToken(cpar,')',34,635)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<CallNode @ 0x7ff028d00470>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7ff028d09bc8> ([<tools.ast.CallNode object at 0x7ff028d ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar arg_list . LexToken(cpar,')',34,635)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7ff028d09bc8>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7ff028d09bc8> ([<tools.ast.CallNode object at 0x7ff028d ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar args . LexToken(cpar,')',34,635)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot id opar args cpar . LexToken(else,'eLSe',35,645)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['out_string','(',<list @ 0x7ff028d09bc8>,')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7ff028cccb48> (('out_string', [<tools.ast.CallNode obje ...)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor dot func_call . LexToken(else,'eLSe',35,645)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<InstantiateNode @ 0x7ff028e50ef0>,'.',<tuple @ 0x7ff028cccb48>] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7ff028e50f98> (<tools.ast.CallNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then factor . LexToken(else,'eLSe',35,645)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<CallNode @ 0x7ff028e50f98>] and goto state 76
   yacc.py: 506:Result : <CallNode @ 0x7ff028e50f98> (<tools.ast.CallNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then base_call . LexToken(else,'eLSe',35,645)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<CallNode @ 0x7ff028e50f98>] and goto state 75
   yacc.py: 506:Result : <CallNode @ 0x7ff028e50f98> (<tools.ast.CallNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then term . LexToken(else,'eLSe',35,645)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<CallNode @ 0x7ff028e50f98>] and goto state 74
   yacc.py: 506:Result : <CallNode @ 0x7ff028e50f98> (<tools.ast.CallNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then op . LexToken(else,'eLSe',35,645)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<CallNode @ 0x7ff028e50f98>] and goto state 73
   yacc.py: 506:Result : <CallNode @ 0x7ff028e50f98> (<tools.ast.CallNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then comp . LexToken(else,'eLSe',35,645)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<CallNode @ 0x7ff028e50f98>] and goto state 203
   yacc.py: 506:Result : <CallNode @ 0x7ff028e50f98> (<tools.ast.CallNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 203
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr . LexToken(else,'eLSe',35,645)
   yacc.py: 445:Action : Shift and goto state 219
   yacc.py: 410:
   yacc.py: 411:State  : 219
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else . LexToken(if,'if',36,662)
   yacc.py: 445:Action : Shift and goto state 86
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if . LexToken(id,'a',36,665)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if id . LexToken(dot,'.',36,666)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['a'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7ff028e50e10> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if atom . LexToken(dot,'.',36,666)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7ff028e50e10>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7ff028e50e10> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if factor . LexToken(dot,'.',36,666)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if factor dot . LexToken(id,'length',36,667)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if factor dot id . LexToken(opar,'(',36,673)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if factor dot id opar . LexToken(cpar,')',36,674)
   yacc.py: 474:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 150
   yacc.py: 548:Result : <NoneType @ 0x55810cd760f0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 150
   yacc.py: 430:Defaulted state 150: Reduce using 96
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if factor dot id opar epsilon . LexToken(cpar,')',36,674)
   yacc.py: 471:Action : Reduce rule [arg_list_empty -> epsilon] with [None] and goto state 149
   yacc.py: 506:Result : <list @ 0x7ff028d098c8> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 430:Defaulted state 149: Reduce using 92
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if factor dot id opar arg_list_empty . LexToken(cpar,')',36,674)
   yacc.py: 471:Action : Reduce rule [args -> arg_list_empty] with [[]] and goto state 153
   yacc.py: 506:Result : <list @ 0x7ff028d098c8> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if factor dot id opar args . LexToken(cpar,')',36,674)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if factor dot id opar args cpar . LexToken(equal,'=',36,676)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['length','(',[],')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7ff028cccb48> (('length', []))
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if factor dot func_call . LexToken(equal,'=',36,676)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<VariableNode @ 0x7ff028e50e10>,'.',('length', [])] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7ff028d004e0> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if factor . LexToken(equal,'=',36,676)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<CallNode @ 0x7ff028d004e0>] and goto state 76
   yacc.py: 506:Result : <CallNode @ 0x7ff028d004e0> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if base_call . LexToken(equal,'=',36,676)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<CallNode @ 0x7ff028d004e0>] and goto state 75
   yacc.py: 506:Result : <CallNode @ 0x7ff028d004e0> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if term . LexToken(equal,'=',36,676)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<CallNode @ 0x7ff028d004e0>] and goto state 74
   yacc.py: 506:Result : <CallNode @ 0x7ff028d004e0> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if op . LexToken(equal,'=',36,676)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<CallNode @ 0x7ff028d004e0>] and goto state 73
   yacc.py: 506:Result : <CallNode @ 0x7ff028d004e0> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if comp . LexToken(equal,'=',36,676)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if comp equal . LexToken(id,'b',36,678)
   yacc.py: 445:Action : Shift and goto state 126
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if comp equal id . LexToken(dot,'.',36,679)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['b'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d00438> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if comp equal atom . LexToken(dot,'.',36,679)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7ff028d00438>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d00438> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if comp equal factor . LexToken(dot,'.',36,679)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if comp equal factor dot . LexToken(id,'length',36,680)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if comp equal factor dot id . LexToken(opar,'(',36,686)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if comp equal factor dot id opar . LexToken(cpar,')',36,687)
   yacc.py: 474:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 150
   yacc.py: 548:Result : <NoneType @ 0x55810cd760f0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 150
   yacc.py: 430:Defaulted state 150: Reduce using 96
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if comp equal factor dot id opar epsilon . LexToken(cpar,')',36,687)
   yacc.py: 471:Action : Reduce rule [arg_list_empty -> epsilon] with [None] and goto state 149
   yacc.py: 506:Result : <list @ 0x7ff028d09e08> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 430:Defaulted state 149: Reduce using 92
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if comp equal factor dot id opar arg_list_empty . LexToken(cpar,')',36,687)
   yacc.py: 471:Action : Reduce rule [args -> arg_list_empty] with [[]] and goto state 153
   yacc.py: 506:Result : <list @ 0x7ff028d09e08> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if comp equal factor dot id opar args . LexToken(cpar,')',36,687)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if comp equal factor dot id opar args cpar . LexToken(then,'THeN',36,689)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['length','(',[],')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7ff028cccb48> (('length', []))
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if comp equal factor dot func_call . LexToken(then,'THeN',36,689)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<VariableNode @ 0x7ff028d00438>,'.',('length', [])] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7ff028d00588> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if comp equal factor . LexToken(then,'THeN',36,689)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<CallNode @ 0x7ff028d00588>] and goto state 76
   yacc.py: 506:Result : <CallNode @ 0x7ff028d00588> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if comp equal base_call . LexToken(then,'THeN',36,689)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<CallNode @ 0x7ff028d00588>] and goto state 75
   yacc.py: 506:Result : <CallNode @ 0x7ff028d00588> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if comp equal term . LexToken(then,'THeN',36,689)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<CallNode @ 0x7ff028d00588>] and goto state 158
   yacc.py: 506:Result : <CallNode @ 0x7ff028d00588> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if comp equal op . LexToken(then,'THeN',36,689)
   yacc.py: 471:Action : Reduce rule [comp -> comp equal op] with [<CallNode @ 0x7ff028d004e0>,'=',<CallNode @ 0x7ff028d00588>] and goto state 73
   yacc.py: 506:Result : <EqualNode @ 0x7ff028d00748> (<tools.ast.EqualNode object at 0x7ff028d ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if comp . LexToken(then,'THeN',36,689)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<EqualNode @ 0x7ff028d00748>] and goto state 132
   yacc.py: 506:Result : <EqualNode @ 0x7ff028d00748> (<tools.ast.EqualNode object at 0x7ff028d ...)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr . LexToken(then,'THeN',36,689)
   yacc.py: 445:Action : Shift and goto state 175
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then . LexToken(new,'new',37,710)
   yacc.py: 445:Action : Shift and goto state 89
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then new . LexToken(type,'IO',37,714)
   yacc.py: 445:Action : Shift and goto state 134
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then new type . LexToken(dot,'.',37,716)
   yacc.py: 471:Action : Reduce rule [atom -> new type] with ['new','IO'] and goto state 79
   yacc.py: 506:Result : <InstantiateNode @ 0x7ff028d005f8> (<tools.ast.InstantiateNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then atom . LexToken(dot,'.',37,716)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<InstantiateNode @ 0x7ff028d005f8>] and goto state 77
   yacc.py: 506:Result : <InstantiateNode @ 0x7ff028d005f8> (<tools.ast.InstantiateNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor . LexToken(dot,'.',37,716)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot . LexToken(id,'out_string',37,717)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id . LexToken(opar,'(',37,727)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar . LexToken(string,'La cadena "',37,741)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar string . LexToken(dot,'.',37,742)
   yacc.py: 471:Action : Reduce rule [atom -> string] with ['La cadena "'] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d00630> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar atom . LexToken(dot,'.',37,742)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7ff028d00630>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d00630> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor . LexToken(dot,'.',37,742)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot . LexToken(id,'concat',37,743)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id . LexToken(opar,'(',37,749)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar . LexToken(id,'a',37,750)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar id . LexToken(cpar,')',37,751)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['a'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d00668> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar atom . LexToken(cpar,')',37,751)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7ff028d00668>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d00668> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar factor . LexToken(cpar,')',37,751)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7ff028d00668>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d00668> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar base_call . LexToken(cpar,')',37,751)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7ff028d00668>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d00668> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar term . LexToken(cpar,')',37,751)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7ff028d00668>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d00668> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar op . LexToken(cpar,')',37,751)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<VariableNode @ 0x7ff028d00668>] and goto state 73
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d00668> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar comp . LexToken(cpar,')',37,751)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<VariableNode @ 0x7ff028d00668>] and goto state 155
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d00668> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar expr . LexToken(cpar,')',37,751)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<VariableNode @ 0x7ff028d00668>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7ff028d09108> ([<tools.ast.VariableNode object at 0x7ff ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar arg_list . LexToken(cpar,')',37,751)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7ff028d09108>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7ff028d09108> ([<tools.ast.VariableNode object at 0x7ff ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar args . LexToken(cpar,')',37,751)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar args cpar . LexToken(dot,'.',37,752)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['concat','(',<list @ 0x7ff028d09108>,')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7ff028cccb48> (('concat', [<tools.ast.VariableNode obje ...)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot func_call . LexToken(dot,'.',37,752)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<ConstantStrNode @ 0x7ff028d00630>,'.',<tuple @ 0x7ff028cccb48>] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7ff028d00940> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor . LexToken(dot,'.',37,752)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot . LexToken(id,'concat',37,753)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id . LexToken(opar,'(',37,759)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar . LexToken(string,'" mide igual que la cadena "',37,791)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar string . LexToken(cpar,')',37,792)
   yacc.py: 471:Action : Reduce rule [atom -> string] with [<str @ 0x7ff028e1d9e0>] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d008d0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar atom . LexToken(cpar,')',37,792)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7ff028d008d0>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d008d0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar factor . LexToken(cpar,')',37,792)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantStrNode @ 0x7ff028d008d0>] and goto state 76
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d008d0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar base_call . LexToken(cpar,')',37,792)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantStrNode @ 0x7ff028d008d0>] and goto state 75
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d008d0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar term . LexToken(cpar,')',37,792)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantStrNode @ 0x7ff028d008d0>] and goto state 74
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d008d0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar op . LexToken(cpar,')',37,792)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantStrNode @ 0x7ff028d008d0>] and goto state 73
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d008d0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar comp . LexToken(cpar,')',37,792)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantStrNode @ 0x7ff028d008d0>] and goto state 155
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d008d0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar expr . LexToken(cpar,')',37,792)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<ConstantStrNode @ 0x7ff028d008d0>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7ff028d09e88> ([<tools.ast.ConstantStrNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar arg_list . LexToken(cpar,')',37,792)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7ff028d09e88>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7ff028d09e88> ([<tools.ast.ConstantStrNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar args . LexToken(cpar,')',37,792)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar args cpar . LexToken(dot,'.',37,793)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['concat','(',<list @ 0x7ff028d09e88>,')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7ff028cccb48> (('concat', [<tools.ast.ConstantStrNode o ...)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot func_call . LexToken(dot,'.',37,793)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<CallNode @ 0x7ff028d00940>,'.',<tuple @ 0x7ff028cccb48>] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7ff028d009b0> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor . LexToken(dot,'.',37,793)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot . LexToken(id,'concat',37,794)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id . LexToken(opar,'(',37,800)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar . LexToken(id,'b',37,801)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar id . LexToken(cpar,')',37,802)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['b'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d00a20> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar atom . LexToken(cpar,')',37,802)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7ff028d00a20>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d00a20> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar factor . LexToken(cpar,')',37,802)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7ff028d00a20>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d00a20> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar base_call . LexToken(cpar,')',37,802)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7ff028d00a20>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d00a20> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar term . LexToken(cpar,')',37,802)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7ff028d00a20>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d00a20> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar op . LexToken(cpar,')',37,802)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<VariableNode @ 0x7ff028d00a20>] and goto state 73
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d00a20> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar comp . LexToken(cpar,')',37,802)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<VariableNode @ 0x7ff028d00a20>] and goto state 155
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d00a20> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar expr . LexToken(cpar,')',37,802)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<VariableNode @ 0x7ff028d00a20>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7ff028e00c48> ([<tools.ast.VariableNode object at 0x7ff ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar arg_list . LexToken(cpar,')',37,802)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7ff028e00c48>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7ff028e00c48> ([<tools.ast.VariableNode object at 0x7ff ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar args . LexToken(cpar,')',37,802)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar args cpar . LexToken(dot,'.',37,803)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['concat','(',<list @ 0x7ff028e00c48>,')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7ff028cccb48> (('concat', [<tools.ast.VariableNode obje ...)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot func_call . LexToken(dot,'.',37,803)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<CallNode @ 0x7ff028d009b0>,'.',<tuple @ 0x7ff028cccb48>] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7ff028d00b00> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor . LexToken(dot,'.',37,803)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot . LexToken(id,'concat',37,804)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id . LexToken(opar,'(',37,810)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar . LexToken(string,'".',37,815)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar string . LexToken(cpar,')',37,816)
   yacc.py: 471:Action : Reduce rule [atom -> string] with ['".'] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d00860> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar atom . LexToken(cpar,')',37,816)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7ff028d00860>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d00860> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar factor . LexToken(cpar,')',37,816)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantStrNode @ 0x7ff028d00860>] and goto state 76
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d00860> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar base_call . LexToken(cpar,')',37,816)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantStrNode @ 0x7ff028d00860>] and goto state 75
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d00860> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar term . LexToken(cpar,')',37,816)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantStrNode @ 0x7ff028d00860>] and goto state 74
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d00860> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar op . LexToken(cpar,')',37,816)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantStrNode @ 0x7ff028d00860>] and goto state 73
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d00860> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar comp . LexToken(cpar,')',37,816)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantStrNode @ 0x7ff028d00860>] and goto state 155
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d00860> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar expr . LexToken(cpar,')',37,816)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<ConstantStrNode @ 0x7ff028d00860>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7ff028e00d08> ([<tools.ast.ConstantStrNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar arg_list . LexToken(cpar,')',37,816)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7ff028e00d08>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7ff028e00d08> ([<tools.ast.ConstantStrNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar args . LexToken(cpar,')',37,816)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot id opar args cpar . LexToken(cpar,')',37,817)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['concat','(',<list @ 0x7ff028e00d08>,')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7ff028cccb48> (('concat', [<tools.ast.ConstantStrNode o ...)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor dot func_call . LexToken(cpar,')',37,817)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<CallNode @ 0x7ff028d00b00>,'.',<tuple @ 0x7ff028cccb48>] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7ff028d00b70> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar factor . LexToken(cpar,')',37,817)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<CallNode @ 0x7ff028d00b70>] and goto state 76
   yacc.py: 506:Result : <CallNode @ 0x7ff028d00b70> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar base_call . LexToken(cpar,')',37,817)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<CallNode @ 0x7ff028d00b70>] and goto state 75
   yacc.py: 506:Result : <CallNode @ 0x7ff028d00b70> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar term . LexToken(cpar,')',37,817)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<CallNode @ 0x7ff028d00b70>] and goto state 74
   yacc.py: 506:Result : <CallNode @ 0x7ff028d00b70> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar op . LexToken(cpar,')',37,817)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<CallNode @ 0x7ff028d00b70>] and goto state 73
   yacc.py: 506:Result : <CallNode @ 0x7ff028d00b70> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar comp . LexToken(cpar,')',37,817)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<CallNode @ 0x7ff028d00b70>] and goto state 155
   yacc.py: 506:Result : <CallNode @ 0x7ff028d00b70> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar expr . LexToken(cpar,')',37,817)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<CallNode @ 0x7ff028d00b70>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7ff028de6ec8> ([<tools.ast.CallNode object at 0x7ff028d ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar arg_list . LexToken(cpar,')',37,817)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7ff028de6ec8>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7ff028de6ec8> ([<tools.ast.CallNode object at 0x7ff028d ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar args . LexToken(cpar,')',37,817)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot id opar args cpar . LexToken(else,'ElsE',38,831)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['out_string','(',<list @ 0x7ff028de6ec8>,')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7ff028cccb48> (('out_string', [<tools.ast.CallNode obje ...)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor dot func_call . LexToken(else,'ElsE',38,831)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<InstantiateNode @ 0x7ff028d005f8>,'.',<tuple @ 0x7ff028cccb48>] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7ff028d007b8> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then factor . LexToken(else,'ElsE',38,831)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<CallNode @ 0x7ff028d007b8>] and goto state 76
   yacc.py: 506:Result : <CallNode @ 0x7ff028d007b8> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then base_call . LexToken(else,'ElsE',38,831)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<CallNode @ 0x7ff028d007b8>] and goto state 75
   yacc.py: 506:Result : <CallNode @ 0x7ff028d007b8> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then term . LexToken(else,'ElsE',38,831)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<CallNode @ 0x7ff028d007b8>] and goto state 74
   yacc.py: 506:Result : <CallNode @ 0x7ff028d007b8> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then op . LexToken(else,'ElsE',38,831)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<CallNode @ 0x7ff028d007b8>] and goto state 73
   yacc.py: 506:Result : <CallNode @ 0x7ff028d007b8> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then comp . LexToken(else,'ElsE',38,831)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<CallNode @ 0x7ff028d007b8>] and goto state 203
   yacc.py: 506:Result : <CallNode @ 0x7ff028d007b8> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 203
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr . LexToken(else,'ElsE',38,831)
   yacc.py: 445:Action : Shift and goto state 219
   yacc.py: 410:
   yacc.py: 411:State  : 219
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else . LexToken(new,'new',39,852)
   yacc.py: 445:Action : Shift and goto state 89
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else new . LexToken(type,'IO',39,856)
   yacc.py: 445:Action : Shift and goto state 134
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else new type . LexToken(dot,'.',39,858)
   yacc.py: 471:Action : Reduce rule [atom -> new type] with ['new','IO'] and goto state 79
   yacc.py: 506:Result : <InstantiateNode @ 0x7ff028d004a8> (<tools.ast.InstantiateNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else atom . LexToken(dot,'.',39,858)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<InstantiateNode @ 0x7ff028d004a8>] and goto state 77
   yacc.py: 506:Result : <InstantiateNode @ 0x7ff028d004a8> (<tools.ast.InstantiateNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor . LexToken(dot,'.',39,858)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot . LexToken(id,'out_string',39,859)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id . LexToken(opar,'(',39,869)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar . LexToken(string,'La cadena "',39,883)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar string . LexToken(dot,'.',39,884)
   yacc.py: 471:Action : Reduce rule [atom -> string] with ['La cadena "'] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d00b38> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar atom . LexToken(dot,'.',39,884)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7ff028d00b38>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d00b38> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor . LexToken(dot,'.',39,884)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot . LexToken(id,'concat',39,885)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id . LexToken(opar,'(',39,891)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar . LexToken(id,'a',39,892)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar id . LexToken(cpar,')',39,893)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['a'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d002e8> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar atom . LexToken(cpar,')',39,893)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7ff028d002e8>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d002e8> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar factor . LexToken(cpar,')',39,893)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7ff028d002e8>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d002e8> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar base_call . LexToken(cpar,')',39,893)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7ff028d002e8>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d002e8> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar term . LexToken(cpar,')',39,893)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7ff028d002e8>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d002e8> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar op . LexToken(cpar,')',39,893)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<VariableNode @ 0x7ff028d002e8>] and goto state 73
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d002e8> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar comp . LexToken(cpar,')',39,893)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<VariableNode @ 0x7ff028d002e8>] and goto state 155
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d002e8> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar expr . LexToken(cpar,')',39,893)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<VariableNode @ 0x7ff028d002e8>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7ff028d09e48> ([<tools.ast.VariableNode object at 0x7ff ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar arg_list . LexToken(cpar,')',39,893)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7ff028d09e48>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7ff028d09e48> ([<tools.ast.VariableNode object at 0x7ff ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar args . LexToken(cpar,')',39,893)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar args cpar . LexToken(dot,'.',39,894)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['concat','(',<list @ 0x7ff028d09e48>,')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7ff028cccb48> (('concat', [<tools.ast.VariableNode obje ...)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot func_call . LexToken(dot,'.',39,894)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<ConstantStrNode @ 0x7ff028d00b38>,'.',<tuple @ 0x7ff028cccb48>] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7ff028d00da0> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor . LexToken(dot,'.',39,894)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot . LexToken(id,'concat',39,895)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id . LexToken(opar,'(',39,901)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar . LexToken(string,'" es mas larga que la cadena "',39,935)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar string . LexToken(cpar,')',39,936)
   yacc.py: 471:Action : Reduce rule [atom -> string] with [<str @ 0x7ff028e1d940>] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d00cf8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar atom . LexToken(cpar,')',39,936)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7ff028d00cf8>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d00cf8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar factor . LexToken(cpar,')',39,936)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantStrNode @ 0x7ff028d00cf8>] and goto state 76
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d00cf8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar base_call . LexToken(cpar,')',39,936)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantStrNode @ 0x7ff028d00cf8>] and goto state 75
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d00cf8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar term . LexToken(cpar,')',39,936)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantStrNode @ 0x7ff028d00cf8>] and goto state 74
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d00cf8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar op . LexToken(cpar,')',39,936)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantStrNode @ 0x7ff028d00cf8>] and goto state 73
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d00cf8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar comp . LexToken(cpar,')',39,936)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantStrNode @ 0x7ff028d00cf8>] and goto state 155
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d00cf8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar expr . LexToken(cpar,')',39,936)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<ConstantStrNode @ 0x7ff028d00cf8>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7ff028d038c8> ([<tools.ast.ConstantStrNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar arg_list . LexToken(cpar,')',39,936)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7ff028d038c8>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7ff028d038c8> ([<tools.ast.ConstantStrNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar args . LexToken(cpar,')',39,936)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar args cpar . LexToken(dot,'.',39,937)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['concat','(',<list @ 0x7ff028d038c8>,')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7ff028cccb48> (('concat', [<tools.ast.ConstantStrNode o ...)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot func_call . LexToken(dot,'.',39,937)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<CallNode @ 0x7ff028d00da0>,'.',<tuple @ 0x7ff028cccb48>] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7ff028d00e10> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor . LexToken(dot,'.',39,937)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot . LexToken(id,'concat',39,938)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id . LexToken(opar,'(',39,944)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar . LexToken(id,'b',39,945)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar id . LexToken(cpar,')',39,946)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['b'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d00e80> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar atom . LexToken(cpar,')',39,946)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7ff028d00e80>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d00e80> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar factor . LexToken(cpar,')',39,946)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7ff028d00e80>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d00e80> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar base_call . LexToken(cpar,')',39,946)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7ff028d00e80>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d00e80> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar term . LexToken(cpar,')',39,946)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7ff028d00e80>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d00e80> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar op . LexToken(cpar,')',39,946)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<VariableNode @ 0x7ff028d00e80>] and goto state 73
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d00e80> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar comp . LexToken(cpar,')',39,946)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<VariableNode @ 0x7ff028d00e80>] and goto state 155
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d00e80> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar expr . LexToken(cpar,')',39,946)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<VariableNode @ 0x7ff028d00e80>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7ff028d11808> ([<tools.ast.VariableNode object at 0x7ff ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar arg_list . LexToken(cpar,')',39,946)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7ff028d11808>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7ff028d11808> ([<tools.ast.VariableNode object at 0x7ff ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar args . LexToken(cpar,')',39,946)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar args cpar . LexToken(dot,'.',39,947)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['concat','(',<list @ 0x7ff028d11808>,')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7ff028cccb48> (('concat', [<tools.ast.VariableNode obje ...)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot func_call . LexToken(dot,'.',39,947)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<CallNode @ 0x7ff028d00e10>,'.',<tuple @ 0x7ff028cccb48>] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7ff028d00f60> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor . LexToken(dot,'.',39,947)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot . LexToken(id,'concat',39,948)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id . LexToken(opar,'(',39,954)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar . LexToken(string,'".',39,959)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar string . LexToken(cpar,')',39,960)
   yacc.py: 471:Action : Reduce rule [atom -> string] with ['".'] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d00be0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar atom . LexToken(cpar,')',39,960)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7ff028d00be0>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d00be0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar factor . LexToken(cpar,')',39,960)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantStrNode @ 0x7ff028d00be0>] and goto state 76
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d00be0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar base_call . LexToken(cpar,')',39,960)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantStrNode @ 0x7ff028d00be0>] and goto state 75
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d00be0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar term . LexToken(cpar,')',39,960)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantStrNode @ 0x7ff028d00be0>] and goto state 74
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d00be0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar op . LexToken(cpar,')',39,960)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantStrNode @ 0x7ff028d00be0>] and goto state 73
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d00be0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar comp . LexToken(cpar,')',39,960)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantStrNode @ 0x7ff028d00be0>] and goto state 155
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028d00be0> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar expr . LexToken(cpar,')',39,960)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<ConstantStrNode @ 0x7ff028d00be0>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7ff028d11588> ([<tools.ast.ConstantStrNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar arg_list . LexToken(cpar,')',39,960)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7ff028d11588>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7ff028d11588> ([<tools.ast.ConstantStrNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar args . LexToken(cpar,')',39,960)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot id opar args cpar . LexToken(cpar,')',39,961)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['concat','(',<list @ 0x7ff028d11588>,')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7ff028cccb48> (('concat', [<tools.ast.ConstantStrNode o ...)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor dot func_call . LexToken(cpar,')',39,961)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<CallNode @ 0x7ff028d00f60>,'.',<tuple @ 0x7ff028cccb48>] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7ff028d00fd0> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar factor . LexToken(cpar,')',39,961)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<CallNode @ 0x7ff028d00fd0>] and goto state 76
   yacc.py: 506:Result : <CallNode @ 0x7ff028d00fd0> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar base_call . LexToken(cpar,')',39,961)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<CallNode @ 0x7ff028d00fd0>] and goto state 75
   yacc.py: 506:Result : <CallNode @ 0x7ff028d00fd0> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar term . LexToken(cpar,')',39,961)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<CallNode @ 0x7ff028d00fd0>] and goto state 74
   yacc.py: 506:Result : <CallNode @ 0x7ff028d00fd0> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar op . LexToken(cpar,')',39,961)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<CallNode @ 0x7ff028d00fd0>] and goto state 73
   yacc.py: 506:Result : <CallNode @ 0x7ff028d00fd0> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar comp . LexToken(cpar,')',39,961)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<CallNode @ 0x7ff028d00fd0>] and goto state 155
   yacc.py: 506:Result : <CallNode @ 0x7ff028d00fd0> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar expr . LexToken(cpar,')',39,961)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<CallNode @ 0x7ff028d00fd0>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7ff028d10508> ([<tools.ast.CallNode object at 0x7ff028d ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar arg_list . LexToken(cpar,')',39,961)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7ff028d10508>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7ff028d10508> ([<tools.ast.CallNode object at 0x7ff028d ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar args . LexToken(cpar,')',39,961)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot id opar args cpar . LexToken(fi,'fI',40,975)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['out_string','(',<list @ 0x7ff028d10508>,')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7ff028cccb48> (('out_string', [<tools.ast.CallNode obje ...)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor dot func_call . LexToken(fi,'fI',40,975)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<InstantiateNode @ 0x7ff028d004a8>,'.',<tuple @ 0x7ff028cccb48>] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7ff028d00710> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else factor . LexToken(fi,'fI',40,975)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<CallNode @ 0x7ff028d00710>] and goto state 76
   yacc.py: 506:Result : <CallNode @ 0x7ff028d00710> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else base_call . LexToken(fi,'fI',40,975)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<CallNode @ 0x7ff028d00710>] and goto state 75
   yacc.py: 506:Result : <CallNode @ 0x7ff028d00710> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else term . LexToken(fi,'fI',40,975)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<CallNode @ 0x7ff028d00710>] and goto state 74
   yacc.py: 506:Result : <CallNode @ 0x7ff028d00710> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else op . LexToken(fi,'fI',40,975)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<CallNode @ 0x7ff028d00710>] and goto state 73
   yacc.py: 506:Result : <CallNode @ 0x7ff028d00710> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else comp . LexToken(fi,'fI',40,975)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<CallNode @ 0x7ff028d00710>] and goto state 228
   yacc.py: 506:Result : <CallNode @ 0x7ff028d00710> (<tools.ast.CallNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 228
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else expr . LexToken(fi,'fI',40,975)
   yacc.py: 445:Action : Shift and goto state 230
   yacc.py: 410:
   yacc.py: 411:State  : 230
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else if expr then expr else expr fi . LexToken(fi,'Fi',41,986)
   yacc.py: 471:Action : Reduce rule [factor -> if expr then expr else expr fi] with ['if',<EqualNode @ 0x7ff028d00748>,'THeN',<CallNode @ 0x7ff028d007b8>,'ElsE',<CallNode @ 0x7ff028d00710>,'fI'] and goto state 77
   yacc.py: 506:Result : <ConditionalNode @ 0x7ff028d00a90> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else factor . LexToken(fi,'Fi',41,986)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConditionalNode @ 0x7ff028d00a90>] and goto state 76
   yacc.py: 506:Result : <ConditionalNode @ 0x7ff028d00a90> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else base_call . LexToken(fi,'Fi',41,986)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConditionalNode @ 0x7ff028d00a90>] and goto state 75
   yacc.py: 506:Result : <ConditionalNode @ 0x7ff028d00a90> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else term . LexToken(fi,'Fi',41,986)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConditionalNode @ 0x7ff028d00a90>] and goto state 74
   yacc.py: 506:Result : <ConditionalNode @ 0x7ff028d00a90> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else op . LexToken(fi,'Fi',41,986)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConditionalNode @ 0x7ff028d00a90>] and goto state 73
   yacc.py: 506:Result : <ConditionalNode @ 0x7ff028d00a90> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else comp . LexToken(fi,'Fi',41,986)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConditionalNode @ 0x7ff028d00a90>] and goto state 228
   yacc.py: 506:Result : <ConditionalNode @ 0x7ff028d00a90> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 228
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else expr . LexToken(fi,'Fi',41,986)
   yacc.py: 445:Action : Shift and goto state 230
   yacc.py: 410:
   yacc.py: 411:State  : 230
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur if expr then expr else expr fi . LexToken(ccur,'}',42,993)
   yacc.py: 471:Action : Reduce rule [factor -> if expr then expr else expr fi] with ['If',<LessNode @ 0x7ff028e50fd0>,'THeN',<CallNode @ 0x7ff028e50f98>,'eLSe',<ConditionalNode @ 0x7ff028d00a90>,'Fi'] and goto state 77
   yacc.py: 506:Result : <ConditionalNode @ 0x7ff028d00e48> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur factor . LexToken(ccur,'}',42,993)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConditionalNode @ 0x7ff028d00e48>] and goto state 76
   yacc.py: 506:Result : <ConditionalNode @ 0x7ff028d00e48> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur base_call . LexToken(ccur,'}',42,993)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConditionalNode @ 0x7ff028d00e48>] and goto state 75
   yacc.py: 506:Result : <ConditionalNode @ 0x7ff028d00e48> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur term . LexToken(ccur,'}',42,993)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConditionalNode @ 0x7ff028d00e48>] and goto state 74
   yacc.py: 506:Result : <ConditionalNode @ 0x7ff028d00e48> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur op . LexToken(ccur,'}',42,993)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConditionalNode @ 0x7ff028d00e48>] and goto state 73
   yacc.py: 506:Result : <ConditionalNode @ 0x7ff028d00e48> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur comp . LexToken(ccur,'}',42,993)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConditionalNode @ 0x7ff028d00e48>] and goto state 206
   yacc.py: 506:Result : <ConditionalNode @ 0x7ff028d00e48> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 206
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur expr . LexToken(ccur,'}',42,993)
   yacc.py: 445:Action : Shift and goto state 222
   yacc.py: 410:
   yacc.py: 411:State  : 222
   yacc.py: 430:Defaulted state 222: Reduce using 25
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur expr ccur . None
   yacc.py: 471:Action : Reduce rule [def_func -> id opar formals cpar colon type ocur expr ccur] with ['testing5','(',<list @ 0x7ff028d096c8>,')',':','IO','{',<ConditionalNode @ 0x7ff028d00e48>,'}'] and goto state 18
   yacc.py: 506:Result : <FuncDeclarationNode @ 0x7ff028e50f60> (<tools.ast.FuncDeclarationNode object at ...)
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func . LexToken(semi,';',42,994)
   yacc.py: 445:Action : Shift and goto state 30
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi . LexToken(id,'testing6',44,1001)
   yacc.py: 445:Action : Shift and goto state 19
   yacc.py: 410:
   yacc.py: 411:State  : 19
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id . LexToken(opar,'(',44,1009)
   yacc.py: 445:Action : Shift and goto state 32
   yacc.py: 410:
   yacc.py: 411:State  : 32
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar . LexToken(id,'a',44,1010)
   yacc.py: 445:Action : Shift and goto state 46
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar id . LexToken(colon,':',44,1011)
   yacc.py: 445:Action : Shift and goto state 61
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar id colon . LexToken(type,'Int',44,1013)
   yacc.py: 445:Action : Shift and goto state 96
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar id colon type . LexToken(cpar,')',44,1016)
   yacc.py: 471:Action : Reduce rule [param -> id colon type] with ['a',':','Int'] and goto state 44
   yacc.py: 506:Result : <tuple @ 0x7ff028cccb48> (('a', 'Int'))
   yacc.py: 410:
   yacc.py: 411:State  : 44
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar param . LexToken(cpar,')',44,1016)
   yacc.py: 471:Action : Reduce rule [param_list -> param] with [('a', 'Int')] and goto state 42
   yacc.py: 506:Result : <list @ 0x7ff028d104c8> ([('a', 'Int')])
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 430:Defaulted state 42: Reduce using 30
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar param_list . LexToken(cpar,')',44,1016)
   yacc.py: 471:Action : Reduce rule [formals -> param_list] with [[('a', 'Int')]] and goto state 51
   yacc.py: 506:Result : <list @ 0x7ff028d104c8> ([('a', 'Int')])
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals . LexToken(cpar,')',44,1016)
   yacc.py: 445:Action : Shift and goto state 64
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar . LexToken(colon,':',44,1017)
   yacc.py: 445:Action : Shift and goto state 100
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon . LexToken(type,'IO',44,1019)
   yacc.py: 445:Action : Shift and goto state 138
   yacc.py: 410:
   yacc.py: 411:State  : 138
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type . LexToken(ocur,'{',44,1022)
   yacc.py: 445:Action : Shift and goto state 181
   yacc.py: 410:
   yacc.py: 411:State  : 181
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur . LexToken(let,'let',45,1032)
   yacc.py: 445:Action : Shift and goto state 84
   yacc.py: 410:
   yacc.py: 411:State  : 84
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let . LexToken(id,'count',45,1036)
   yacc.py: 445:Action : Shift and goto state 46
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let id . LexToken(colon,':',45,1041)
   yacc.py: 445:Action : Shift and goto state 61
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let id colon . LexToken(type,'Int',45,1043)
   yacc.py: 445:Action : Shift and goto state 96
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let id colon type . LexToken(larrow,'<-',45,1047)
   yacc.py: 471:Action : Reduce rule [param -> id colon type] with ['count',':','Int'] and goto state 130
   yacc.py: 506:Result : <tuple @ 0x7ff028ccc8c8> (('count', 'Int'))
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let param . LexToken(larrow,'<-',45,1047)
   yacc.py: 445:Action : Shift and goto state 173
   yacc.py: 410:
   yacc.py: 411:State  : 173
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let param larrow . LexToken(num,0.0,45,1050)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let param larrow num . LexToken(comma,',',45,1051)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [0.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028d000b8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let param larrow atom . LexToken(comma,',',45,1051)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028d000b8>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028d000b8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let param larrow factor . LexToken(comma,',',45,1051)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028d000b8>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028d000b8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let param larrow base_call . LexToken(comma,',',45,1051)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7ff028d000b8>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028d000b8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let param larrow term . LexToken(comma,',',45,1051)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7ff028d000b8>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028d000b8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let param larrow op . LexToken(comma,',',45,1051)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantNumNode @ 0x7ff028d000b8>] and goto state 73
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028d000b8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let param larrow comp . LexToken(comma,',',45,1051)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantNumNode @ 0x7ff028d000b8>] and goto state 198
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028d000b8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let param larrow expr . LexToken(comma,',',45,1051)
   yacc.py: 471:Action : Reduce rule [let_assign -> param larrow expr] with [<tuple @ 0x7ff028ccc8c8>,'<-',<ConstantNumNode @ 0x7ff028d000b8>] and goto state 129
   yacc.py: 506:Result : <VarDeclarationNode @ 0x7ff028d00ba8> (<tools.ast.VarDeclarationNode object at  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_assign . LexToken(comma,',',45,1051)
   yacc.py: 445:Action : Shift and goto state 172
   yacc.py: 410:
   yacc.py: 411:State  : 172
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_assign comma . LexToken(id,'pow',45,1053)
   yacc.py: 445:Action : Shift and goto state 46
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_assign comma id . LexToken(colon,':',45,1056)
   yacc.py: 445:Action : Shift and goto state 61
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_assign comma id colon . LexToken(type,'Int',45,1058)
   yacc.py: 445:Action : Shift and goto state 96
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_assign comma id colon type . LexToken(in,'in',46,1071)
   yacc.py: 471:Action : Reduce rule [param -> id colon type] with ['pow',':','Int'] and goto state 130
   yacc.py: 506:Result : <tuple @ 0x7ff028ccc8c8> (('pow', 'Int'))
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_assign comma param . LexToken(in,'in',46,1071)
   yacc.py: 471:Action : Reduce rule [let_assign -> param] with [('pow', 'Int')] and goto state 129
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d00390> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_assign comma let_assign . LexToken(in,'in',46,1071)
   yacc.py: 471:Action : Reduce rule [let_list -> let_assign] with [<VariableNode @ 0x7ff028d00390>] and goto state 197
   yacc.py: 506:Result : <list @ 0x7ff028e2bc88> ([<tools.ast.VariableNode object at 0x7ff ...)
   yacc.py: 410:
   yacc.py: 411:State  : 197
   yacc.py: 430:Defaulted state 197: Reduce using 37
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_assign comma let_list . LexToken(in,'in',46,1071)
   yacc.py: 471:Action : Reduce rule [let_list -> let_assign comma let_list] with [<VarDeclarationNode @ 0x7ff028d00ba8>,',',<list @ 0x7ff028e2bc88>] and goto state 128
   yacc.py: 506:Result : <list @ 0x7ff028d10448> ([<tools.ast.VarDeclarationNode object at ...)
   yacc.py: 410:
   yacc.py: 411:State  : 128
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list . LexToken(in,'in',46,1071)
   yacc.py: 445:Action : Shift and goto state 171
   yacc.py: 410:
   yacc.py: 411:State  : 171
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in . LexToken(ocur,'{',46,1074)
   yacc.py: 445:Action : Shift and goto state 90
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur . LexToken(id,'pow',48,1115)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur id . LexToken(larrow,'<-',48,1119)
   yacc.py: 445:Action : Shift and goto state 112
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur id larrow . LexToken(num,1.0,48,1122)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur id larrow num . LexToken(semi,';',48,1123)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [1.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028d00080> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur id larrow atom . LexToken(semi,';',48,1123)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028d00080>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028d00080> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur id larrow factor . LexToken(semi,';',48,1123)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028d00080>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028d00080> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur id larrow base_call . LexToken(semi,';',48,1123)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7ff028d00080>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028d00080> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur id larrow term . LexToken(semi,';',48,1123)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7ff028d00080>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028d00080> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur id larrow op . LexToken(semi,';',48,1123)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantNumNode @ 0x7ff028d00080>] and goto state 73
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028d00080> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur id larrow comp . LexToken(semi,';',48,1123)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantNumNode @ 0x7ff028d00080>] and goto state 152
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028d00080> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 152
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur id larrow expr . LexToken(semi,';',48,1123)
   yacc.py: 471:Action : Reduce rule [expr -> id larrow expr] with ['pow','<-',<ConstantNumNode @ 0x7ff028d00080>] and goto state 111
   yacc.py: 506:Result : <AssignNode @ 0x7ff028d00c88> (<tools.ast.AssignNode object at 0x7ff028 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr . LexToken(semi,';',48,1123)
   yacc.py: 445:Action : Shift and goto state 151
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi . LexToken(while,'while',49,1137)
   yacc.py: 445:Action : Shift and goto state 87
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while . LexToken(id,'pow',49,1143)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while id . LexToken(less,'<',49,1147)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['pow'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7ff028e50b70> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while atom . LexToken(less,'<',49,1147)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7ff028e50b70>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7ff028e50b70> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while factor . LexToken(less,'<',49,1147)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7ff028e50b70>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7ff028e50b70> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while base_call . LexToken(less,'<',49,1147)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7ff028e50b70>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7ff028e50b70> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while term . LexToken(less,'<',49,1147)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7ff028e50b70>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7ff028e50b70> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while op . LexToken(less,'<',49,1147)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<VariableNode @ 0x7ff028e50b70>] and goto state 73
   yacc.py: 506:Result : <VariableNode @ 0x7ff028e50b70> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while comp . LexToken(less,'<',49,1147)
   yacc.py: 445:Action : Shift and goto state 114
   yacc.py: 410:
   yacc.py: 411:State  : 114
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while comp less . LexToken(id,'a',49,1149)
   yacc.py: 445:Action : Shift and goto state 126
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while comp less id . LexToken(loop,'loop',50,1164)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['a'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d00d30> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while comp less atom . LexToken(loop,'loop',50,1164)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7ff028d00d30>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d00d30> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while comp less factor . LexToken(loop,'loop',50,1164)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7ff028d00d30>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d00d30> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while comp less base_call . LexToken(loop,'loop',50,1164)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7ff028d00d30>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d00d30> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while comp less term . LexToken(loop,'loop',50,1164)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7ff028d00d30>] and goto state 156
   yacc.py: 506:Result : <VariableNode @ 0x7ff028d00d30> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 156
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while comp less op . LexToken(loop,'loop',50,1164)
   yacc.py: 471:Action : Reduce rule [comp -> comp less op] with [<VariableNode @ 0x7ff028e50b70>,'<',<VariableNode @ 0x7ff028d00d30>] and goto state 73
   yacc.py: 506:Result : <LessNode @ 0x7ff028cf8208> (<tools.ast.LessNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while comp . LexToken(loop,'loop',50,1164)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<LessNode @ 0x7ff028cf8208>] and goto state 133
   yacc.py: 506:Result : <LessNode @ 0x7ff028cf8208> (<tools.ast.LessNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr . LexToken(loop,'loop',50,1164)
   yacc.py: 445:Action : Shift and goto state 176
   yacc.py: 410:
   yacc.py: 411:State  : 176
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop . LexToken(ocur,'{',51,1186)
   yacc.py: 445:Action : Shift and goto state 90
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop ocur . LexToken(id,'count',52,1208)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop ocur id . LexToken(larrow,'<-',52,1214)
   yacc.py: 445:Action : Shift and goto state 112
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop ocur id larrow . LexToken(id,'count',52,1217)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop ocur id larrow id . LexToken(plus,'+',52,1223)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['count'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cf8320> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop ocur id larrow atom . LexToken(plus,'+',52,1223)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7ff028cf8320>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cf8320> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop ocur id larrow factor . LexToken(plus,'+',52,1223)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7ff028cf8320>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cf8320> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop ocur id larrow base_call . LexToken(plus,'+',52,1223)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7ff028cf8320>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cf8320> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop ocur id larrow term . LexToken(plus,'+',52,1223)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7ff028cf8320>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cf8320> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop ocur id larrow op . LexToken(plus,'+',52,1223)
   yacc.py: 445:Action : Shift and goto state 117
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop ocur id larrow op plus . LexToken(num,1.0,52,1225)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop ocur id larrow op plus num . LexToken(semi,';',52,1226)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [1.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028d006d8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop ocur id larrow op plus atom . LexToken(semi,';',52,1226)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028d006d8>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028d006d8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop ocur id larrow op plus factor . LexToken(semi,';',52,1226)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028d006d8>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028d006d8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop ocur id larrow op plus base_call . LexToken(semi,';',52,1226)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7ff028d006d8>] and goto state 159
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028d006d8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop ocur id larrow op plus term . LexToken(semi,';',52,1226)
   yacc.py: 471:Action : Reduce rule [op -> op plus term] with [<VariableNode @ 0x7ff028cf8320>,'+',<ConstantNumNode @ 0x7ff028d006d8>] and goto state 74
   yacc.py: 506:Result : <PlusNode @ 0x7ff028cf8518> (<tools.ast.PlusNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop ocur id larrow op . LexToken(semi,';',52,1226)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<PlusNode @ 0x7ff028cf8518>] and goto state 73
   yacc.py: 506:Result : <PlusNode @ 0x7ff028cf8518> (<tools.ast.PlusNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop ocur id larrow comp . LexToken(semi,';',52,1226)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<PlusNode @ 0x7ff028cf8518>] and goto state 152
   yacc.py: 506:Result : <PlusNode @ 0x7ff028cf8518> (<tools.ast.PlusNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 152
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop ocur id larrow expr . LexToken(semi,';',52,1226)
   yacc.py: 471:Action : Reduce rule [expr -> id larrow expr] with ['count','<-',<PlusNode @ 0x7ff028cf8518>] and goto state 111
   yacc.py: 506:Result : <AssignNode @ 0x7ff028cf85f8> (<tools.ast.AssignNode object at 0x7ff028 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop ocur expr . LexToken(semi,';',52,1226)
   yacc.py: 445:Action : Shift and goto state 151
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop ocur expr semi . LexToken(id,'pow',53,1248)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop ocur expr semi id . LexToken(larrow,'<-',53,1252)
   yacc.py: 445:Action : Shift and goto state 112
   yacc.py: 410:
   yacc.py: 411:State  : 112
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop ocur expr semi id larrow . LexToken(id,'pow',53,1255)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop ocur expr semi id larrow id . LexToken(star,'*',53,1259)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['pow'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cf8358> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop ocur expr semi id larrow atom . LexToken(star,'*',53,1259)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7ff028cf8358>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cf8358> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop ocur expr semi id larrow factor . LexToken(star,'*',53,1259)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7ff028cf8358>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cf8358> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop ocur expr semi id larrow base_call . LexToken(star,'*',53,1259)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7ff028cf8358>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cf8358> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop ocur expr semi id larrow term . LexToken(star,'*',53,1259)
   yacc.py: 445:Action : Shift and goto state 119
   yacc.py: 410:
   yacc.py: 411:State  : 119
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop ocur expr semi id larrow term star . LexToken(num,2.0,53,1261)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop ocur expr semi id larrow term star num . LexToken(semi,';',53,1262)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [2.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cf86a0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop ocur expr semi id larrow term star atom . LexToken(semi,';',53,1262)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028cf86a0>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cf86a0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop ocur expr semi id larrow term star factor . LexToken(semi,';',53,1262)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028cf86a0>] and goto state 161
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cf86a0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop ocur expr semi id larrow term star base_call . LexToken(semi,';',53,1262)
   yacc.py: 471:Action : Reduce rule [term -> term star base_call] with [<VariableNode @ 0x7ff028cf8358>,'*',<ConstantNumNode @ 0x7ff028cf86a0>] and goto state 75
   yacc.py: 506:Result : <StarNode @ 0x7ff028cf8748> (<tools.ast.StarNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop ocur expr semi id larrow term . LexToken(semi,';',53,1262)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<StarNode @ 0x7ff028cf8748>] and goto state 74
   yacc.py: 506:Result : <StarNode @ 0x7ff028cf8748> (<tools.ast.StarNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop ocur expr semi id larrow op . LexToken(semi,';',53,1262)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<StarNode @ 0x7ff028cf8748>] and goto state 73
   yacc.py: 506:Result : <StarNode @ 0x7ff028cf8748> (<tools.ast.StarNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop ocur expr semi id larrow comp . LexToken(semi,';',53,1262)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<StarNode @ 0x7ff028cf8748>] and goto state 152
   yacc.py: 506:Result : <StarNode @ 0x7ff028cf8748> (<tools.ast.StarNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 152
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop ocur expr semi id larrow expr . LexToken(semi,';',53,1262)
   yacc.py: 471:Action : Reduce rule [expr -> id larrow expr] with ['pow','<-',<StarNode @ 0x7ff028cf8748>] and goto state 111
   yacc.py: 506:Result : <AssignNode @ 0x7ff028cf8630> (<tools.ast.AssignNode object at 0x7ff028 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop ocur expr semi expr . LexToken(semi,';',53,1262)
   yacc.py: 445:Action : Shift and goto state 151
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop ocur expr semi expr semi . LexToken(ccur,'}',54,1280)
   yacc.py: 471:Action : Reduce rule [block -> expr semi] with [<AssignNode @ 0x7ff028cf8630>,';'] and goto state 190
   yacc.py: 506:Result : <list @ 0x7ff028d10408> ([<tools.ast.AssignNode object at 0x7ff02 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 190
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop ocur expr semi block . LexToken(ccur,'}',54,1280)
   yacc.py: 471:Action : Reduce rule [block -> expr semi block] with [<AssignNode @ 0x7ff028cf85f8>,';',<list @ 0x7ff028d10408>] and goto state 135
   yacc.py: 506:Result : <list @ 0x7ff028d09dc8> ([<tools.ast.AssignNode object at 0x7ff02 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 135
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop ocur block . LexToken(ccur,'}',54,1280)
   yacc.py: 445:Action : Shift and goto state 177
   yacc.py: 410:
   yacc.py: 411:State  : 177
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop ocur block ccur . LexToken(pool,'pool',55,1295)
   yacc.py: 471:Action : Reduce rule [atom -> ocur block ccur] with ['{',<list @ 0x7ff028d09dc8>,'}'] and goto state 79
   yacc.py: 506:Result : <BlockNode @ 0x7ff028cf85c0> (<tools.ast.BlockNode object at 0x7ff028c ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop atom . LexToken(pool,'pool',55,1295)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<BlockNode @ 0x7ff028cf85c0>] and goto state 77
   yacc.py: 506:Result : <BlockNode @ 0x7ff028cf85c0> (<tools.ast.BlockNode object at 0x7ff028c ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop factor . LexToken(pool,'pool',55,1295)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<BlockNode @ 0x7ff028cf85c0>] and goto state 76
   yacc.py: 506:Result : <BlockNode @ 0x7ff028cf85c0> (<tools.ast.BlockNode object at 0x7ff028c ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop base_call . LexToken(pool,'pool',55,1295)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<BlockNode @ 0x7ff028cf85c0>] and goto state 75
   yacc.py: 506:Result : <BlockNode @ 0x7ff028cf85c0> (<tools.ast.BlockNode object at 0x7ff028c ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop term . LexToken(pool,'pool',55,1295)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<BlockNode @ 0x7ff028cf85c0>] and goto state 74
   yacc.py: 506:Result : <BlockNode @ 0x7ff028cf85c0> (<tools.ast.BlockNode object at 0x7ff028c ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop op . LexToken(pool,'pool',55,1295)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<BlockNode @ 0x7ff028cf85c0>] and goto state 73
   yacc.py: 506:Result : <BlockNode @ 0x7ff028cf85c0> (<tools.ast.BlockNode object at 0x7ff028c ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop comp . LexToken(pool,'pool',55,1295)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<BlockNode @ 0x7ff028cf85c0>] and goto state 204
   yacc.py: 506:Result : <BlockNode @ 0x7ff028cf85c0> (<tools.ast.BlockNode object at 0x7ff028c ...)
   yacc.py: 410:
   yacc.py: 411:State  : 204
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop expr . LexToken(pool,'pool',55,1295)
   yacc.py: 445:Action : Shift and goto state 220
   yacc.py: 410:
   yacc.py: 411:State  : 220
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi while expr loop expr pool . LexToken(semi,';',55,1299)
   yacc.py: 471:Action : Reduce rule [factor -> while expr loop expr pool] with ['while',<LessNode @ 0x7ff028cf8208>,'loop',<BlockNode @ 0x7ff028cf85c0>,'pool'] and goto state 77
   yacc.py: 506:Result : <WhileNode @ 0x7ff028cf82b0> (<tools.ast.WhileNode object at 0x7ff028c ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi factor . LexToken(semi,';',55,1299)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<WhileNode @ 0x7ff028cf82b0>] and goto state 76
   yacc.py: 506:Result : <WhileNode @ 0x7ff028cf82b0> (<tools.ast.WhileNode object at 0x7ff028c ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi base_call . LexToken(semi,';',55,1299)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<WhileNode @ 0x7ff028cf82b0>] and goto state 75
   yacc.py: 506:Result : <WhileNode @ 0x7ff028cf82b0> (<tools.ast.WhileNode object at 0x7ff028c ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi term . LexToken(semi,';',55,1299)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<WhileNode @ 0x7ff028cf82b0>] and goto state 74
   yacc.py: 506:Result : <WhileNode @ 0x7ff028cf82b0> (<tools.ast.WhileNode object at 0x7ff028c ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi op . LexToken(semi,';',55,1299)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<WhileNode @ 0x7ff028cf82b0>] and goto state 73
   yacc.py: 506:Result : <WhileNode @ 0x7ff028cf82b0> (<tools.ast.WhileNode object at 0x7ff028c ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi comp . LexToken(semi,';',55,1299)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<WhileNode @ 0x7ff028cf82b0>] and goto state 111
   yacc.py: 506:Result : <WhileNode @ 0x7ff028cf82b0> (<tools.ast.WhileNode object at 0x7ff028c ...)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr . LexToken(semi,';',55,1299)
   yacc.py: 445:Action : Shift and goto state 151
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi . LexToken(new,'new',56,1313)
   yacc.py: 445:Action : Shift and goto state 89
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi new . LexToken(type,'IO',56,1317)
   yacc.py: 445:Action : Shift and goto state 134
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi new type . LexToken(dot,'.',56,1319)
   yacc.py: 471:Action : Reduce rule [atom -> new type] with ['new','IO'] and goto state 79
   yacc.py: 506:Result : <InstantiateNode @ 0x7ff028cf84a8> (<tools.ast.InstantiateNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi atom . LexToken(dot,'.',56,1319)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<InstantiateNode @ 0x7ff028cf84a8>] and goto state 77
   yacc.py: 506:Result : <InstantiateNode @ 0x7ff028cf84a8> (<tools.ast.InstantiateNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor . LexToken(dot,'.',56,1319)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot . LexToken(id,'out_string',56,1320)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id . LexToken(opar,'(',56,1330)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar . LexToken(string,'El logaritmo en base 2 de ',56,1358)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar string . LexToken(cpar,')',56,1359)
   yacc.py: 471:Action : Reduce rule [atom -> string] with [<str @ 0x7ff028e1dc10>] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028cf8550> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar atom . LexToken(cpar,')',56,1359)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7ff028cf8550>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028cf8550> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar factor . LexToken(cpar,')',56,1359)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantStrNode @ 0x7ff028cf8550>] and goto state 76
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028cf8550> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar base_call . LexToken(cpar,')',56,1359)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantStrNode @ 0x7ff028cf8550>] and goto state 75
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028cf8550> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar term . LexToken(cpar,')',56,1359)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantStrNode @ 0x7ff028cf8550>] and goto state 74
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028cf8550> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar op . LexToken(cpar,')',56,1359)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantStrNode @ 0x7ff028cf8550>] and goto state 73
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028cf8550> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar comp . LexToken(cpar,')',56,1359)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantStrNode @ 0x7ff028cf8550>] and goto state 155
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028cf8550> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar expr . LexToken(cpar,')',56,1359)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<ConstantStrNode @ 0x7ff028cf8550>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7ff028e2bc88> ([<tools.ast.ConstantStrNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar arg_list . LexToken(cpar,')',56,1359)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7ff028e2bc88>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7ff028e2bc88> ([<tools.ast.ConstantStrNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar args . LexToken(cpar,')',56,1359)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar args cpar . LexToken(dot,'.',56,1360)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['out_string','(',<list @ 0x7ff028e2bc88>,')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7ff028ccc8c8> (('out_string', [<tools.ast.ConstantStrNo ...)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot func_call . LexToken(dot,'.',56,1360)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<InstantiateNode @ 0x7ff028cf84a8>,'.',<tuple @ 0x7ff028ccc8c8>] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7ff028cf81d0> (<tools.ast.CallNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor . LexToken(dot,'.',56,1360)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot . LexToken(id,'out_int',56,1361)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id . LexToken(opar,'(',56,1368)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar . LexToken(id,'a',56,1369)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar id . LexToken(cpar,')',56,1370)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['a'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cf82e8> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar atom . LexToken(cpar,')',56,1370)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7ff028cf82e8>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cf82e8> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar factor . LexToken(cpar,')',56,1370)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7ff028cf82e8>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cf82e8> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar base_call . LexToken(cpar,')',56,1370)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7ff028cf82e8>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cf82e8> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar term . LexToken(cpar,')',56,1370)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7ff028cf82e8>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cf82e8> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar op . LexToken(cpar,')',56,1370)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<VariableNode @ 0x7ff028cf82e8>] and goto state 73
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cf82e8> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar comp . LexToken(cpar,')',56,1370)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<VariableNode @ 0x7ff028cf82e8>] and goto state 155
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cf82e8> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar expr . LexToken(cpar,')',56,1370)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<VariableNode @ 0x7ff028cf82e8>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7ff028d10488> ([<tools.ast.VariableNode object at 0x7ff ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar arg_list . LexToken(cpar,')',56,1370)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7ff028d10488>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7ff028d10488> ([<tools.ast.VariableNode object at 0x7ff ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar args . LexToken(cpar,')',56,1370)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar args cpar . LexToken(dot,'.',56,1371)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['out_int','(',<list @ 0x7ff028d10488>,')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7ff028ccc8c8> (('out_int', [<tools.ast.VariableNode obj ...)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot func_call . LexToken(dot,'.',56,1371)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<CallNode @ 0x7ff028cf81d0>,'.',<tuple @ 0x7ff028ccc8c8>] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7ff028cf8588> (<tools.ast.CallNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor . LexToken(dot,'.',56,1371)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot . LexToken(id,'out_string',56,1372)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id . LexToken(opar,'(',56,1382)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar . LexToken(string,' es ',56,1388)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar string . LexToken(cpar,')',56,1389)
   yacc.py: 471:Action : Reduce rule [atom -> string] with [' es '] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028cf8668> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar atom . LexToken(cpar,')',56,1389)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7ff028cf8668>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028cf8668> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar factor . LexToken(cpar,')',56,1389)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantStrNode @ 0x7ff028cf8668>] and goto state 76
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028cf8668> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar base_call . LexToken(cpar,')',56,1389)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantStrNode @ 0x7ff028cf8668>] and goto state 75
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028cf8668> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar term . LexToken(cpar,')',56,1389)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantStrNode @ 0x7ff028cf8668>] and goto state 74
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028cf8668> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar op . LexToken(cpar,')',56,1389)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantStrNode @ 0x7ff028cf8668>] and goto state 73
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028cf8668> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar comp . LexToken(cpar,')',56,1389)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantStrNode @ 0x7ff028cf8668>] and goto state 155
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028cf8668> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar expr . LexToken(cpar,')',56,1389)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<ConstantStrNode @ 0x7ff028cf8668>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7ff028d0fa48> ([<tools.ast.ConstantStrNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar arg_list . LexToken(cpar,')',56,1389)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7ff028d0fa48>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7ff028d0fa48> ([<tools.ast.ConstantStrNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar args . LexToken(cpar,')',56,1389)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar args cpar . LexToken(dot,'.',56,1390)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['out_string','(',<list @ 0x7ff028d0fa48>,')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7ff028ccc8c8> (('out_string', [<tools.ast.ConstantStrNo ...)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot func_call . LexToken(dot,'.',56,1390)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<CallNode @ 0x7ff028cf8588>,'.',<tuple @ 0x7ff028ccc8c8>] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7ff028cf84e0> (<tools.ast.CallNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor . LexToken(dot,'.',56,1390)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot . LexToken(id,'out_int',56,1391)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id . LexToken(opar,'(',56,1398)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar . LexToken(id,'count',56,1399)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar id . LexToken(cpar,')',56,1404)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['count'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cf87b8> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar atom . LexToken(cpar,')',56,1404)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7ff028cf87b8>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cf87b8> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar factor . LexToken(cpar,')',56,1404)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7ff028cf87b8>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cf87b8> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar base_call . LexToken(cpar,')',56,1404)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7ff028cf87b8>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cf87b8> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar term . LexToken(cpar,')',56,1404)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7ff028cf87b8>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cf87b8> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar op . LexToken(cpar,')',56,1404)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<VariableNode @ 0x7ff028cf87b8>] and goto state 73
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cf87b8> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar comp . LexToken(cpar,')',56,1404)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<VariableNode @ 0x7ff028cf87b8>] and goto state 155
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cf87b8> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar expr . LexToken(cpar,')',56,1404)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<VariableNode @ 0x7ff028cf87b8>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7ff028d0f488> ([<tools.ast.VariableNode object at 0x7ff ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar arg_list . LexToken(cpar,')',56,1404)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7ff028d0f488>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7ff028d0f488> ([<tools.ast.VariableNode object at 0x7ff ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar args . LexToken(cpar,')',56,1404)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot id opar args cpar . LexToken(semi,';',56,1405)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['out_int','(',<list @ 0x7ff028d0f488>,')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7ff028ccc8c8> (('out_int', [<tools.ast.VariableNode obj ...)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor dot func_call . LexToken(semi,';',56,1405)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<CallNode @ 0x7ff028cf84e0>,'.',<tuple @ 0x7ff028ccc8c8>] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7ff028cf8908> (<tools.ast.CallNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi factor . LexToken(semi,';',56,1405)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<CallNode @ 0x7ff028cf8908>] and goto state 76
   yacc.py: 506:Result : <CallNode @ 0x7ff028cf8908> (<tools.ast.CallNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi base_call . LexToken(semi,';',56,1405)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<CallNode @ 0x7ff028cf8908>] and goto state 75
   yacc.py: 506:Result : <CallNode @ 0x7ff028cf8908> (<tools.ast.CallNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi term . LexToken(semi,';',56,1405)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<CallNode @ 0x7ff028cf8908>] and goto state 74
   yacc.py: 506:Result : <CallNode @ 0x7ff028cf8908> (<tools.ast.CallNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi op . LexToken(semi,';',56,1405)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<CallNode @ 0x7ff028cf8908>] and goto state 73
   yacc.py: 506:Result : <CallNode @ 0x7ff028cf8908> (<tools.ast.CallNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi comp . LexToken(semi,';',56,1405)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<CallNode @ 0x7ff028cf8908>] and goto state 111
   yacc.py: 506:Result : <CallNode @ 0x7ff028cf8908> (<tools.ast.CallNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi expr . LexToken(semi,';',56,1405)
   yacc.py: 445:Action : Shift and goto state 151
   yacc.py: 410:
   yacc.py: 411:State  : 151
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi expr semi . LexToken(ccur,'}',57,1415)
   yacc.py: 471:Action : Reduce rule [block -> expr semi] with [<CallNode @ 0x7ff028cf8908>,';'] and goto state 190
   yacc.py: 506:Result : <list @ 0x7ff028d0f448> ([<tools.ast.CallNode object at 0x7ff028c ...)
   yacc.py: 410:
   yacc.py: 411:State  : 190
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi expr semi block . LexToken(ccur,'}',57,1415)
   yacc.py: 471:Action : Reduce rule [block -> expr semi block] with [<WhileNode @ 0x7ff028cf82b0>,';',<list @ 0x7ff028d0f448>] and goto state 190
   yacc.py: 506:Result : <list @ 0x7ff028d0f388> ([<tools.ast.WhileNode object at 0x7ff028 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 190
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur expr semi block . LexToken(ccur,'}',57,1415)
   yacc.py: 471:Action : Reduce rule [block -> expr semi block] with [<AssignNode @ 0x7ff028d00c88>,';',<list @ 0x7ff028d0f388>] and goto state 135
   yacc.py: 506:Result : <list @ 0x7ff028d0f448> ([<tools.ast.AssignNode object at 0x7ff02 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 135
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur block . LexToken(ccur,'}',57,1415)
   yacc.py: 445:Action : Shift and goto state 177
   yacc.py: 410:
   yacc.py: 411:State  : 177
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in ocur block ccur . LexToken(ccur,'}',58,1421)
   yacc.py: 471:Action : Reduce rule [atom -> ocur block ccur] with ['{',<list @ 0x7ff028d0f448>,'}'] and goto state 79
   yacc.py: 506:Result : <BlockNode @ 0x7ff028d00c18> (<tools.ast.BlockNode object at 0x7ff028d ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in atom . LexToken(ccur,'}',58,1421)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<BlockNode @ 0x7ff028d00c18>] and goto state 77
   yacc.py: 506:Result : <BlockNode @ 0x7ff028d00c18> (<tools.ast.BlockNode object at 0x7ff028d ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in factor . LexToken(ccur,'}',58,1421)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<BlockNode @ 0x7ff028d00c18>] and goto state 76
   yacc.py: 506:Result : <BlockNode @ 0x7ff028d00c18> (<tools.ast.BlockNode object at 0x7ff028d ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in base_call . LexToken(ccur,'}',58,1421)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<BlockNode @ 0x7ff028d00c18>] and goto state 75
   yacc.py: 506:Result : <BlockNode @ 0x7ff028d00c18> (<tools.ast.BlockNode object at 0x7ff028d ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in term . LexToken(ccur,'}',58,1421)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<BlockNode @ 0x7ff028d00c18>] and goto state 74
   yacc.py: 506:Result : <BlockNode @ 0x7ff028d00c18> (<tools.ast.BlockNode object at 0x7ff028d ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in op . LexToken(ccur,'}',58,1421)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<BlockNode @ 0x7ff028d00c18>] and goto state 73
   yacc.py: 506:Result : <BlockNode @ 0x7ff028d00c18> (<tools.ast.BlockNode object at 0x7ff028d ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in comp . LexToken(ccur,'}',58,1421)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<BlockNode @ 0x7ff028d00c18>] and goto state 196
   yacc.py: 506:Result : <BlockNode @ 0x7ff028d00c18> (<tools.ast.BlockNode object at 0x7ff028d ...)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur let let_list in expr . LexToken(ccur,'}',58,1421)
   yacc.py: 471:Action : Reduce rule [factor -> let let_list in expr] with ['let',<list @ 0x7ff028d10448>,'in',<BlockNode @ 0x7ff028d00c18>] and goto state 77
   yacc.py: 506:Result : <LetNode @ 0x7ff028d00828> (<tools.ast.LetNode object at 0x7ff028d00 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur factor . LexToken(ccur,'}',58,1421)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<LetNode @ 0x7ff028d00828>] and goto state 76
   yacc.py: 506:Result : <LetNode @ 0x7ff028d00828> (<tools.ast.LetNode object at 0x7ff028d00 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur base_call . LexToken(ccur,'}',58,1421)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<LetNode @ 0x7ff028d00828>] and goto state 75
   yacc.py: 506:Result : <LetNode @ 0x7ff028d00828> (<tools.ast.LetNode object at 0x7ff028d00 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur term . LexToken(ccur,'}',58,1421)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<LetNode @ 0x7ff028d00828>] and goto state 74
   yacc.py: 506:Result : <LetNode @ 0x7ff028d00828> (<tools.ast.LetNode object at 0x7ff028d00 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur op . LexToken(ccur,'}',58,1421)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<LetNode @ 0x7ff028d00828>] and goto state 73
   yacc.py: 506:Result : <LetNode @ 0x7ff028d00828> (<tools.ast.LetNode object at 0x7ff028d00 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur comp . LexToken(ccur,'}',58,1421)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<LetNode @ 0x7ff028d00828>] and goto state 206
   yacc.py: 506:Result : <LetNode @ 0x7ff028d00828> (<tools.ast.LetNode object at 0x7ff028d00 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 206
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur expr . LexToken(ccur,'}',58,1421)
   yacc.py: 445:Action : Shift and goto state 222
   yacc.py: 410:
   yacc.py: 411:State  : 222
   yacc.py: 430:Defaulted state 222: Reduce using 25
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur expr ccur . None
   yacc.py: 471:Action : Reduce rule [def_func -> id opar formals cpar colon type ocur expr ccur] with ['testing6','(',[('a', 'Int')],')',':','IO','{',<LetNode @ 0x7ff028d00828>,'}'] and goto state 18
   yacc.py: 506:Result : <FuncDeclarationNode @ 0x7ff028d00780> (<tools.ast.FuncDeclarationNode object at ...)
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func . LexToken(semi,';',58,1422)
   yacc.py: 445:Action : Shift and goto state 30
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi . LexToken(id,'testing7',60,1429)
   yacc.py: 445:Action : Shift and goto state 19
   yacc.py: 410:
   yacc.py: 411:State  : 19
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id . LexToken(opar,'(',60,1437)
   yacc.py: 445:Action : Shift and goto state 32
   yacc.py: 410:
   yacc.py: 411:State  : 32
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar . LexToken(cpar,')',60,1438)
   yacc.py: 474:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x55810cd760f0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 430:Defaulted state 45: Reduce using 34
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar epsilon . LexToken(cpar,')',60,1438)
   yacc.py: 471:Action : Reduce rule [param_list_empty -> epsilon] with [None] and goto state 43
   yacc.py: 506:Result : <list @ 0x7ff028d0f348> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 43
   yacc.py: 430:Defaulted state 43: Reduce using 31
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar param_list_empty . LexToken(cpar,')',60,1438)
   yacc.py: 471:Action : Reduce rule [formals -> param_list_empty] with [[]] and goto state 51
   yacc.py: 506:Result : <list @ 0x7ff028d0f348> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals . LexToken(cpar,')',60,1438)
   yacc.py: 445:Action : Shift and goto state 64
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar . LexToken(colon,':',60,1439)
   yacc.py: 445:Action : Shift and goto state 100
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon . LexToken(type,'Object',60,1441)
   yacc.py: 445:Action : Shift and goto state 138
   yacc.py: 410:
   yacc.py: 411:State  : 138
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type . LexToken(ocur,'{',60,1448)
   yacc.py: 445:Action : Shift and goto state 181
   yacc.py: 410:
   yacc.py: 411:State  : 181
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur . LexToken(case,'case',61,1458)
   yacc.py: 445:Action : Shift and goto state 85
   yacc.py: 410:
   yacc.py: 411:State  : 85
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case . LexToken(num,2.0,61,1463)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case num . LexToken(plus,'+',61,1465)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [2.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028d00518> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case atom . LexToken(plus,'+',61,1465)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028d00518>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028d00518> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case factor . LexToken(plus,'+',61,1465)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028d00518>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028d00518> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case base_call . LexToken(plus,'+',61,1465)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7ff028d00518>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028d00518> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case term . LexToken(plus,'+',61,1465)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7ff028d00518>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028d00518> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case op . LexToken(plus,'+',61,1465)
   yacc.py: 445:Action : Shift and goto state 117
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case op plus . LexToken(num,2.0,61,1467)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case op plus num . LexToken(of,'of',61,1469)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [2.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028d000f0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case op plus atom . LexToken(of,'of',61,1469)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028d000f0>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028d000f0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case op plus factor . LexToken(of,'of',61,1469)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028d000f0>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028d000f0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case op plus base_call . LexToken(of,'of',61,1469)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7ff028d000f0>] and goto state 159
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028d000f0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case op plus term . LexToken(of,'of',61,1469)
   yacc.py: 471:Action : Reduce rule [op -> op plus term] with [<ConstantNumNode @ 0x7ff028d00518>,'+',<ConstantNumNode @ 0x7ff028d000f0>] and goto state 74
   yacc.py: 506:Result : <PlusNode @ 0x7ff028cf88d0> (<tools.ast.PlusNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case op . LexToken(of,'of',61,1469)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<PlusNode @ 0x7ff028cf88d0>] and goto state 73
   yacc.py: 506:Result : <PlusNode @ 0x7ff028cf88d0> (<tools.ast.PlusNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case comp . LexToken(of,'of',61,1469)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<PlusNode @ 0x7ff028cf88d0>] and goto state 131
   yacc.py: 506:Result : <PlusNode @ 0x7ff028cf88d0> (<tools.ast.PlusNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr . LexToken(of,'of',61,1469)
   yacc.py: 445:Action : Shift and goto state 174
   yacc.py: 410:
   yacc.py: 411:State  : 174
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of . LexToken(id,'x',62,1484)
   yacc.py: 445:Action : Shift and goto state 202
   yacc.py: 410:
   yacc.py: 411:State  : 202
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of id . LexToken(colon,':',62,1485)
   yacc.py: 445:Action : Shift and goto state 218
   yacc.py: 410:
   yacc.py: 411:State  : 218
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of id colon . LexToken(type,'Int',62,1487)
   yacc.py: 445:Action : Shift and goto state 227
   yacc.py: 410:
   yacc.py: 411:State  : 227
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of id colon type . LexToken(rarrow,'=>',62,1491)
   yacc.py: 445:Action : Shift and goto state 229
   yacc.py: 410:
   yacc.py: 411:State  : 229
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of id colon type rarrow . LexToken(new,'new',62,1494)
   yacc.py: 445:Action : Shift and goto state 89
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of id colon type rarrow new . LexToken(type,'IO',62,1498)
   yacc.py: 445:Action : Shift and goto state 134
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of id colon type rarrow new type . LexToken(dot,'.',62,1500)
   yacc.py: 471:Action : Reduce rule [atom -> new type] with ['new','IO'] and goto state 79
   yacc.py: 506:Result : <InstantiateNode @ 0x7ff028cf89b0> (<tools.ast.InstantiateNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of id colon type rarrow atom . LexToken(dot,'.',62,1500)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<InstantiateNode @ 0x7ff028cf89b0>] and goto state 77
   yacc.py: 506:Result : <InstantiateNode @ 0x7ff028cf89b0> (<tools.ast.InstantiateNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of id colon type rarrow factor . LexToken(dot,'.',62,1500)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of id colon type rarrow factor dot . LexToken(id,'out_string',62,1501)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of id colon type rarrow factor dot id . LexToken(opar,'(',62,1511)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of id colon type rarrow factor dot id opar . LexToken(string,'Es un entero!',62,1526)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of id colon type rarrow factor dot id opar string . LexToken(cpar,')',62,1527)
   yacc.py: 471:Action : Reduce rule [atom -> string] with ['Es un entero!'] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028cf8828> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of id colon type rarrow factor dot id opar atom . LexToken(cpar,')',62,1527)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7ff028cf8828>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028cf8828> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of id colon type rarrow factor dot id opar factor . LexToken(cpar,')',62,1527)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantStrNode @ 0x7ff028cf8828>] and goto state 76
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028cf8828> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of id colon type rarrow factor dot id opar base_call . LexToken(cpar,')',62,1527)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantStrNode @ 0x7ff028cf8828>] and goto state 75
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028cf8828> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of id colon type rarrow factor dot id opar term . LexToken(cpar,')',62,1527)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantStrNode @ 0x7ff028cf8828>] and goto state 74
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028cf8828> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of id colon type rarrow factor dot id opar op . LexToken(cpar,')',62,1527)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantStrNode @ 0x7ff028cf8828>] and goto state 73
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028cf8828> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of id colon type rarrow factor dot id opar comp . LexToken(cpar,')',62,1527)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantStrNode @ 0x7ff028cf8828>] and goto state 155
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028cf8828> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of id colon type rarrow factor dot id opar expr . LexToken(cpar,')',62,1527)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<ConstantStrNode @ 0x7ff028cf8828>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7ff028d103c8> ([<tools.ast.ConstantStrNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of id colon type rarrow factor dot id opar arg_list . LexToken(cpar,')',62,1527)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7ff028d103c8>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7ff028d103c8> ([<tools.ast.ConstantStrNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of id colon type rarrow factor dot id opar args . LexToken(cpar,')',62,1527)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of id colon type rarrow factor dot id opar args cpar . LexToken(semi,';',62,1528)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['out_string','(',<list @ 0x7ff028d103c8>,')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7ff028ccc8c8> (('out_string', [<tools.ast.ConstantStrNo ...)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of id colon type rarrow factor dot func_call . LexToken(semi,';',62,1528)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<InstantiateNode @ 0x7ff028cf89b0>,'.',<tuple @ 0x7ff028ccc8c8>] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7ff028cf8b38> (<tools.ast.CallNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of id colon type rarrow factor . LexToken(semi,';',62,1528)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<CallNode @ 0x7ff028cf8b38>] and goto state 76
   yacc.py: 506:Result : <CallNode @ 0x7ff028cf8b38> (<tools.ast.CallNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of id colon type rarrow base_call . LexToken(semi,';',62,1528)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<CallNode @ 0x7ff028cf8b38>] and goto state 75
   yacc.py: 506:Result : <CallNode @ 0x7ff028cf8b38> (<tools.ast.CallNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of id colon type rarrow term . LexToken(semi,';',62,1528)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<CallNode @ 0x7ff028cf8b38>] and goto state 74
   yacc.py: 506:Result : <CallNode @ 0x7ff028cf8b38> (<tools.ast.CallNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of id colon type rarrow op . LexToken(semi,';',62,1528)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<CallNode @ 0x7ff028cf8b38>] and goto state 73
   yacc.py: 506:Result : <CallNode @ 0x7ff028cf8b38> (<tools.ast.CallNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of id colon type rarrow comp . LexToken(semi,';',62,1528)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<CallNode @ 0x7ff028cf8b38>] and goto state 231
   yacc.py: 506:Result : <CallNode @ 0x7ff028cf8b38> (<tools.ast.CallNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 231
   yacc.py: 430:Defaulted state 231: Reduce using 44
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of id colon type rarrow expr . LexToken(semi,';',62,1528)
   yacc.py: 471:Action : Reduce rule [casep -> id colon type rarrow expr] with ['x',':','Int','=>',<CallNode @ 0x7ff028cf8b38>] and goto state 200
   yacc.py: 506:Result : <OptionNode @ 0x7ff028cf8b00> (<tools.ast.OptionNode object at 0x7ff028 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 200
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep . LexToken(semi,';',62,1528)
   yacc.py: 445:Action : Shift and goto state 215
   yacc.py: 410:
   yacc.py: 411:State  : 215
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi . LexToken(id,'y',63,1542)
   yacc.py: 445:Action : Shift and goto state 202
   yacc.py: 410:
   yacc.py: 411:State  : 202
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi id . LexToken(colon,':',63,1543)
   yacc.py: 445:Action : Shift and goto state 218
   yacc.py: 410:
   yacc.py: 411:State  : 218
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi id colon . LexToken(type,'String',63,1545)
   yacc.py: 445:Action : Shift and goto state 227
   yacc.py: 410:
   yacc.py: 411:State  : 227
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi id colon type . LexToken(rarrow,'=>',63,1552)
   yacc.py: 445:Action : Shift and goto state 229
   yacc.py: 410:
   yacc.py: 411:State  : 229
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi id colon type rarrow . LexToken(new,'new',63,1555)
   yacc.py: 445:Action : Shift and goto state 89
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi id colon type rarrow new . LexToken(type,'IO',63,1559)
   yacc.py: 445:Action : Shift and goto state 134
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi id colon type rarrow new type . LexToken(dot,'.',63,1561)
   yacc.py: 471:Action : Reduce rule [atom -> new type] with ['new','IO'] and goto state 79
   yacc.py: 506:Result : <InstantiateNode @ 0x7ff028cf8160> (<tools.ast.InstantiateNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi id colon type rarrow atom . LexToken(dot,'.',63,1561)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<InstantiateNode @ 0x7ff028cf8160>] and goto state 77
   yacc.py: 506:Result : <InstantiateNode @ 0x7ff028cf8160> (<tools.ast.InstantiateNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi id colon type rarrow factor . LexToken(dot,'.',63,1561)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi id colon type rarrow factor dot . LexToken(id,'out_string',63,1562)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi id colon type rarrow factor dot id . LexToken(opar,'(',63,1572)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi id colon type rarrow factor dot id opar . LexToken(string,'Es una cadena!',63,1588)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi id colon type rarrow factor dot id opar string . LexToken(cpar,')',63,1589)
   yacc.py: 471:Action : Reduce rule [atom -> string] with [<str @ 0x7ff028dbf3f0>] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028cf8ba8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi id colon type rarrow factor dot id opar atom . LexToken(cpar,')',63,1589)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7ff028cf8ba8>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028cf8ba8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi id colon type rarrow factor dot id opar factor . LexToken(cpar,')',63,1589)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantStrNode @ 0x7ff028cf8ba8>] and goto state 76
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028cf8ba8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi id colon type rarrow factor dot id opar base_call . LexToken(cpar,')',63,1589)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantStrNode @ 0x7ff028cf8ba8>] and goto state 75
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028cf8ba8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi id colon type rarrow factor dot id opar term . LexToken(cpar,')',63,1589)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantStrNode @ 0x7ff028cf8ba8>] and goto state 74
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028cf8ba8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi id colon type rarrow factor dot id opar op . LexToken(cpar,')',63,1589)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantStrNode @ 0x7ff028cf8ba8>] and goto state 73
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028cf8ba8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi id colon type rarrow factor dot id opar comp . LexToken(cpar,')',63,1589)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantStrNode @ 0x7ff028cf8ba8>] and goto state 155
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028cf8ba8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi id colon type rarrow factor dot id opar expr . LexToken(cpar,')',63,1589)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<ConstantStrNode @ 0x7ff028cf8ba8>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7ff028d10408> ([<tools.ast.ConstantStrNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi id colon type rarrow factor dot id opar arg_list . LexToken(cpar,')',63,1589)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7ff028d10408>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7ff028d10408> ([<tools.ast.ConstantStrNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi id colon type rarrow factor dot id opar args . LexToken(cpar,')',63,1589)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi id colon type rarrow factor dot id opar args cpar . LexToken(semi,';',63,1590)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['out_string','(',<list @ 0x7ff028d10408>,')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7ff028ccc8c8> (('out_string', [<tools.ast.ConstantStrNo ...)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi id colon type rarrow factor dot func_call . LexToken(semi,';',63,1590)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<InstantiateNode @ 0x7ff028cf8160>,'.',<tuple @ 0x7ff028ccc8c8>] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7ff028cf8e10> (<tools.ast.CallNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi id colon type rarrow factor . LexToken(semi,';',63,1590)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<CallNode @ 0x7ff028cf8e10>] and goto state 76
   yacc.py: 506:Result : <CallNode @ 0x7ff028cf8e10> (<tools.ast.CallNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi id colon type rarrow base_call . LexToken(semi,';',63,1590)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<CallNode @ 0x7ff028cf8e10>] and goto state 75
   yacc.py: 506:Result : <CallNode @ 0x7ff028cf8e10> (<tools.ast.CallNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi id colon type rarrow term . LexToken(semi,';',63,1590)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<CallNode @ 0x7ff028cf8e10>] and goto state 74
   yacc.py: 506:Result : <CallNode @ 0x7ff028cf8e10> (<tools.ast.CallNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi id colon type rarrow op . LexToken(semi,';',63,1590)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<CallNode @ 0x7ff028cf8e10>] and goto state 73
   yacc.py: 506:Result : <CallNode @ 0x7ff028cf8e10> (<tools.ast.CallNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi id colon type rarrow comp . LexToken(semi,';',63,1590)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<CallNode @ 0x7ff028cf8e10>] and goto state 231
   yacc.py: 506:Result : <CallNode @ 0x7ff028cf8e10> (<tools.ast.CallNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 231
   yacc.py: 430:Defaulted state 231: Reduce using 44
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi id colon type rarrow expr . LexToken(semi,';',63,1590)
   yacc.py: 471:Action : Reduce rule [casep -> id colon type rarrow expr] with ['y',':','String','=>',<CallNode @ 0x7ff028cf8e10>] and goto state 200
   yacc.py: 506:Result : <OptionNode @ 0x7ff028cf8dd8> (<tools.ast.OptionNode object at 0x7ff028 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 200
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi casep . LexToken(semi,';',63,1590)
   yacc.py: 445:Action : Shift and goto state 215
   yacc.py: 410:
   yacc.py: 411:State  : 215
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi casep semi . LexToken(id,'z',64,1605)
   yacc.py: 445:Action : Shift and goto state 202
   yacc.py: 410:
   yacc.py: 411:State  : 202
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi casep semi id . LexToken(colon,':',64,1606)
   yacc.py: 445:Action : Shift and goto state 218
   yacc.py: 410:
   yacc.py: 411:State  : 218
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi casep semi id colon . LexToken(type,'Bool',64,1608)
   yacc.py: 445:Action : Shift and goto state 227
   yacc.py: 410:
   yacc.py: 411:State  : 227
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi casep semi id colon type . LexToken(rarrow,'=>',64,1613)
   yacc.py: 445:Action : Shift and goto state 229
   yacc.py: 410:
   yacc.py: 411:State  : 229
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi casep semi id colon type rarrow . LexToken(new,'new',64,1616)
   yacc.py: 445:Action : Shift and goto state 89
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi casep semi id colon type rarrow new . LexToken(type,'IO',64,1620)
   yacc.py: 445:Action : Shift and goto state 134
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi casep semi id colon type rarrow new type . LexToken(dot,'.',64,1622)
   yacc.py: 471:Action : Reduce rule [atom -> new type] with ['new','IO'] and goto state 79
   yacc.py: 506:Result : <InstantiateNode @ 0x7ff028cf8cf8> (<tools.ast.InstantiateNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi casep semi id colon type rarrow atom . LexToken(dot,'.',64,1622)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<InstantiateNode @ 0x7ff028cf8cf8>] and goto state 77
   yacc.py: 506:Result : <InstantiateNode @ 0x7ff028cf8cf8> (<tools.ast.InstantiateNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi casep semi id colon type rarrow factor . LexToken(dot,'.',64,1622)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi casep semi id colon type rarrow factor dot . LexToken(id,'out_string',64,1623)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi casep semi id colon type rarrow factor dot id . LexToken(opar,'(',64,1633)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi casep semi id colon type rarrow factor dot id opar . LexToken(string,'Es un booleano!',64,1650)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi casep semi id colon type rarrow factor dot id opar string . LexToken(cpar,')',64,1651)
   yacc.py: 471:Action : Reduce rule [atom -> string] with [<str @ 0x7ff028dbfe70>] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028cf8e80> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi casep semi id colon type rarrow factor dot id opar atom . LexToken(cpar,')',64,1651)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7ff028cf8e80>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028cf8e80> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi casep semi id colon type rarrow factor dot id opar factor . LexToken(cpar,')',64,1651)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantStrNode @ 0x7ff028cf8e80>] and goto state 76
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028cf8e80> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi casep semi id colon type rarrow factor dot id opar base_call . LexToken(cpar,')',64,1651)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantStrNode @ 0x7ff028cf8e80>] and goto state 75
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028cf8e80> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi casep semi id colon type rarrow factor dot id opar term . LexToken(cpar,')',64,1651)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantStrNode @ 0x7ff028cf8e80>] and goto state 74
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028cf8e80> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi casep semi id colon type rarrow factor dot id opar op . LexToken(cpar,')',64,1651)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantStrNode @ 0x7ff028cf8e80>] and goto state 73
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028cf8e80> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi casep semi id colon type rarrow factor dot id opar comp . LexToken(cpar,')',64,1651)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantStrNode @ 0x7ff028cf8e80>] and goto state 155
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028cf8e80> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi casep semi id colon type rarrow factor dot id opar expr . LexToken(cpar,')',64,1651)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<ConstantStrNode @ 0x7ff028cf8e80>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7ff028d0f388> ([<tools.ast.ConstantStrNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi casep semi id colon type rarrow factor dot id opar arg_list . LexToken(cpar,')',64,1651)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7ff028d0f388>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7ff028d0f388> ([<tools.ast.ConstantStrNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi casep semi id colon type rarrow factor dot id opar args . LexToken(cpar,')',64,1651)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi casep semi id colon type rarrow factor dot id opar args cpar . LexToken(semi,';',64,1652)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['out_string','(',<list @ 0x7ff028d0f388>,')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7ff028ccc8c8> (('out_string', [<tools.ast.ConstantStrNo ...)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi casep semi id colon type rarrow factor dot func_call . LexToken(semi,';',64,1652)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<InstantiateNode @ 0x7ff028cf8cf8>,'.',<tuple @ 0x7ff028ccc8c8>] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7ff028cf8fd0> (<tools.ast.CallNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi casep semi id colon type rarrow factor . LexToken(semi,';',64,1652)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<CallNode @ 0x7ff028cf8fd0>] and goto state 76
   yacc.py: 506:Result : <CallNode @ 0x7ff028cf8fd0> (<tools.ast.CallNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi casep semi id colon type rarrow base_call . LexToken(semi,';',64,1652)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<CallNode @ 0x7ff028cf8fd0>] and goto state 75
   yacc.py: 506:Result : <CallNode @ 0x7ff028cf8fd0> (<tools.ast.CallNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi casep semi id colon type rarrow term . LexToken(semi,';',64,1652)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<CallNode @ 0x7ff028cf8fd0>] and goto state 74
   yacc.py: 506:Result : <CallNode @ 0x7ff028cf8fd0> (<tools.ast.CallNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi casep semi id colon type rarrow op . LexToken(semi,';',64,1652)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<CallNode @ 0x7ff028cf8fd0>] and goto state 73
   yacc.py: 506:Result : <CallNode @ 0x7ff028cf8fd0> (<tools.ast.CallNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi casep semi id colon type rarrow comp . LexToken(semi,';',64,1652)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<CallNode @ 0x7ff028cf8fd0>] and goto state 231
   yacc.py: 506:Result : <CallNode @ 0x7ff028cf8fd0> (<tools.ast.CallNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 231
   yacc.py: 430:Defaulted state 231: Reduce using 44
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi casep semi id colon type rarrow expr . LexToken(semi,';',64,1652)
   yacc.py: 471:Action : Reduce rule [casep -> id colon type rarrow expr] with ['z',':','Bool','=>',<CallNode @ 0x7ff028cf8fd0>] and goto state 200
   yacc.py: 506:Result : <OptionNode @ 0x7ff028cf8f98> (<tools.ast.OptionNode object at 0x7ff028 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 200
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi casep semi casep . LexToken(semi,';',64,1652)
   yacc.py: 445:Action : Shift and goto state 215
   yacc.py: 410:
   yacc.py: 411:State  : 215
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi casep semi casep semi . LexToken(esac,'esac',65,1662)
   yacc.py: 471:Action : Reduce rule [cases_list -> casep semi] with [<OptionNode @ 0x7ff028cf8f98>,';'] and goto state 226
   yacc.py: 506:Result : <list @ 0x7ff028d0f248> ([<tools.ast.OptionNode object at 0x7ff02 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 226
   yacc.py: 430:Defaulted state 226: Reduce using 41
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi casep semi cases_list . LexToken(esac,'esac',65,1662)
   yacc.py: 471:Action : Reduce rule [cases_list -> casep semi cases_list] with [<OptionNode @ 0x7ff028cf8dd8>,';',<list @ 0x7ff028d0f248>] and goto state 226
   yacc.py: 506:Result : <list @ 0x7ff028d0f148> ([<tools.ast.OptionNode object at 0x7ff02 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 226
   yacc.py: 430:Defaulted state 226: Reduce using 41
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of casep semi cases_list . LexToken(esac,'esac',65,1662)
   yacc.py: 471:Action : Reduce rule [cases_list -> casep semi cases_list] with [<OptionNode @ 0x7ff028cf8b00>,';',<list @ 0x7ff028d0f148>] and goto state 199
   yacc.py: 506:Result : <list @ 0x7ff028d0f248> ([<tools.ast.OptionNode object at 0x7ff02 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 199
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of cases_list . LexToken(esac,'esac',65,1662)
   yacc.py: 445:Action : Shift and goto state 214
   yacc.py: 410:
   yacc.py: 411:State  : 214
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur case expr of cases_list esac . LexToken(ccur,'}',66,1671)
   yacc.py: 471:Action : Reduce rule [factor -> case expr of cases_list esac] with ['case',<PlusNode @ 0x7ff028cf88d0>,'of',<list @ 0x7ff028d0f248>,'esac'] and goto state 77
   yacc.py: 506:Result : <CaseNode @ 0x7ff028cf8cc0> (<tools.ast.CaseNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur factor . LexToken(ccur,'}',66,1671)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<CaseNode @ 0x7ff028cf8cc0>] and goto state 76
   yacc.py: 506:Result : <CaseNode @ 0x7ff028cf8cc0> (<tools.ast.CaseNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur base_call . LexToken(ccur,'}',66,1671)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<CaseNode @ 0x7ff028cf8cc0>] and goto state 75
   yacc.py: 506:Result : <CaseNode @ 0x7ff028cf8cc0> (<tools.ast.CaseNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur term . LexToken(ccur,'}',66,1671)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<CaseNode @ 0x7ff028cf8cc0>] and goto state 74
   yacc.py: 506:Result : <CaseNode @ 0x7ff028cf8cc0> (<tools.ast.CaseNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur op . LexToken(ccur,'}',66,1671)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<CaseNode @ 0x7ff028cf8cc0>] and goto state 73
   yacc.py: 506:Result : <CaseNode @ 0x7ff028cf8cc0> (<tools.ast.CaseNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur comp . LexToken(ccur,'}',66,1671)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<CaseNode @ 0x7ff028cf8cc0>] and goto state 206
   yacc.py: 506:Result : <CaseNode @ 0x7ff028cf8cc0> (<tools.ast.CaseNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 206
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur expr . LexToken(ccur,'}',66,1671)
   yacc.py: 445:Action : Shift and goto state 222
   yacc.py: 410:
   yacc.py: 411:State  : 222
   yacc.py: 430:Defaulted state 222: Reduce using 25
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur expr ccur . None
   yacc.py: 471:Action : Reduce rule [def_func -> id opar formals cpar colon type ocur expr ccur] with ['testing7','(',[],')',':','Object','{',<CaseNode @ 0x7ff028cf8cc0>,'}'] and goto state 18
   yacc.py: 506:Result : <FuncDeclarationNode @ 0x7ff028cf8c88> (<tools.ast.FuncDeclarationNode object at ...)
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func . LexToken(semi,';',66,1672)
   yacc.py: 445:Action : Shift and goto state 30
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi . LexToken(id,'a',68,1679)
   yacc.py: 445:Action : Shift and goto state 19
   yacc.py: 410:
   yacc.py: 411:State  : 19
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi id . LexToken(colon,':',68,1680)
   yacc.py: 445:Action : Shift and goto state 31
   yacc.py: 410:
   yacc.py: 411:State  : 31
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi id colon . LexToken(type,'Int',68,1682)
   yacc.py: 445:Action : Shift and goto state 49
   yacc.py: 410:
   yacc.py: 411:State  : 49
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi id colon type . LexToken(larrow,'<-',68,1686)
   yacc.py: 445:Action : Shift and goto state 62
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi id colon type larrow . LexToken(num,1.0,68,1689)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi id colon type larrow num . LexToken(semi,';',68,1690)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [1.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028d00cc0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi id colon type larrow atom . LexToken(semi,';',68,1690)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028d00cc0>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028d00cc0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi id colon type larrow factor . LexToken(semi,';',68,1690)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028d00cc0>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028d00cc0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi id colon type larrow base_call . LexToken(semi,';',68,1690)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7ff028d00cc0>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028d00cc0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi id colon type larrow term . LexToken(semi,';',68,1690)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7ff028d00cc0>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028d00cc0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi id colon type larrow op . LexToken(semi,';',68,1690)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantNumNode @ 0x7ff028d00cc0>] and goto state 73
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028d00cc0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi id colon type larrow comp . LexToken(semi,';',68,1690)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantNumNode @ 0x7ff028d00cc0>] and goto state 97
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028d00cc0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 19
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi id colon type larrow expr . LexToken(semi,';',68,1690)
   yacc.py: 471:Action : Reduce rule [def_attr -> id colon type larrow expr] with ['a',':','Int','<-',<ConstantNumNode @ 0x7ff028d00cc0>] and goto state 17
   yacc.py: 506:Result : <AttrDeclarationNode @ 0x7ff028e50dd8> (<tools.ast.AttrDeclarationNode object at ...)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr . LexToken(semi,';',68,1690)
   yacc.py: 445:Action : Shift and goto state 29
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi . LexToken(id,'testing8',70,1697)
   yacc.py: 445:Action : Shift and goto state 19
   yacc.py: 410:
   yacc.py: 411:State  : 19
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id . LexToken(opar,'(',70,1705)
   yacc.py: 445:Action : Shift and goto state 32
   yacc.py: 410:
   yacc.py: 411:State  : 32
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar . LexToken(id,'x',70,1706)
   yacc.py: 445:Action : Shift and goto state 46
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar id . LexToken(colon,':',70,1707)
   yacc.py: 445:Action : Shift and goto state 61
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar id colon . LexToken(type,'Int',70,1709)
   yacc.py: 445:Action : Shift and goto state 96
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar id colon type . LexToken(comma,',',70,1712)
   yacc.py: 471:Action : Reduce rule [param -> id colon type] with ['x',':','Int'] and goto state 44
   yacc.py: 506:Result : <tuple @ 0x7ff028ccc8c8> (('x', 'Int'))
   yacc.py: 410:
   yacc.py: 411:State  : 44
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar param . LexToken(comma,',',70,1712)
   yacc.py: 445:Action : Shift and goto state 60
   yacc.py: 410:
   yacc.py: 411:State  : 60
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar param comma . LexToken(id,'y',70,1714)
   yacc.py: 445:Action : Shift and goto state 46
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar param comma id . LexToken(colon,':',70,1715)
   yacc.py: 445:Action : Shift and goto state 61
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar param comma id colon . LexToken(type,'Int',70,1717)
   yacc.py: 445:Action : Shift and goto state 96
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar param comma id colon type . LexToken(cpar,')',70,1720)
   yacc.py: 471:Action : Reduce rule [param -> id colon type] with ['y',':','Int'] and goto state 44
   yacc.py: 506:Result : <tuple @ 0x7ff028ccadc8> (('y', 'Int'))
   yacc.py: 410:
   yacc.py: 411:State  : 44
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar param comma param . LexToken(cpar,')',70,1720)
   yacc.py: 471:Action : Reduce rule [param_list -> param] with [('y', 'Int')] and goto state 95
   yacc.py: 506:Result : <list @ 0x7ff028d0f148> ([('y', 'Int')])
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 430:Defaulted state 95: Reduce using 33
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar param comma param_list . LexToken(cpar,')',70,1720)
   yacc.py: 471:Action : Reduce rule [param_list -> param comma param_list] with [('x', 'Int'),',',[('y', 'Int')]] and goto state 42
   yacc.py: 506:Result : <list @ 0x7ff028d0f208> ([('x', 'Int'), ('y', 'Int')])
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 430:Defaulted state 42: Reduce using 30
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar param_list . LexToken(cpar,')',70,1720)
   yacc.py: 471:Action : Reduce rule [formals -> param_list] with [<list @ 0x7ff028d0f208>] and goto state 51
   yacc.py: 506:Result : <list @ 0x7ff028d0f208> ([('x', 'Int'), ('y', 'Int')])
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals . LexToken(cpar,')',70,1720)
   yacc.py: 445:Action : Shift and goto state 64
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar . LexToken(colon,':',70,1721)
   yacc.py: 445:Action : Shift and goto state 100
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon . LexToken(type,'Bool',70,1723)
   yacc.py: 445:Action : Shift and goto state 138
   yacc.py: 410:
   yacc.py: 411:State  : 138
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type . LexToken(ocur,'{',70,1728)
   yacc.py: 445:Action : Shift and goto state 181
   yacc.py: 410:
   yacc.py: 411:State  : 181
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur . LexToken(let,'let',71,1738)
   yacc.py: 445:Action : Shift and goto state 84
   yacc.py: 410:
   yacc.py: 411:State  : 84
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let . LexToken(id,'z',71,1742)
   yacc.py: 445:Action : Shift and goto state 46
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let id . LexToken(colon,':',71,1743)
   yacc.py: 445:Action : Shift and goto state 61
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let id colon . LexToken(type,'Int',71,1745)
   yacc.py: 445:Action : Shift and goto state 96
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let id colon type . LexToken(larrow,'<-',71,1749)
   yacc.py: 471:Action : Reduce rule [param -> id colon type] with ['z',':','Int'] and goto state 130
   yacc.py: 506:Result : <tuple @ 0x7ff028ccc948> (('z', 'Int'))
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let param . LexToken(larrow,'<-',71,1749)
   yacc.py: 445:Action : Shift and goto state 173
   yacc.py: 410:
   yacc.py: 411:State  : 173
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let param larrow . LexToken(num,3.0,71,1752)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let param larrow num . LexToken(comma,',',71,1753)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [3.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cf8048> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let param larrow atom . LexToken(comma,',',71,1753)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028cf8048>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cf8048> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let param larrow factor . LexToken(comma,',',71,1753)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028cf8048>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cf8048> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let param larrow base_call . LexToken(comma,',',71,1753)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7ff028cf8048>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cf8048> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let param larrow term . LexToken(comma,',',71,1753)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7ff028cf8048>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cf8048> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let param larrow op . LexToken(comma,',',71,1753)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantNumNode @ 0x7ff028cf8048>] and goto state 73
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cf8048> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let param larrow comp . LexToken(comma,',',71,1753)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantNumNode @ 0x7ff028cf8048>] and goto state 198
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cf8048> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let param larrow expr . LexToken(comma,',',71,1753)
   yacc.py: 471:Action : Reduce rule [let_assign -> param larrow expr] with [('z', 'Int'),'<-',<ConstantNumNode @ 0x7ff028cf8048>] and goto state 129
   yacc.py: 506:Result : <VarDeclarationNode @ 0x7ff028cf8da0> (<tools.ast.VarDeclarationNode object at  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_assign . LexToken(comma,',',71,1753)
   yacc.py: 445:Action : Shift and goto state 172
   yacc.py: 410:
   yacc.py: 411:State  : 172
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_assign comma . LexToken(id,'w',71,1755)
   yacc.py: 445:Action : Shift and goto state 46
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_assign comma id . LexToken(colon,':',71,1756)
   yacc.py: 445:Action : Shift and goto state 61
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_assign comma id colon . LexToken(type,'Int',71,1758)
   yacc.py: 445:Action : Shift and goto state 96
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_assign comma id colon type . LexToken(larrow,'<-',71,1762)
   yacc.py: 471:Action : Reduce rule [param -> id colon type] with ['w',':','Int'] and goto state 130
   yacc.py: 506:Result : <tuple @ 0x7ff028ccc948> (('w', 'Int'))
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_assign comma param . LexToken(larrow,'<-',71,1762)
   yacc.py: 445:Action : Shift and goto state 173
   yacc.py: 410:
   yacc.py: 411:State  : 173
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_assign comma param larrow . LexToken(num,4.0,71,1765)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_assign comma param larrow num . LexToken(in,'in',72,1775)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [4.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cfa198> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_assign comma param larrow atom . LexToken(in,'in',72,1775)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028cfa198>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cfa198> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_assign comma param larrow factor . LexToken(in,'in',72,1775)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028cfa198>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cfa198> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_assign comma param larrow base_call . LexToken(in,'in',72,1775)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7ff028cfa198>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cfa198> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_assign comma param larrow term . LexToken(in,'in',72,1775)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7ff028cfa198>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cfa198> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_assign comma param larrow op . LexToken(in,'in',72,1775)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantNumNode @ 0x7ff028cfa198>] and goto state 73
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cfa198> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_assign comma param larrow comp . LexToken(in,'in',72,1775)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantNumNode @ 0x7ff028cfa198>] and goto state 198
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cfa198> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_assign comma param larrow expr . LexToken(in,'in',72,1775)
   yacc.py: 471:Action : Reduce rule [let_assign -> param larrow expr] with [('w', 'Int'),'<-',<ConstantNumNode @ 0x7ff028cfa198>] and goto state 129
   yacc.py: 506:Result : <VarDeclarationNode @ 0x7ff028e507f0> (<tools.ast.VarDeclarationNode object at  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_assign comma let_assign . LexToken(in,'in',72,1775)
   yacc.py: 471:Action : Reduce rule [let_list -> let_assign] with [<VarDeclarationNode @ 0x7ff028e507f0>] and goto state 197
   yacc.py: 506:Result : <list @ 0x7ff028d0f288> ([<tools.ast.VarDeclarationNode object at ...)
   yacc.py: 410:
   yacc.py: 411:State  : 197
   yacc.py: 430:Defaulted state 197: Reduce using 37
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_assign comma let_list . LexToken(in,'in',72,1775)
   yacc.py: 471:Action : Reduce rule [let_list -> let_assign comma let_list] with [<VarDeclarationNode @ 0x7ff028cf8da0>,',',<list @ 0x7ff028d0f288>] and goto state 128
   yacc.py: 506:Result : <list @ 0x7ff028d0f0c8> ([<tools.ast.VarDeclarationNode object at ...)
   yacc.py: 410:
   yacc.py: 411:State  : 128
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list . LexToken(in,'in',72,1775)
   yacc.py: 445:Action : Shift and goto state 171
   yacc.py: 410:
   yacc.py: 411:State  : 171
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in . LexToken(isvoid,'isvoid',72,1778)
   yacc.py: 445:Action : Shift and goto state 82
   yacc.py: 410:
   yacc.py: 411:State  : 82
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid . LexToken(opar,'(',72,1785)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar . LexToken(num,3.0,72,1786)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar num . LexToken(plus,'+',72,1788)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [3.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cf8ef0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar atom . LexToken(plus,'+',72,1788)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028cf8ef0>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cf8ef0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar factor . LexToken(plus,'+',72,1788)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028cf8ef0>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cf8ef0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar base_call . LexToken(plus,'+',72,1788)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7ff028cf8ef0>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cf8ef0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar term . LexToken(plus,'+',72,1788)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7ff028cf8ef0>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cf8ef0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op . LexToken(plus,'+',72,1788)
   yacc.py: 445:Action : Shift and goto state 117
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op plus . LexToken(id,'a',72,1790)
   yacc.py: 445:Action : Shift and goto state 126
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op plus id . LexToken(star,'*',72,1792)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['a'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cfa0b8> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op plus atom . LexToken(star,'*',72,1792)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7ff028cfa0b8>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cfa0b8> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op plus factor . LexToken(star,'*',72,1792)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7ff028cfa0b8>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cfa0b8> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op plus base_call . LexToken(star,'*',72,1792)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7ff028cfa0b8>] and goto state 159
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cfa0b8> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op plus term . LexToken(star,'*',72,1792)
   yacc.py: 445:Action : Shift and goto state 119
   yacc.py: 410:
   yacc.py: 411:State  : 119
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op plus term star . LexToken(opar,'(',72,1794)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op plus term star opar . LexToken(id,'x',72,1795)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op plus term star opar id . LexToken(div,'/',72,1797)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['x'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cfa320> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op plus term star opar atom . LexToken(div,'/',72,1797)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7ff028cfa320>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cfa320> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op plus term star opar factor . LexToken(div,'/',72,1797)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7ff028cfa320>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cfa320> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op plus term star opar base_call . LexToken(div,'/',72,1797)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7ff028cfa320>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cfa320> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op plus term star opar term . LexToken(div,'/',72,1797)
   yacc.py: 445:Action : Shift and goto state 120
   yacc.py: 410:
   yacc.py: 411:State  : 120
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op plus term star opar term div . LexToken(id,'w',72,1799)
   yacc.py: 445:Action : Shift and goto state 126
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op plus term star opar term div id . LexToken(plus,'+',72,1801)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['w'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cfa208> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op plus term star opar term div atom . LexToken(plus,'+',72,1801)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7ff028cfa208>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cfa208> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op plus term star opar term div factor . LexToken(plus,'+',72,1801)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7ff028cfa208>] and goto state 163
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cfa208> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 163
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op plus term star opar term div base_call . LexToken(plus,'+',72,1801)
   yacc.py: 471:Action : Reduce rule [term -> term div base_call] with [<VariableNode @ 0x7ff028cfa320>,'/',<VariableNode @ 0x7ff028cfa208>] and goto state 75
   yacc.py: 506:Result : <DivNode @ 0x7ff028cfa518> (<tools.ast.DivNode object at 0x7ff028cfa ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op plus term star opar term . LexToken(plus,'+',72,1801)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<DivNode @ 0x7ff028cfa518>] and goto state 74
   yacc.py: 506:Result : <DivNode @ 0x7ff028cfa518> (<tools.ast.DivNode object at 0x7ff028cfa ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op plus term star opar op . LexToken(plus,'+',72,1801)
   yacc.py: 445:Action : Shift and goto state 117
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op plus term star opar op plus . LexToken(new,'new',72,1803)
   yacc.py: 445:Action : Shift and goto state 89
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op plus term star opar op plus new . LexToken(type,'Int',72,1807)
   yacc.py: 445:Action : Shift and goto state 134
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op plus term star opar op plus new type . LexToken(cpar,')',72,1810)
   yacc.py: 471:Action : Reduce rule [atom -> new type] with ['new','Int'] and goto state 79
   yacc.py: 506:Result : <InstantiateNode @ 0x7ff028cfa470> (<tools.ast.InstantiateNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op plus term star opar op plus atom . LexToken(cpar,')',72,1810)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<InstantiateNode @ 0x7ff028cfa470>] and goto state 77
   yacc.py: 506:Result : <InstantiateNode @ 0x7ff028cfa470> (<tools.ast.InstantiateNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op plus term star opar op plus factor . LexToken(cpar,')',72,1810)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<InstantiateNode @ 0x7ff028cfa470>] and goto state 76
   yacc.py: 506:Result : <InstantiateNode @ 0x7ff028cfa470> (<tools.ast.InstantiateNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op plus term star opar op plus base_call . LexToken(cpar,')',72,1810)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<InstantiateNode @ 0x7ff028cfa470>] and goto state 159
   yacc.py: 506:Result : <InstantiateNode @ 0x7ff028cfa470> (<tools.ast.InstantiateNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op plus term star opar op plus term . LexToken(cpar,')',72,1810)
   yacc.py: 471:Action : Reduce rule [op -> op plus term] with [<DivNode @ 0x7ff028cfa518>,'+',<InstantiateNode @ 0x7ff028cfa470>] and goto state 74
   yacc.py: 506:Result : <PlusNode @ 0x7ff028cfa4a8> (<tools.ast.PlusNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op plus term star opar op . LexToken(cpar,')',72,1810)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<PlusNode @ 0x7ff028cfa4a8>] and goto state 73
   yacc.py: 506:Result : <PlusNode @ 0x7ff028cfa4a8> (<tools.ast.PlusNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op plus term star opar comp . LexToken(cpar,')',72,1810)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<PlusNode @ 0x7ff028cfa4a8>] and goto state 123
   yacc.py: 506:Result : <PlusNode @ 0x7ff028cfa4a8> (<tools.ast.PlusNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 123
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op plus term star opar expr . LexToken(cpar,')',72,1810)
   yacc.py: 445:Action : Shift and goto state 170
   yacc.py: 410:
   yacc.py: 411:State  : 170
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op plus term star opar expr cpar . LexToken(minus,'-',72,1812)
   yacc.py: 471:Action : Reduce rule [factor -> opar expr cpar] with ['(',<PlusNode @ 0x7ff028cfa4a8>,')'] and goto state 77
   yacc.py: 506:Result : <PlusNode @ 0x7ff028cfa4a8> (<tools.ast.PlusNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op plus term star factor . LexToken(minus,'-',72,1812)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<PlusNode @ 0x7ff028cfa4a8>] and goto state 161
   yacc.py: 506:Result : <PlusNode @ 0x7ff028cfa4a8> (<tools.ast.PlusNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op plus term star base_call . LexToken(minus,'-',72,1812)
   yacc.py: 471:Action : Reduce rule [term -> term star base_call] with [<VariableNode @ 0x7ff028cfa0b8>,'*',<PlusNode @ 0x7ff028cfa4a8>] and goto state 159
   yacc.py: 506:Result : <StarNode @ 0x7ff028cfa5f8> (<tools.ast.StarNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op plus term . LexToken(minus,'-',72,1812)
   yacc.py: 471:Action : Reduce rule [op -> op plus term] with [<ConstantNumNode @ 0x7ff028cf8ef0>,'+',<StarNode @ 0x7ff028cfa5f8>] and goto state 74
   yacc.py: 506:Result : <PlusNode @ 0x7ff028cfa358> (<tools.ast.PlusNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op . LexToken(minus,'-',72,1812)
   yacc.py: 445:Action : Shift and goto state 118
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus . LexToken(id,'y',72,1814)
   yacc.py: 445:Action : Shift and goto state 126
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus id . LexToken(minus,'-',72,1816)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['y'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cfa0f0> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus atom . LexToken(minus,'-',72,1816)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7ff028cfa0f0>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cfa0f0> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus factor . LexToken(minus,'-',72,1816)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7ff028cfa0f0>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cfa0f0> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus base_call . LexToken(minus,'-',72,1816)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7ff028cfa0f0>] and goto state 160
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cfa0f0> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 160
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus term . LexToken(minus,'-',72,1816)
   yacc.py: 471:Action : Reduce rule [op -> op minus term] with [<PlusNode @ 0x7ff028cfa358>,'-',<VariableNode @ 0x7ff028cfa0f0>] and goto state 74
   yacc.py: 506:Result : <MinusNode @ 0x7ff028cfa588> (<tools.ast.MinusNode object at 0x7ff028c ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op . LexToken(minus,'-',72,1816)
   yacc.py: 445:Action : Shift and goto state 118
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus . LexToken(opar,'(',72,1818)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar . LexToken(opar,'(',72,1819)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar . LexToken(opar,'(',72,1820)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar . LexToken(if,'if',72,1821)
   yacc.py: 445:Action : Shift and goto state 86
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if . LexToken(true,'tRue',72,1824)
   yacc.py: 445:Action : Shift and goto state 91
   yacc.py: 410:
   yacc.py: 411:State  : 91
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if true . LexToken(equal,'=',72,1829)
   yacc.py: 471:Action : Reduce rule [atom -> true] with ['tRue'] and goto state 79
   yacc.py: 506:Result : <ConstantBoolNode @ 0x7ff028cfa4e0> (<tools.ast.ConstantBoolNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if atom . LexToken(equal,'=',72,1829)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantBoolNode @ 0x7ff028cfa4e0>] and goto state 77
   yacc.py: 506:Result : <ConstantBoolNode @ 0x7ff028cfa4e0> (<tools.ast.ConstantBoolNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if factor . LexToken(equal,'=',72,1829)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantBoolNode @ 0x7ff028cfa4e0>] and goto state 76
   yacc.py: 506:Result : <ConstantBoolNode @ 0x7ff028cfa4e0> (<tools.ast.ConstantBoolNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if base_call . LexToken(equal,'=',72,1829)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantBoolNode @ 0x7ff028cfa4e0>] and goto state 75
   yacc.py: 506:Result : <ConstantBoolNode @ 0x7ff028cfa4e0> (<tools.ast.ConstantBoolNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if term . LexToken(equal,'=',72,1829)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantBoolNode @ 0x7ff028cfa4e0>] and goto state 74
   yacc.py: 506:Result : <ConstantBoolNode @ 0x7ff028cfa4e0> (<tools.ast.ConstantBoolNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if op . LexToken(equal,'=',72,1829)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantBoolNode @ 0x7ff028cfa4e0>] and goto state 73
   yacc.py: 506:Result : <ConstantBoolNode @ 0x7ff028cfa4e0> (<tools.ast.ConstantBoolNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if comp . LexToken(equal,'=',72,1829)
   yacc.py: 445:Action : Shift and goto state 116
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if comp equal . LexToken(not,'not',72,1831)
   yacc.py: 445:Action : Shift and goto state 81
   yacc.py: 410:
   yacc.py: 411:State  : 81
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if comp equal not . LexToken(false,'faLSe',72,1835)
   yacc.py: 445:Action : Shift and goto state 92
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if comp equal not false . LexToken(then,'then',72,1841)
   yacc.py: 471:Action : Reduce rule [atom -> false] with ['faLSe'] and goto state 79
   yacc.py: 506:Result : <ConstantBoolNode @ 0x7ff028cfa630> (<tools.ast.ConstantBoolNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if comp equal not atom . LexToken(then,'then',72,1841)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantBoolNode @ 0x7ff028cfa630>] and goto state 77
   yacc.py: 506:Result : <ConstantBoolNode @ 0x7ff028cfa630> (<tools.ast.ConstantBoolNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if comp equal not factor . LexToken(then,'then',72,1841)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantBoolNode @ 0x7ff028cfa630>] and goto state 76
   yacc.py: 506:Result : <ConstantBoolNode @ 0x7ff028cfa630> (<tools.ast.ConstantBoolNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if comp equal not base_call . LexToken(then,'then',72,1841)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantBoolNode @ 0x7ff028cfa630>] and goto state 75
   yacc.py: 506:Result : <ConstantBoolNode @ 0x7ff028cfa630> (<tools.ast.ConstantBoolNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if comp equal not term . LexToken(then,'then',72,1841)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantBoolNode @ 0x7ff028cfa630>] and goto state 74
   yacc.py: 506:Result : <ConstantBoolNode @ 0x7ff028cfa630> (<tools.ast.ConstantBoolNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if comp equal not op . LexToken(then,'then',72,1841)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantBoolNode @ 0x7ff028cfa630>] and goto state 73
   yacc.py: 506:Result : <ConstantBoolNode @ 0x7ff028cfa630> (<tools.ast.ConstantBoolNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if comp equal not comp . LexToken(then,'then',72,1841)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantBoolNode @ 0x7ff028cfa630>] and goto state 124
   yacc.py: 506:Result : <ConstantBoolNode @ 0x7ff028cfa630> (<tools.ast.ConstantBoolNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 124
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if comp equal not expr . LexToken(then,'then',72,1841)
   yacc.py: 471:Action : Reduce rule [factor -> not expr] with ['not',<ConstantBoolNode @ 0x7ff028cfa630>] and goto state 77
   yacc.py: 506:Result : <NotNode @ 0x7ff028cfa7b8> (<tools.ast.NotNode object at 0x7ff028cfa ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if comp equal factor . LexToken(then,'then',72,1841)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<NotNode @ 0x7ff028cfa7b8>] and goto state 76
   yacc.py: 506:Result : <NotNode @ 0x7ff028cfa7b8> (<tools.ast.NotNode object at 0x7ff028cfa ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if comp equal base_call . LexToken(then,'then',72,1841)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<NotNode @ 0x7ff028cfa7b8>] and goto state 75
   yacc.py: 506:Result : <NotNode @ 0x7ff028cfa7b8> (<tools.ast.NotNode object at 0x7ff028cfa ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if comp equal term . LexToken(then,'then',72,1841)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<NotNode @ 0x7ff028cfa7b8>] and goto state 158
   yacc.py: 506:Result : <NotNode @ 0x7ff028cfa7b8> (<tools.ast.NotNode object at 0x7ff028cfa ...)
   yacc.py: 410:
   yacc.py: 411:State  : 158
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if comp equal op . LexToken(then,'then',72,1841)
   yacc.py: 471:Action : Reduce rule [comp -> comp equal op] with [<ConstantBoolNode @ 0x7ff028cfa4e0>,'=',<NotNode @ 0x7ff028cfa7b8>] and goto state 73
   yacc.py: 506:Result : <EqualNode @ 0x7ff028cfa7f0> (<tools.ast.EqualNode object at 0x7ff028c ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if comp . LexToken(then,'then',72,1841)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<EqualNode @ 0x7ff028cfa7f0>] and goto state 132
   yacc.py: 506:Result : <EqualNode @ 0x7ff028cfa7f0> (<tools.ast.EqualNode object at 0x7ff028c ...)
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr . LexToken(then,'then',72,1841)
   yacc.py: 445:Action : Shift and goto state 175
   yacc.py: 410:
   yacc.py: 411:State  : 175
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then . LexToken(nox,'~',72,1846)
   yacc.py: 445:Action : Shift and goto state 83
   yacc.py: 410:
   yacc.py: 411:State  : 83
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then nox . LexToken(id,'z',72,1847)
   yacc.py: 445:Action : Shift and goto state 126
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then nox id . LexToken(else,'else',72,1849)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['z'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cfa8d0> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then nox atom . LexToken(else,'else',72,1849)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7ff028cfa8d0>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cfa8d0> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then nox factor . LexToken(else,'else',72,1849)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7ff028cfa8d0>] and goto state 127
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cfa8d0> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 127
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then nox base_call . LexToken(else,'else',72,1849)
   yacc.py: 471:Action : Reduce rule [factor -> nox base_call] with ['~',<VariableNode @ 0x7ff028cfa8d0>] and goto state 77
   yacc.py: 506:Result : <BinaryNotNode @ 0x7ff028cfa908> (<tools.ast.BinaryNotNode object at 0x7ff ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then factor . LexToken(else,'else',72,1849)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<BinaryNotNode @ 0x7ff028cfa908>] and goto state 76
   yacc.py: 506:Result : <BinaryNotNode @ 0x7ff028cfa908> (<tools.ast.BinaryNotNode object at 0x7ff ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then base_call . LexToken(else,'else',72,1849)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<BinaryNotNode @ 0x7ff028cfa908>] and goto state 75
   yacc.py: 506:Result : <BinaryNotNode @ 0x7ff028cfa908> (<tools.ast.BinaryNotNode object at 0x7ff ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then term . LexToken(else,'else',72,1849)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<BinaryNotNode @ 0x7ff028cfa908>] and goto state 74
   yacc.py: 506:Result : <BinaryNotNode @ 0x7ff028cfa908> (<tools.ast.BinaryNotNode object at 0x7ff ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then op . LexToken(else,'else',72,1849)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<BinaryNotNode @ 0x7ff028cfa908>] and goto state 73
   yacc.py: 506:Result : <BinaryNotNode @ 0x7ff028cfa908> (<tools.ast.BinaryNotNode object at 0x7ff ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then comp . LexToken(else,'else',72,1849)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<BinaryNotNode @ 0x7ff028cfa908>] and goto state 203
   yacc.py: 506:Result : <BinaryNotNode @ 0x7ff028cfa908> (<tools.ast.BinaryNotNode object at 0x7ff ...)
   yacc.py: 410:
   yacc.py: 411:State  : 203
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then expr . LexToken(else,'else',72,1849)
   yacc.py: 445:Action : Shift and goto state 219
   yacc.py: 410:
   yacc.py: 411:State  : 219
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then expr else . LexToken(num,3.0,72,1854)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then expr else num . LexToken(lesseq,'<=',72,1856)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [3.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cfa9e8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then expr else atom . LexToken(lesseq,'<=',72,1856)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028cfa9e8>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cfa9e8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then expr else factor . LexToken(lesseq,'<=',72,1856)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028cfa9e8>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cfa9e8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then expr else base_call . LexToken(lesseq,'<=',72,1856)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7ff028cfa9e8>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cfa9e8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then expr else term . LexToken(lesseq,'<=',72,1856)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7ff028cfa9e8>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cfa9e8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then expr else op . LexToken(lesseq,'<=',72,1856)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantNumNode @ 0x7ff028cfa9e8>] and goto state 73
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cfa9e8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then expr else comp . LexToken(lesseq,'<=',72,1856)
   yacc.py: 445:Action : Shift and goto state 115
   yacc.py: 410:
   yacc.py: 411:State  : 115
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then expr else comp lesseq . LexToken(num,4.0,72,1859)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then expr else comp lesseq num . LexToken(plus,'+',72,1861)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [4.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cfaa58> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then expr else comp lesseq atom . LexToken(plus,'+',72,1861)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028cfaa58>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cfaa58> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then expr else comp lesseq factor . LexToken(plus,'+',72,1861)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028cfaa58>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cfaa58> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then expr else comp lesseq base_call . LexToken(plus,'+',72,1861)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7ff028cfaa58>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cfaa58> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then expr else comp lesseq term . LexToken(plus,'+',72,1861)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7ff028cfaa58>] and goto state 157
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cfaa58> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 157
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then expr else comp lesseq op . LexToken(plus,'+',72,1861)
   yacc.py: 445:Action : Shift and goto state 117
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then expr else comp lesseq op plus . LexToken(string,'hey',72,1867)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then expr else comp lesseq op plus string . LexToken(dot,'.',72,1868)
   yacc.py: 471:Action : Reduce rule [atom -> string] with ['hey'] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028cfa6d8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then expr else comp lesseq op plus atom . LexToken(dot,'.',72,1868)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7ff028cfa6d8>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028cfa6d8> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then expr else comp lesseq op plus factor . LexToken(dot,'.',72,1868)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then expr else comp lesseq op plus factor dot . LexToken(id,'length',72,1869)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then expr else comp lesseq op plus factor dot id . LexToken(opar,'(',72,1875)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then expr else comp lesseq op plus factor dot id opar . LexToken(cpar,')',72,1876)
   yacc.py: 474:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 150
   yacc.py: 548:Result : <NoneType @ 0x55810cd760f0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 150
   yacc.py: 430:Defaulted state 150: Reduce using 96
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then expr else comp lesseq op plus factor dot id opar epsilon . LexToken(cpar,')',72,1876)
   yacc.py: 471:Action : Reduce rule [arg_list_empty -> epsilon] with [None] and goto state 149
   yacc.py: 506:Result : <list @ 0x7ff028d0f148> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 430:Defaulted state 149: Reduce using 92
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then expr else comp lesseq op plus factor dot id opar arg_list_empty . LexToken(cpar,')',72,1876)
   yacc.py: 471:Action : Reduce rule [args -> arg_list_empty] with [[]] and goto state 153
   yacc.py: 506:Result : <list @ 0x7ff028d0f148> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then expr else comp lesseq op plus factor dot id opar args . LexToken(cpar,')',72,1876)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then expr else comp lesseq op plus factor dot id opar args cpar . LexToken(fi,'fi',72,1878)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['length','(',[],')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7ff028ccc948> (('length', []))
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then expr else comp lesseq op plus factor dot func_call . LexToken(fi,'fi',72,1878)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<ConstantStrNode @ 0x7ff028cfa6d8>,'.',('length', [])] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7ff028cfac18> (<tools.ast.CallNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then expr else comp lesseq op plus factor . LexToken(fi,'fi',72,1878)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<CallNode @ 0x7ff028cfac18>] and goto state 76
   yacc.py: 506:Result : <CallNode @ 0x7ff028cfac18> (<tools.ast.CallNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then expr else comp lesseq op plus base_call . LexToken(fi,'fi',72,1878)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<CallNode @ 0x7ff028cfac18>] and goto state 159
   yacc.py: 506:Result : <CallNode @ 0x7ff028cfac18> (<tools.ast.CallNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then expr else comp lesseq op plus term . LexToken(fi,'fi',72,1878)
   yacc.py: 471:Action : Reduce rule [op -> op plus term] with [<ConstantNumNode @ 0x7ff028cfaa58>,'+',<CallNode @ 0x7ff028cfac18>] and goto state 157
   yacc.py: 506:Result : <PlusNode @ 0x7ff028cfac50> (<tools.ast.PlusNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 157
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then expr else comp lesseq op . LexToken(fi,'fi',72,1878)
   yacc.py: 471:Action : Reduce rule [comp -> comp lesseq op] with [<ConstantNumNode @ 0x7ff028cfa9e8>,'<=',<PlusNode @ 0x7ff028cfac50>] and goto state 73
   yacc.py: 506:Result : <LessEqNode @ 0x7ff028cfab00> (<tools.ast.LessEqNode object at 0x7ff028 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then expr else comp . LexToken(fi,'fi',72,1878)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<LessEqNode @ 0x7ff028cfab00>] and goto state 228
   yacc.py: 506:Result : <LessEqNode @ 0x7ff028cfab00> (<tools.ast.LessEqNode object at 0x7ff028 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 228
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then expr else expr . LexToken(fi,'fi',72,1878)
   yacc.py: 445:Action : Shift and goto state 230
   yacc.py: 410:
   yacc.py: 411:State  : 230
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar if expr then expr else expr fi . LexToken(plus,'+',72,1881)
   yacc.py: 471:Action : Reduce rule [factor -> if expr then expr else expr fi] with ['if',<EqualNode @ 0x7ff028cfa7f0>,'then',<BinaryNotNode @ 0x7ff028cfa908>,'else',<LessEqNode @ 0x7ff028cfab00>,'fi'] and goto state 77
   yacc.py: 506:Result : <ConditionalNode @ 0x7ff028cfad30> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar factor . LexToken(plus,'+',72,1881)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConditionalNode @ 0x7ff028cfad30>] and goto state 76
   yacc.py: 506:Result : <ConditionalNode @ 0x7ff028cfad30> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar base_call . LexToken(plus,'+',72,1881)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConditionalNode @ 0x7ff028cfad30>] and goto state 75
   yacc.py: 506:Result : <ConditionalNode @ 0x7ff028cfad30> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar term . LexToken(plus,'+',72,1881)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConditionalNode @ 0x7ff028cfad30>] and goto state 74
   yacc.py: 506:Result : <ConditionalNode @ 0x7ff028cfad30> (<tools.ast.ConditionalNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar op . LexToken(plus,'+',72,1881)
   yacc.py: 445:Action : Shift and goto state 117
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar op plus . LexToken(id,'a',72,1883)
   yacc.py: 445:Action : Shift and goto state 126
   yacc.py: 410:
   yacc.py: 411:State  : 126
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar op plus id . LexToken(cpar,')',72,1884)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['a'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cfa3c8> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar op plus atom . LexToken(cpar,')',72,1884)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7ff028cfa3c8>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cfa3c8> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar op plus factor . LexToken(cpar,')',72,1884)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7ff028cfa3c8>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cfa3c8> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar op plus base_call . LexToken(cpar,')',72,1884)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7ff028cfa3c8>] and goto state 159
   yacc.py: 506:Result : <VariableNode @ 0x7ff028cfa3c8> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar op plus term . LexToken(cpar,')',72,1884)
   yacc.py: 471:Action : Reduce rule [op -> op plus term] with [<ConditionalNode @ 0x7ff028cfad30>,'+',<VariableNode @ 0x7ff028cfa3c8>] and goto state 74
   yacc.py: 506:Result : <PlusNode @ 0x7ff028cfa6a0> (<tools.ast.PlusNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar op . LexToken(cpar,')',72,1884)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<PlusNode @ 0x7ff028cfa6a0>] and goto state 73
   yacc.py: 506:Result : <PlusNode @ 0x7ff028cfa6a0> (<tools.ast.PlusNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar comp . LexToken(cpar,')',72,1884)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<PlusNode @ 0x7ff028cfa6a0>] and goto state 123
   yacc.py: 506:Result : <PlusNode @ 0x7ff028cfa6a0> (<tools.ast.PlusNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 123
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar expr . LexToken(cpar,')',72,1884)
   yacc.py: 445:Action : Shift and goto state 170
   yacc.py: 410:
   yacc.py: 411:State  : 170
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar opar expr cpar . LexToken(cpar,')',72,1885)
   yacc.py: 471:Action : Reduce rule [factor -> opar expr cpar] with ['(',<PlusNode @ 0x7ff028cfa6a0>,')'] and goto state 77
   yacc.py: 506:Result : <PlusNode @ 0x7ff028cfa6a0> (<tools.ast.PlusNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar factor . LexToken(cpar,')',72,1885)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<PlusNode @ 0x7ff028cfa6a0>] and goto state 76
   yacc.py: 506:Result : <PlusNode @ 0x7ff028cfa6a0> (<tools.ast.PlusNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar base_call . LexToken(cpar,')',72,1885)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<PlusNode @ 0x7ff028cfa6a0>] and goto state 75
   yacc.py: 506:Result : <PlusNode @ 0x7ff028cfa6a0> (<tools.ast.PlusNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar term . LexToken(cpar,')',72,1885)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<PlusNode @ 0x7ff028cfa6a0>] and goto state 74
   yacc.py: 506:Result : <PlusNode @ 0x7ff028cfa6a0> (<tools.ast.PlusNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar op . LexToken(cpar,')',72,1885)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<PlusNode @ 0x7ff028cfa6a0>] and goto state 73
   yacc.py: 506:Result : <PlusNode @ 0x7ff028cfa6a0> (<tools.ast.PlusNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar comp . LexToken(cpar,')',72,1885)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<PlusNode @ 0x7ff028cfa6a0>] and goto state 123
   yacc.py: 506:Result : <PlusNode @ 0x7ff028cfa6a0> (<tools.ast.PlusNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 123
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar expr . LexToken(cpar,')',72,1885)
   yacc.py: 445:Action : Shift and goto state 170
   yacc.py: 410:
   yacc.py: 411:State  : 170
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar opar expr cpar . LexToken(div,'/',72,1886)
   yacc.py: 471:Action : Reduce rule [factor -> opar expr cpar] with ['(',<PlusNode @ 0x7ff028cfa6a0>,')'] and goto state 77
   yacc.py: 506:Result : <PlusNode @ 0x7ff028cfa6a0> (<tools.ast.PlusNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar factor . LexToken(div,'/',72,1886)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<PlusNode @ 0x7ff028cfa6a0>] and goto state 76
   yacc.py: 506:Result : <PlusNode @ 0x7ff028cfa6a0> (<tools.ast.PlusNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar base_call . LexToken(div,'/',72,1886)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<PlusNode @ 0x7ff028cfa6a0>] and goto state 75
   yacc.py: 506:Result : <PlusNode @ 0x7ff028cfa6a0> (<tools.ast.PlusNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term . LexToken(div,'/',72,1886)
   yacc.py: 445:Action : Shift and goto state 120
   yacc.py: 410:
   yacc.py: 411:State  : 120
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term div . LexToken(opar,'(',72,1887)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term div opar . LexToken(num,0.0,72,1888)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term div opar num . LexToken(cpar,')',72,1889)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [0.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cfa898> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term div opar atom . LexToken(cpar,')',72,1889)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028cfa898>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cfa898> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term div opar factor . LexToken(cpar,')',72,1889)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028cfa898>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cfa898> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term div opar base_call . LexToken(cpar,')',72,1889)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7ff028cfa898>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cfa898> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term div opar term . LexToken(cpar,')',72,1889)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7ff028cfa898>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cfa898> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term div opar op . LexToken(cpar,')',72,1889)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantNumNode @ 0x7ff028cfa898>] and goto state 73
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cfa898> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term div opar comp . LexToken(cpar,')',72,1889)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantNumNode @ 0x7ff028cfa898>] and goto state 123
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cfa898> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 123
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term div opar expr . LexToken(cpar,')',72,1889)
   yacc.py: 445:Action : Shift and goto state 170
   yacc.py: 410:
   yacc.py: 411:State  : 170
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term div opar expr cpar . LexToken(star,'*',72,1890)
   yacc.py: 471:Action : Reduce rule [factor -> opar expr cpar] with ['(',<ConstantNumNode @ 0x7ff028cfa898>,')'] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cfa898> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term div factor . LexToken(star,'*',72,1890)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028cfa898>] and goto state 163
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cfa898> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 163
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term div base_call . LexToken(star,'*',72,1890)
   yacc.py: 471:Action : Reduce rule [term -> term div base_call] with [<PlusNode @ 0x7ff028cfa6a0>,'/',<ConstantNumNode @ 0x7ff028cfa898>] and goto state 75
   yacc.py: 506:Result : <DivNode @ 0x7ff028cfaa20> (<tools.ast.DivNode object at 0x7ff028cfa ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term . LexToken(star,'*',72,1890)
   yacc.py: 445:Action : Shift and goto state 119
   yacc.py: 410:
   yacc.py: 411:State  : 119
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term star . LexToken(opar,'(',72,1891)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term star opar . LexToken(opar,'(',72,1892)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term star opar opar . LexToken(opar,'(',72,1893)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term star opar opar opar . LexToken(num,4.0,72,1894)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term star opar opar opar num . LexToken(star,'*',72,1896)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [4.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cfa438> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term star opar opar opar atom . LexToken(star,'*',72,1896)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028cfa438>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cfa438> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term star opar opar opar factor . LexToken(star,'*',72,1896)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028cfa438>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cfa438> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term star opar opar opar base_call . LexToken(star,'*',72,1896)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7ff028cfa438>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cfa438> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term star opar opar opar term . LexToken(star,'*',72,1896)
   yacc.py: 445:Action : Shift and goto state 119
   yacc.py: 410:
   yacc.py: 411:State  : 119
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term star opar opar opar term star . LexToken(num,4.0,72,1898)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term star opar opar opar term star num . LexToken(cpar,')',72,1899)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [4.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cfabe0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term star opar opar opar term star atom . LexToken(cpar,')',72,1899)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028cfabe0>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cfabe0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term star opar opar opar term star factor . LexToken(cpar,')',72,1899)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028cfabe0>] and goto state 161
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028cfabe0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term star opar opar opar term star base_call . LexToken(cpar,')',72,1899)
   yacc.py: 471:Action : Reduce rule [term -> term star base_call] with [<ConstantNumNode @ 0x7ff028cfa438>,'*',<ConstantNumNode @ 0x7ff028cfabe0>] and goto state 75
   yacc.py: 506:Result : <StarNode @ 0x7ff028cfae10> (<tools.ast.StarNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term star opar opar opar term . LexToken(cpar,')',72,1899)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<StarNode @ 0x7ff028cfae10>] and goto state 74
   yacc.py: 506:Result : <StarNode @ 0x7ff028cfae10> (<tools.ast.StarNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term star opar opar opar op . LexToken(cpar,')',72,1899)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<StarNode @ 0x7ff028cfae10>] and goto state 73
   yacc.py: 506:Result : <StarNode @ 0x7ff028cfae10> (<tools.ast.StarNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term star opar opar opar comp . LexToken(cpar,')',72,1899)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<StarNode @ 0x7ff028cfae10>] and goto state 123
   yacc.py: 506:Result : <StarNode @ 0x7ff028cfae10> (<tools.ast.StarNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 123
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term star opar opar opar expr . LexToken(cpar,')',72,1899)
   yacc.py: 445:Action : Shift and goto state 170
   yacc.py: 410:
   yacc.py: 411:State  : 170
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term star opar opar opar expr cpar . LexToken(cpar,')',72,1900)
   yacc.py: 471:Action : Reduce rule [factor -> opar expr cpar] with ['(',<StarNode @ 0x7ff028cfae10>,')'] and goto state 77
   yacc.py: 506:Result : <StarNode @ 0x7ff028cfae10> (<tools.ast.StarNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term star opar opar factor . LexToken(cpar,')',72,1900)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<StarNode @ 0x7ff028cfae10>] and goto state 76
   yacc.py: 506:Result : <StarNode @ 0x7ff028cfae10> (<tools.ast.StarNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term star opar opar base_call . LexToken(cpar,')',72,1900)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<StarNode @ 0x7ff028cfae10>] and goto state 75
   yacc.py: 506:Result : <StarNode @ 0x7ff028cfae10> (<tools.ast.StarNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term star opar opar term . LexToken(cpar,')',72,1900)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<StarNode @ 0x7ff028cfae10>] and goto state 74
   yacc.py: 506:Result : <StarNode @ 0x7ff028cfae10> (<tools.ast.StarNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term star opar opar op . LexToken(cpar,')',72,1900)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<StarNode @ 0x7ff028cfae10>] and goto state 73
   yacc.py: 506:Result : <StarNode @ 0x7ff028cfae10> (<tools.ast.StarNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term star opar opar comp . LexToken(cpar,')',72,1900)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<StarNode @ 0x7ff028cfae10>] and goto state 123
   yacc.py: 506:Result : <StarNode @ 0x7ff028cfae10> (<tools.ast.StarNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 123
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term star opar opar expr . LexToken(cpar,')',72,1900)
   yacc.py: 445:Action : Shift and goto state 170
   yacc.py: 410:
   yacc.py: 411:State  : 170
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term star opar opar expr cpar . LexToken(cpar,')',72,1901)
   yacc.py: 471:Action : Reduce rule [factor -> opar expr cpar] with ['(',<StarNode @ 0x7ff028cfae10>,')'] and goto state 77
   yacc.py: 506:Result : <StarNode @ 0x7ff028cfae10> (<tools.ast.StarNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term star opar factor . LexToken(cpar,')',72,1901)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<StarNode @ 0x7ff028cfae10>] and goto state 76
   yacc.py: 506:Result : <StarNode @ 0x7ff028cfae10> (<tools.ast.StarNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term star opar base_call . LexToken(cpar,')',72,1901)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<StarNode @ 0x7ff028cfae10>] and goto state 75
   yacc.py: 506:Result : <StarNode @ 0x7ff028cfae10> (<tools.ast.StarNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term star opar term . LexToken(cpar,')',72,1901)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<StarNode @ 0x7ff028cfae10>] and goto state 74
   yacc.py: 506:Result : <StarNode @ 0x7ff028cfae10> (<tools.ast.StarNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term star opar op . LexToken(cpar,')',72,1901)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<StarNode @ 0x7ff028cfae10>] and goto state 73
   yacc.py: 506:Result : <StarNode @ 0x7ff028cfae10> (<tools.ast.StarNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term star opar comp . LexToken(cpar,')',72,1901)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<StarNode @ 0x7ff028cfae10>] and goto state 123
   yacc.py: 506:Result : <StarNode @ 0x7ff028cfae10> (<tools.ast.StarNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 123
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term star opar expr . LexToken(cpar,')',72,1901)
   yacc.py: 445:Action : Shift and goto state 170
   yacc.py: 410:
   yacc.py: 411:State  : 170
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term star opar expr cpar . LexToken(cpar,')',72,1902)
   yacc.py: 471:Action : Reduce rule [factor -> opar expr cpar] with ['(',<StarNode @ 0x7ff028cfae10>,')'] and goto state 77
   yacc.py: 506:Result : <StarNode @ 0x7ff028cfae10> (<tools.ast.StarNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term star factor . LexToken(cpar,')',72,1902)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<StarNode @ 0x7ff028cfae10>] and goto state 161
   yacc.py: 506:Result : <StarNode @ 0x7ff028cfae10> (<tools.ast.StarNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 161
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term star base_call . LexToken(cpar,')',72,1902)
   yacc.py: 471:Action : Reduce rule [term -> term star base_call] with [<DivNode @ 0x7ff028cfaa20>,'*',<StarNode @ 0x7ff028cfae10>] and goto state 75
   yacc.py: 506:Result : <StarNode @ 0x7ff028cfa748> (<tools.ast.StarNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar term . LexToken(cpar,')',72,1902)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<StarNode @ 0x7ff028cfa748>] and goto state 74
   yacc.py: 506:Result : <StarNode @ 0x7ff028cfa748> (<tools.ast.StarNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar op . LexToken(cpar,')',72,1902)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<StarNode @ 0x7ff028cfa748>] and goto state 73
   yacc.py: 506:Result : <StarNode @ 0x7ff028cfa748> (<tools.ast.StarNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar comp . LexToken(cpar,')',72,1902)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<StarNode @ 0x7ff028cfa748>] and goto state 123
   yacc.py: 506:Result : <StarNode @ 0x7ff028cfa748> (<tools.ast.StarNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 123
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar expr . LexToken(cpar,')',72,1902)
   yacc.py: 445:Action : Shift and goto state 170
   yacc.py: 410:
   yacc.py: 411:State  : 170
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus opar expr cpar . LexToken(cpar,')',72,1903)
   yacc.py: 471:Action : Reduce rule [factor -> opar expr cpar] with ['(',<StarNode @ 0x7ff028cfa748>,')'] and goto state 77
   yacc.py: 506:Result : <StarNode @ 0x7ff028cfa748> (<tools.ast.StarNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus factor . LexToken(cpar,')',72,1903)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<StarNode @ 0x7ff028cfa748>] and goto state 76
   yacc.py: 506:Result : <StarNode @ 0x7ff028cfa748> (<tools.ast.StarNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus base_call . LexToken(cpar,')',72,1903)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<StarNode @ 0x7ff028cfa748>] and goto state 160
   yacc.py: 506:Result : <StarNode @ 0x7ff028cfa748> (<tools.ast.StarNode object at 0x7ff028cf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 160
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op minus term . LexToken(cpar,')',72,1903)
   yacc.py: 471:Action : Reduce rule [op -> op minus term] with [<MinusNode @ 0x7ff028cfa588>,'-',<StarNode @ 0x7ff028cfa748>] and goto state 74
   yacc.py: 506:Result : <MinusNode @ 0x7ff028cfa9b0> (<tools.ast.MinusNode object at 0x7ff028c ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar op . LexToken(cpar,')',72,1903)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<MinusNode @ 0x7ff028cfa9b0>] and goto state 73
   yacc.py: 506:Result : <MinusNode @ 0x7ff028cfa9b0> (<tools.ast.MinusNode object at 0x7ff028c ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar comp . LexToken(cpar,')',72,1903)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<MinusNode @ 0x7ff028cfa9b0>] and goto state 123
   yacc.py: 506:Result : <MinusNode @ 0x7ff028cfa9b0> (<tools.ast.MinusNode object at 0x7ff028c ...)
   yacc.py: 410:
   yacc.py: 411:State  : 123
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar expr . LexToken(cpar,')',72,1903)
   yacc.py: 445:Action : Shift and goto state 170
   yacc.py: 410:
   yacc.py: 411:State  : 170
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid opar expr cpar . LexToken(ccur,'}',73,1909)
   yacc.py: 471:Action : Reduce rule [factor -> opar expr cpar] with ['(',<MinusNode @ 0x7ff028cfa9b0>,')'] and goto state 77
   yacc.py: 506:Result : <MinusNode @ 0x7ff028cfa9b0> (<tools.ast.MinusNode object at 0x7ff028c ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid factor . LexToken(ccur,'}',73,1909)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<MinusNode @ 0x7ff028cfa9b0>] and goto state 125
   yacc.py: 506:Result : <MinusNode @ 0x7ff028cfa9b0> (<tools.ast.MinusNode object at 0x7ff028c ...)
   yacc.py: 410:
   yacc.py: 411:State  : 125
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in isvoid base_call . LexToken(ccur,'}',73,1909)
   yacc.py: 471:Action : Reduce rule [factor -> isvoid base_call] with ['isvoid',<MinusNode @ 0x7ff028cfa9b0>] and goto state 77
   yacc.py: 506:Result : <IsVoidNode @ 0x7ff028cfa400> (<tools.ast.IsVoidNode object at 0x7ff028 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in factor . LexToken(ccur,'}',73,1909)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<IsVoidNode @ 0x7ff028cfa400>] and goto state 76
   yacc.py: 506:Result : <IsVoidNode @ 0x7ff028cfa400> (<tools.ast.IsVoidNode object at 0x7ff028 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in base_call . LexToken(ccur,'}',73,1909)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<IsVoidNode @ 0x7ff028cfa400>] and goto state 75
   yacc.py: 506:Result : <IsVoidNode @ 0x7ff028cfa400> (<tools.ast.IsVoidNode object at 0x7ff028 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in term . LexToken(ccur,'}',73,1909)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<IsVoidNode @ 0x7ff028cfa400>] and goto state 74
   yacc.py: 506:Result : <IsVoidNode @ 0x7ff028cfa400> (<tools.ast.IsVoidNode object at 0x7ff028 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in op . LexToken(ccur,'}',73,1909)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<IsVoidNode @ 0x7ff028cfa400>] and goto state 73
   yacc.py: 506:Result : <IsVoidNode @ 0x7ff028cfa400> (<tools.ast.IsVoidNode object at 0x7ff028 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in comp . LexToken(ccur,'}',73,1909)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<IsVoidNode @ 0x7ff028cfa400>] and goto state 196
   yacc.py: 506:Result : <IsVoidNode @ 0x7ff028cfa400> (<tools.ast.IsVoidNode object at 0x7ff028 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 196
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur let let_list in expr . LexToken(ccur,'}',73,1909)
   yacc.py: 471:Action : Reduce rule [factor -> let let_list in expr] with ['let',<list @ 0x7ff028d0f0c8>,'in',<IsVoidNode @ 0x7ff028cfa400>] and goto state 77
   yacc.py: 506:Result : <LetNode @ 0x7ff028cfa2e8> (<tools.ast.LetNode object at 0x7ff028cfa ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur factor . LexToken(ccur,'}',73,1909)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<LetNode @ 0x7ff028cfa2e8>] and goto state 76
   yacc.py: 506:Result : <LetNode @ 0x7ff028cfa2e8> (<tools.ast.LetNode object at 0x7ff028cfa ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur base_call . LexToken(ccur,'}',73,1909)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<LetNode @ 0x7ff028cfa2e8>] and goto state 75
   yacc.py: 506:Result : <LetNode @ 0x7ff028cfa2e8> (<tools.ast.LetNode object at 0x7ff028cfa ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur term . LexToken(ccur,'}',73,1909)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<LetNode @ 0x7ff028cfa2e8>] and goto state 74
   yacc.py: 506:Result : <LetNode @ 0x7ff028cfa2e8> (<tools.ast.LetNode object at 0x7ff028cfa ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur op . LexToken(ccur,'}',73,1909)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<LetNode @ 0x7ff028cfa2e8>] and goto state 73
   yacc.py: 506:Result : <LetNode @ 0x7ff028cfa2e8> (<tools.ast.LetNode object at 0x7ff028cfa ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur comp . LexToken(ccur,'}',73,1909)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<LetNode @ 0x7ff028cfa2e8>] and goto state 206
   yacc.py: 506:Result : <LetNode @ 0x7ff028cfa2e8> (<tools.ast.LetNode object at 0x7ff028cfa ...)
   yacc.py: 410:
   yacc.py: 411:State  : 206
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur expr . LexToken(ccur,'}',73,1909)
   yacc.py: 445:Action : Shift and goto state 222
   yacc.py: 410:
   yacc.py: 411:State  : 222
   yacc.py: 430:Defaulted state 222: Reduce using 25
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi id opar formals cpar colon type ocur expr ccur . None
   yacc.py: 471:Action : Reduce rule [def_func -> id opar formals cpar colon type ocur expr ccur] with ['testing8','(',<list @ 0x7ff028d0f208>,')',':','Bool','{',<LetNode @ 0x7ff028cfa2e8>,'}'] and goto state 18
   yacc.py: 506:Result : <FuncDeclarationNode @ 0x7ff028cf8898> (<tools.ast.FuncDeclarationNode object at ...)
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi def_func . LexToken(semi,';',73,1910)
   yacc.py: 445:Action : Shift and goto state 30
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi def_func semi . LexToken(ccur,'}',74,1912)
   yacc.py: 474:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 16
   yacc.py: 548:Result : <NoneType @ 0x55810cd760f0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 16
   yacc.py: 430:Defaulted state 16: Reduce using 14
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi def_func semi epsilon . LexToken(ccur,'}',74,1912)
   yacc.py: 471:Action : Reduce rule [feature_list -> epsilon] with [None] and goto state 48
   yacc.py: 506:Result : <list @ 0x7ff028d0dfc8> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 430:Defaulted state 48: Reduce using 16
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi def_func semi feature_list . LexToken(ccur,'}',74,1912)
   yacc.py: 471:Action : Reduce rule [feature_list -> def_func semi feature_list] with [<FuncDeclarationNode @ 0x7ff028cf8898>,';',[]] and goto state 47
   yacc.py: 506:Result : <list @ 0x7ff028d0df88> ([<tools.ast.FuncDeclarationNode object a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 47
   yacc.py: 430:Defaulted state 47: Reduce using 15
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi def_attr semi feature_list . LexToken(ccur,'}',74,1912)
   yacc.py: 471:Action : Reduce rule [feature_list -> def_attr semi feature_list] with [<AttrDeclarationNode @ 0x7ff028e50dd8>,';',<list @ 0x7ff028d0df88>] and goto state 48
   yacc.py: 506:Result : <list @ 0x7ff028d0dfc8> ([<tools.ast.AttrDeclarationNode object a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 430:Defaulted state 48: Reduce using 16
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi def_func semi feature_list . LexToken(ccur,'}',74,1912)
   yacc.py: 471:Action : Reduce rule [feature_list -> def_func semi feature_list] with [<FuncDeclarationNode @ 0x7ff028cf8c88>,';',<list @ 0x7ff028d0dfc8>] and goto state 48
   yacc.py: 506:Result : <list @ 0x7ff028d0df88> ([<tools.ast.FuncDeclarationNode object a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 430:Defaulted state 48: Reduce using 16
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi def_func semi feature_list . LexToken(ccur,'}',74,1912)
   yacc.py: 471:Action : Reduce rule [feature_list -> def_func semi feature_list] with [<FuncDeclarationNode @ 0x7ff028d00780>,';',<list @ 0x7ff028d0df88>] and goto state 48
   yacc.py: 506:Result : <list @ 0x7ff028d0dfc8> ([<tools.ast.FuncDeclarationNode object a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 430:Defaulted state 48: Reduce using 16
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi def_func semi feature_list . LexToken(ccur,'}',74,1912)
   yacc.py: 471:Action : Reduce rule [feature_list -> def_func semi feature_list] with [<FuncDeclarationNode @ 0x7ff028e50f60>,';',<list @ 0x7ff028d0dfc8>] and goto state 48
   yacc.py: 506:Result : <list @ 0x7ff028d0df88> ([<tools.ast.FuncDeclarationNode object a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 430:Defaulted state 48: Reduce using 16
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi def_func semi feature_list . LexToken(ccur,'}',74,1912)
   yacc.py: 471:Action : Reduce rule [feature_list -> def_func semi feature_list] with [<FuncDeclarationNode @ 0x7ff028e50a20>,';',<list @ 0x7ff028d0df88>] and goto state 48
   yacc.py: 506:Result : <list @ 0x7ff028d0dfc8> ([<tools.ast.FuncDeclarationNode object a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 430:Defaulted state 48: Reduce using 16
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi def_func semi feature_list . LexToken(ccur,'}',74,1912)
   yacc.py: 471:Action : Reduce rule [feature_list -> def_func semi feature_list] with [<FuncDeclarationNode @ 0x7ff028e508d0>,';',<list @ 0x7ff028d0dfc8>] and goto state 48
   yacc.py: 506:Result : <list @ 0x7ff028d0df88> ([<tools.ast.FuncDeclarationNode object a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 430:Defaulted state 48: Reduce using 16
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi def_func semi feature_list . LexToken(ccur,'}',74,1912)
   yacc.py: 471:Action : Reduce rule [feature_list -> def_func semi feature_list] with [<FuncDeclarationNode @ 0x7ff028e50978>,';',<list @ 0x7ff028d0df88>] and goto state 47
   yacc.py: 506:Result : <list @ 0x7ff028d0dfc8> ([<tools.ast.FuncDeclarationNode object a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 47
   yacc.py: 430:Defaulted state 47: Reduce using 15
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi def_attr semi feature_list . LexToken(ccur,'}',74,1912)
   yacc.py: 471:Action : Reduce rule [feature_list -> def_attr semi feature_list] with [<AttrDeclarationNode @ 0x7ff028e506d8>,';',<list @ 0x7ff028d0dfc8>] and goto state 47
   yacc.py: 506:Result : <list @ 0x7ff028d0df88> ([<tools.ast.AttrDeclarationNode object a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 47
   yacc.py: 430:Defaulted state 47: Reduce using 15
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi def_attr semi feature_list . LexToken(ccur,'}',74,1912)
   yacc.py: 471:Action : Reduce rule [feature_list -> def_attr semi feature_list] with [<AttrDeclarationNode @ 0x7ff028dfe5f8>,';',<list @ 0x7ff028d0df88>] and goto state 48
   yacc.py: 506:Result : <list @ 0x7ff028d0dfc8> ([<tools.ast.AttrDeclarationNode object a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 430:Defaulted state 48: Reduce using 16
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi def_func semi feature_list . LexToken(ccur,'}',74,1912)
   yacc.py: 471:Action : Reduce rule [feature_list -> def_func semi feature_list] with [<FuncDeclarationNode @ 0x7ff028e504e0>,';',<list @ 0x7ff028d0dfc8>] and goto state 47
   yacc.py: 506:Result : <list @ 0x7ff028d0df88> ([<tools.ast.FuncDeclarationNode object a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 47
   yacc.py: 430:Defaulted state 47: Reduce using 15
   yacc.py: 435:Stack  : def_class class type ocur def_attr semi feature_list . LexToken(ccur,'}',74,1912)
   yacc.py: 471:Action : Reduce rule [feature_list -> def_attr semi feature_list] with [<AttrDeclarationNode @ 0x7ff028dfe550>,';',<list @ 0x7ff028d0df88>] and goto state 14
   yacc.py: 506:Result : <list @ 0x7ff028d0dfc8> ([<tools.ast.AttrDeclarationNode object a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 14
   yacc.py: 435:Stack  : def_class class type ocur feature_list . LexToken(ccur,'}',74,1912)
   yacc.py: 445:Action : Shift and goto state 25
   yacc.py: 410:
   yacc.py: 411:State  : 25
   yacc.py: 435:Stack  : def_class class type ocur feature_list ccur . LexToken(class,'class',76,1928)
   yacc.py: 580:Error  : def_class class type ocur feature_list ccur . LexToken(class,'class',76,1928)
   yacc.py: 410:
   yacc.py: 411:State  : 25
   yacc.py: 435:Stack  : def_class class type ocur feature_list ccur . error
   yacc.py: 445:Action : Shift and goto state 39
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 435:Stack  : def_class class type ocur feature_list ccur error . LexToken(class,'class',76,1928)
   yacc.py: 471:Action : Reduce rule [def_class -> class type ocur feature_list ccur error] with ['class','Test','{',<list @ 0x7ff028d0dfc8>,'}',<LexToken @ 0x7ff028d007f0>] and goto state 3
   yacc.py: 506:Result : <ErrorNode @ 0x7ff028dfe6a0> (<tools.ast.ErrorNode object at 0x7ff028d ...)
   yacc.py: 410:
   yacc.py: 411:State  : 3
   yacc.py: 435:Stack  : def_class def_class . LexToken(class,'class',76,1928)
   yacc.py: 445:Action : Shift and goto state 5
   yacc.py: 410:
   yacc.py: 411:State  : 5
   yacc.py: 435:Stack  : def_class def_class class . LexToken(type,'Test2',76,1934)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 435:Stack  : def_class def_class class type . LexToken(ocur,'{',76,1940)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
   yacc.py: 435:Stack  : def_class def_class class type ocur . LexToken(id,'test1',77,1946)
   yacc.py: 445:Action : Shift and goto state 19
   yacc.py: 410:
   yacc.py: 411:State  : 19
   yacc.py: 435:Stack  : def_class def_class class type ocur id . LexToken(colon,':',77,1951)
   yacc.py: 445:Action : Shift and goto state 31
   yacc.py: 410:
   yacc.py: 411:State  : 31
   yacc.py: 435:Stack  : def_class def_class class type ocur id colon . LexToken(type,'Test',77,1953)
   yacc.py: 445:Action : Shift and goto state 49
   yacc.py: 410:
   yacc.py: 411:State  : 49
   yacc.py: 435:Stack  : def_class def_class class type ocur id colon type . LexToken(larrow,'<-',77,1958)
   yacc.py: 445:Action : Shift and goto state 62
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 435:Stack  : def_class def_class class type ocur id colon type larrow . LexToken(new,'new',77,1961)
   yacc.py: 445:Action : Shift and goto state 89
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : def_class def_class class type ocur id colon type larrow new . LexToken(type,'Test',77,1965)
   yacc.py: 445:Action : Shift and goto state 134
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 435:Stack  : def_class def_class class type ocur id colon type larrow new type . LexToken(semi,';',77,1969)
   yacc.py: 471:Action : Reduce rule [atom -> new type] with ['new','Test'] and goto state 79
   yacc.py: 506:Result : <InstantiateNode @ 0x7ff028de2f28> (<tools.ast.InstantiateNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class def_class class type ocur id colon type larrow atom . LexToken(semi,';',77,1969)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<InstantiateNode @ 0x7ff028de2f28>] and goto state 77
   yacc.py: 506:Result : <InstantiateNode @ 0x7ff028de2f28> (<tools.ast.InstantiateNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class def_class class type ocur id colon type larrow factor . LexToken(semi,';',77,1969)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<InstantiateNode @ 0x7ff028de2f28>] and goto state 76
   yacc.py: 506:Result : <InstantiateNode @ 0x7ff028de2f28> (<tools.ast.InstantiateNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class def_class class type ocur id colon type larrow base_call . LexToken(semi,';',77,1969)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<InstantiateNode @ 0x7ff028de2f28>] and goto state 75
   yacc.py: 506:Result : <InstantiateNode @ 0x7ff028de2f28> (<tools.ast.InstantiateNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class def_class class type ocur id colon type larrow term . LexToken(semi,';',77,1969)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<InstantiateNode @ 0x7ff028de2f28>] and goto state 74
   yacc.py: 506:Result : <InstantiateNode @ 0x7ff028de2f28> (<tools.ast.InstantiateNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class def_class class type ocur id colon type larrow op . LexToken(semi,';',77,1969)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<InstantiateNode @ 0x7ff028de2f28>] and goto state 73
   yacc.py: 506:Result : <InstantiateNode @ 0x7ff028de2f28> (<tools.ast.InstantiateNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class def_class class type ocur id colon type larrow comp . LexToken(semi,';',77,1969)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<InstantiateNode @ 0x7ff028de2f28>] and goto state 97
   yacc.py: 506:Result : <InstantiateNode @ 0x7ff028de2f28> (<tools.ast.InstantiateNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 430:Defaulted state 97: Reduce using 19
   yacc.py: 435:Stack  : def_class def_class class type ocur id colon type larrow expr . LexToken(semi,';',77,1969)
   yacc.py: 471:Action : Reduce rule [def_attr -> id colon type larrow expr] with ['test1',':','Test','<-',<InstantiateNode @ 0x7ff028de2f28>] and goto state 17
   yacc.py: 506:Result : <AttrDeclarationNode @ 0x7ff028dfe780> (<tools.ast.AttrDeclarationNode object at ...)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr . LexToken(semi,';',77,1969)
   yacc.py: 445:Action : Shift and goto state 29
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi . LexToken(id,'testing1',79,1976)
   yacc.py: 445:Action : Shift and goto state 19
   yacc.py: 410:
   yacc.py: 411:State  : 19
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id . LexToken(opar,'(',79,1984)
   yacc.py: 445:Action : Shift and goto state 32
   yacc.py: 410:
   yacc.py: 411:State  : 32
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar . LexToken(cpar,')',79,1985)
   yacc.py: 474:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x55810cd760f0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 430:Defaulted state 45: Reduce using 34
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar epsilon . LexToken(cpar,')',79,1985)
   yacc.py: 471:Action : Reduce rule [param_list_empty -> epsilon] with [None] and goto state 43
   yacc.py: 506:Result : <list @ 0x7ff028d0df88> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 43
   yacc.py: 430:Defaulted state 43: Reduce using 31
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar param_list_empty . LexToken(cpar,')',79,1985)
   yacc.py: 471:Action : Reduce rule [formals -> param_list_empty] with [[]] and goto state 51
   yacc.py: 506:Result : <list @ 0x7ff028d0df88> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals . LexToken(cpar,')',79,1985)
   yacc.py: 445:Action : Shift and goto state 64
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar . LexToken(colon,':',79,1986)
   yacc.py: 445:Action : Shift and goto state 100
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon . LexToken(type,'Test',79,1988)
   yacc.py: 445:Action : Shift and goto state 138
   yacc.py: 410:
   yacc.py: 411:State  : 138
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type . LexToken(ocur,'{',79,1993)
   yacc.py: 445:Action : Shift and goto state 181
   yacc.py: 410:
   yacc.py: 411:State  : 181
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur . LexToken(id,'test1',80,2003)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur id . LexToken(dot,'.',80,2008)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['test1'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7ff028dfe898> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur atom . LexToken(dot,'.',80,2008)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7ff028dfe898>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7ff028dfe898> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor . LexToken(dot,'.',80,2008)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot . LexToken(id,'testing4',80,2009)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id . LexToken(opar,'(',80,2017)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar . LexToken(num,1.0,80,2018)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar num . LexToken(plus,'+',80,2020)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [1.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028dfe630> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar atom . LexToken(plus,'+',80,2020)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028dfe630>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028dfe630> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar factor . LexToken(plus,'+',80,2020)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028dfe630>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028dfe630> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar base_call . LexToken(plus,'+',80,2020)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7ff028dfe630>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028dfe630> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar term . LexToken(plus,'+',80,2020)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7ff028dfe630>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028dfe630> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar op . LexToken(plus,'+',80,2020)
   yacc.py: 445:Action : Shift and goto state 117
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar op plus . LexToken(num,1.0,80,2022)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar op plus num . LexToken(comma,',',80,2023)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [1.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e502e8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar op plus atom . LexToken(comma,',',80,2023)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028e502e8>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e502e8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar op plus factor . LexToken(comma,',',80,2023)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028e502e8>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e502e8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar op plus base_call . LexToken(comma,',',80,2023)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7ff028e502e8>] and goto state 159
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e502e8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar op plus term . LexToken(comma,',',80,2023)
   yacc.py: 471:Action : Reduce rule [op -> op plus term] with [<ConstantNumNode @ 0x7ff028dfe630>,'+',<ConstantNumNode @ 0x7ff028e502e8>] and goto state 74
   yacc.py: 506:Result : <PlusNode @ 0x7ff028e50080> (<tools.ast.PlusNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar op . LexToken(comma,',',80,2023)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<PlusNode @ 0x7ff028e50080>] and goto state 73
   yacc.py: 506:Result : <PlusNode @ 0x7ff028e50080> (<tools.ast.PlusNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar comp . LexToken(comma,',',80,2023)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<PlusNode @ 0x7ff028e50080>] and goto state 155
   yacc.py: 506:Result : <PlusNode @ 0x7ff028e50080> (<tools.ast.PlusNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr . LexToken(comma,',',80,2023)
   yacc.py: 445:Action : Shift and goto state 189
   yacc.py: 410:
   yacc.py: 411:State  : 189
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma . LexToken(num,1.0,80,2025)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma num . LexToken(plus,'+',80,2027)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [1.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50550> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma atom . LexToken(plus,'+',80,2027)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028e50550>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50550> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma factor . LexToken(plus,'+',80,2027)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028e50550>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50550> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma base_call . LexToken(plus,'+',80,2027)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7ff028e50550>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50550> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma term . LexToken(plus,'+',80,2027)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7ff028e50550>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50550> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma op . LexToken(plus,'+',80,2027)
   yacc.py: 445:Action : Shift and goto state 117
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma op plus . LexToken(num,2.0,80,2029)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma op plus num . LexToken(cpar,')',80,2030)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [2.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e505f8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma op plus atom . LexToken(cpar,')',80,2030)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028e505f8>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e505f8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma op plus factor . LexToken(cpar,')',80,2030)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028e505f8>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e505f8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma op plus base_call . LexToken(cpar,')',80,2030)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7ff028e505f8>] and goto state 159
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e505f8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma op plus term . LexToken(cpar,')',80,2030)
   yacc.py: 471:Action : Reduce rule [op -> op plus term] with [<ConstantNumNode @ 0x7ff028e50550>,'+',<ConstantNumNode @ 0x7ff028e505f8>] and goto state 74
   yacc.py: 506:Result : <PlusNode @ 0x7ff028e50668> (<tools.ast.PlusNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma op . LexToken(cpar,')',80,2030)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<PlusNode @ 0x7ff028e50668>] and goto state 73
   yacc.py: 506:Result : <PlusNode @ 0x7ff028e50668> (<tools.ast.PlusNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma comp . LexToken(cpar,')',80,2030)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<PlusNode @ 0x7ff028e50668>] and goto state 155
   yacc.py: 506:Result : <PlusNode @ 0x7ff028e50668> (<tools.ast.PlusNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma expr . LexToken(cpar,')',80,2030)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<PlusNode @ 0x7ff028e50668>] and goto state 211
   yacc.py: 506:Result : <list @ 0x7ff028d0dfc8> ([<tools.ast.PlusNode object at 0x7ff028e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 211
   yacc.py: 430:Defaulted state 211: Reduce using 94
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma arg_list . LexToken(cpar,')',80,2030)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr comma arg_list] with [<PlusNode @ 0x7ff028e50080>,',',<list @ 0x7ff028d0dfc8>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7ff028d09308> ([<tools.ast.PlusNode object at 0x7ff028e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar arg_list . LexToken(cpar,')',80,2030)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7ff028d09308>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7ff028d09308> ([<tools.ast.PlusNode object at 0x7ff028e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar args . LexToken(cpar,')',80,2030)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar args cpar . LexToken(dot,'.',80,2031)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['testing4','(',<list @ 0x7ff028d09308>,')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7ff028cccac8> (('testing4', [<tools.ast.PlusNode object ...)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot func_call . LexToken(dot,'.',80,2031)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<VariableNode @ 0x7ff028dfe898>,'.',<tuple @ 0x7ff028cccac8>] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7ff028e50358> (<tools.ast.CallNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor . LexToken(dot,'.',80,2031)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot . LexToken(id,'testing4',80,2032)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id . LexToken(opar,'(',80,2040)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar . LexToken(num,2.0,80,2041)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar num . LexToken(plus,'+',80,2043)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [2.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50780> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar atom . LexToken(plus,'+',80,2043)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028e50780>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50780> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar factor . LexToken(plus,'+',80,2043)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028e50780>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50780> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar base_call . LexToken(plus,'+',80,2043)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7ff028e50780>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50780> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar term . LexToken(plus,'+',80,2043)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7ff028e50780>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50780> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar op . LexToken(plus,'+',80,2043)
   yacc.py: 445:Action : Shift and goto state 117
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar op plus . LexToken(num,3.0,80,2045)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar op plus num . LexToken(comma,',',80,2046)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [3.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50320> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar op plus atom . LexToken(comma,',',80,2046)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028e50320>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50320> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar op plus factor . LexToken(comma,',',80,2046)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028e50320>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50320> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar op plus base_call . LexToken(comma,',',80,2046)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7ff028e50320>] and goto state 159
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50320> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar op plus term . LexToken(comma,',',80,2046)
   yacc.py: 471:Action : Reduce rule [op -> op plus term] with [<ConstantNumNode @ 0x7ff028e50780>,'+',<ConstantNumNode @ 0x7ff028e50320>] and goto state 74
   yacc.py: 506:Result : <PlusNode @ 0x7ff028e50048> (<tools.ast.PlusNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar op . LexToken(comma,',',80,2046)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<PlusNode @ 0x7ff028e50048>] and goto state 73
   yacc.py: 506:Result : <PlusNode @ 0x7ff028e50048> (<tools.ast.PlusNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar comp . LexToken(comma,',',80,2046)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<PlusNode @ 0x7ff028e50048>] and goto state 155
   yacc.py: 506:Result : <PlusNode @ 0x7ff028e50048> (<tools.ast.PlusNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr . LexToken(comma,',',80,2046)
   yacc.py: 445:Action : Shift and goto state 189
   yacc.py: 410:
   yacc.py: 411:State  : 189
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma . LexToken(num,3.0,80,2048)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma num . LexToken(plus,'+',80,2050)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [3.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50160> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma atom . LexToken(plus,'+',80,2050)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028e50160>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50160> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma factor . LexToken(plus,'+',80,2050)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028e50160>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50160> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma base_call . LexToken(plus,'+',80,2050)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7ff028e50160>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50160> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma term . LexToken(plus,'+',80,2050)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7ff028e50160>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50160> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma op . LexToken(plus,'+',80,2050)
   yacc.py: 445:Action : Shift and goto state 117
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma op plus . LexToken(num,5.0,80,2052)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma op plus num . LexToken(cpar,')',80,2053)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [5.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50470> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma op plus atom . LexToken(cpar,')',80,2053)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028e50470>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50470> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma op plus factor . LexToken(cpar,')',80,2053)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028e50470>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50470> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma op plus base_call . LexToken(cpar,')',80,2053)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7ff028e50470>] and goto state 159
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50470> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma op plus term . LexToken(cpar,')',80,2053)
   yacc.py: 471:Action : Reduce rule [op -> op plus term] with [<ConstantNumNode @ 0x7ff028e50160>,'+',<ConstantNumNode @ 0x7ff028e50470>] and goto state 74
   yacc.py: 506:Result : <PlusNode @ 0x7ff028e50710> (<tools.ast.PlusNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma op . LexToken(cpar,')',80,2053)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<PlusNode @ 0x7ff028e50710>] and goto state 73
   yacc.py: 506:Result : <PlusNode @ 0x7ff028e50710> (<tools.ast.PlusNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma comp . LexToken(cpar,')',80,2053)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<PlusNode @ 0x7ff028e50710>] and goto state 155
   yacc.py: 506:Result : <PlusNode @ 0x7ff028e50710> (<tools.ast.PlusNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma expr . LexToken(cpar,')',80,2053)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<PlusNode @ 0x7ff028e50710>] and goto state 211
   yacc.py: 506:Result : <list @ 0x7ff028d08c88> ([<tools.ast.PlusNode object at 0x7ff028e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 211
   yacc.py: 430:Defaulted state 211: Reduce using 94
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma arg_list . LexToken(cpar,')',80,2053)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr comma arg_list] with [<PlusNode @ 0x7ff028e50048>,',',<list @ 0x7ff028d08c88>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7ff028d090c8> ([<tools.ast.PlusNode object at 0x7ff028e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar arg_list . LexToken(cpar,')',80,2053)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7ff028d090c8>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7ff028d090c8> ([<tools.ast.PlusNode object at 0x7ff028e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar args . LexToken(cpar,')',80,2053)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar args cpar . LexToken(dot,'.',80,2054)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['testing4','(',<list @ 0x7ff028d090c8>,')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7ff028cccac8> (('testing4', [<tools.ast.PlusNode object ...)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot func_call . LexToken(dot,'.',80,2054)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<CallNode @ 0x7ff028e50358>,'.',<tuple @ 0x7ff028cccac8>] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7ff028e50240> (<tools.ast.CallNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor . LexToken(dot,'.',80,2054)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot . LexToken(id,'testing4',80,2055)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id . LexToken(opar,'(',80,2063)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar . LexToken(num,5.0,80,2064)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar num . LexToken(plus,'+',80,2066)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [5.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50908> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar atom . LexToken(plus,'+',80,2066)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028e50908>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50908> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar factor . LexToken(plus,'+',80,2066)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028e50908>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50908> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar base_call . LexToken(plus,'+',80,2066)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7ff028e50908>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50908> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar term . LexToken(plus,'+',80,2066)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7ff028e50908>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50908> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar op . LexToken(plus,'+',80,2066)
   yacc.py: 445:Action : Shift and goto state 117
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar op plus . LexToken(num,8.0,80,2068)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar op plus num . LexToken(comma,',',80,2069)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [8.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50400> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar op plus atom . LexToken(comma,',',80,2069)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028e50400>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50400> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar op plus factor . LexToken(comma,',',80,2069)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028e50400>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50400> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar op plus base_call . LexToken(comma,',',80,2069)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7ff028e50400>] and goto state 159
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50400> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar op plus term . LexToken(comma,',',80,2069)
   yacc.py: 471:Action : Reduce rule [op -> op plus term] with [<ConstantNumNode @ 0x7ff028e50908>,'+',<ConstantNumNode @ 0x7ff028e50400>] and goto state 74
   yacc.py: 506:Result : <PlusNode @ 0x7ff028e506d8> (<tools.ast.PlusNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar op . LexToken(comma,',',80,2069)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<PlusNode @ 0x7ff028e506d8>] and goto state 73
   yacc.py: 506:Result : <PlusNode @ 0x7ff028e506d8> (<tools.ast.PlusNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar comp . LexToken(comma,',',80,2069)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<PlusNode @ 0x7ff028e506d8>] and goto state 155
   yacc.py: 506:Result : <PlusNode @ 0x7ff028e506d8> (<tools.ast.PlusNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr . LexToken(comma,',',80,2069)
   yacc.py: 445:Action : Shift and goto state 189
   yacc.py: 410:
   yacc.py: 411:State  : 189
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma . LexToken(num,8.0,80,2071)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma num . LexToken(plus,'+',80,2073)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [8.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e503c8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma atom . LexToken(plus,'+',80,2073)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028e503c8>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e503c8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma factor . LexToken(plus,'+',80,2073)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028e503c8>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e503c8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma base_call . LexToken(plus,'+',80,2073)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7ff028e503c8>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e503c8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma term . LexToken(plus,'+',80,2073)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7ff028e503c8>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e503c8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma op . LexToken(plus,'+',80,2073)
   yacc.py: 445:Action : Shift and goto state 117
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma op plus . LexToken(num,13.0,80,2075)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma op plus num . LexToken(cpar,')',80,2077)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [13.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50198> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma op plus atom . LexToken(cpar,')',80,2077)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028e50198>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50198> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma op plus factor . LexToken(cpar,')',80,2077)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028e50198>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50198> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma op plus base_call . LexToken(cpar,')',80,2077)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7ff028e50198>] and goto state 159
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50198> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma op plus term . LexToken(cpar,')',80,2077)
   yacc.py: 471:Action : Reduce rule [op -> op plus term] with [<ConstantNumNode @ 0x7ff028e503c8>,'+',<ConstantNumNode @ 0x7ff028e50198>] and goto state 74
   yacc.py: 506:Result : <PlusNode @ 0x7ff028e50278> (<tools.ast.PlusNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma op . LexToken(cpar,')',80,2077)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<PlusNode @ 0x7ff028e50278>] and goto state 73
   yacc.py: 506:Result : <PlusNode @ 0x7ff028e50278> (<tools.ast.PlusNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma comp . LexToken(cpar,')',80,2077)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<PlusNode @ 0x7ff028e50278>] and goto state 155
   yacc.py: 506:Result : <PlusNode @ 0x7ff028e50278> (<tools.ast.PlusNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma expr . LexToken(cpar,')',80,2077)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<PlusNode @ 0x7ff028e50278>] and goto state 211
   yacc.py: 506:Result : <list @ 0x7ff028d0dfc8> ([<tools.ast.PlusNode object at 0x7ff028e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 211
   yacc.py: 430:Defaulted state 211: Reduce using 94
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar expr comma arg_list . LexToken(cpar,')',80,2077)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr comma arg_list] with [<PlusNode @ 0x7ff028e506d8>,',',<list @ 0x7ff028d0dfc8>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7ff028d09508> ([<tools.ast.PlusNode object at 0x7ff028e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar arg_list . LexToken(cpar,')',80,2077)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7ff028d09508>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7ff028d09508> ([<tools.ast.PlusNode object at 0x7ff028e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar args . LexToken(cpar,')',80,2077)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot id opar args cpar . LexToken(ccur,'}',81,2083)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['testing4','(',<list @ 0x7ff028d09508>,')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7ff028cccac8> (('testing4', [<tools.ast.PlusNode object ...)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor dot func_call . LexToken(ccur,'}',81,2083)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<CallNode @ 0x7ff028e50240>,'.',<tuple @ 0x7ff028cccac8>] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7ff028e507b8> (<tools.ast.CallNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur factor . LexToken(ccur,'}',81,2083)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<CallNode @ 0x7ff028e507b8>] and goto state 76
   yacc.py: 506:Result : <CallNode @ 0x7ff028e507b8> (<tools.ast.CallNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur base_call . LexToken(ccur,'}',81,2083)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<CallNode @ 0x7ff028e507b8>] and goto state 75
   yacc.py: 506:Result : <CallNode @ 0x7ff028e507b8> (<tools.ast.CallNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur term . LexToken(ccur,'}',81,2083)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<CallNode @ 0x7ff028e507b8>] and goto state 74
   yacc.py: 506:Result : <CallNode @ 0x7ff028e507b8> (<tools.ast.CallNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur op . LexToken(ccur,'}',81,2083)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<CallNode @ 0x7ff028e507b8>] and goto state 73
   yacc.py: 506:Result : <CallNode @ 0x7ff028e507b8> (<tools.ast.CallNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur comp . LexToken(ccur,'}',81,2083)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<CallNode @ 0x7ff028e507b8>] and goto state 206
   yacc.py: 506:Result : <CallNode @ 0x7ff028e507b8> (<tools.ast.CallNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 206
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur expr . LexToken(ccur,'}',81,2083)
   yacc.py: 445:Action : Shift and goto state 222
   yacc.py: 410:
   yacc.py: 411:State  : 222
   yacc.py: 430:Defaulted state 222: Reduce using 25
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi id opar formals cpar colon type ocur expr ccur . None
   yacc.py: 471:Action : Reduce rule [def_func -> id opar formals cpar colon type ocur expr ccur] with ['testing1','(',[],')',':','Test','{',<CallNode @ 0x7ff028e507b8>,'}'] and goto state 18
   yacc.py: 506:Result : <FuncDeclarationNode @ 0x7ff028e50828> (<tools.ast.FuncDeclarationNode object at ...)
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func . LexToken(semi,';',81,2084)
   yacc.py: 445:Action : Shift and goto state 30
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi . LexToken(id,'testing2',83,2091)
   yacc.py: 445:Action : Shift and goto state 19
   yacc.py: 410:
   yacc.py: 411:State  : 19
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi id . LexToken(opar,'(',83,2099)
   yacc.py: 445:Action : Shift and goto state 32
   yacc.py: 410:
   yacc.py: 411:State  : 32
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi id opar . LexToken(id,'x',83,2100)
   yacc.py: 445:Action : Shift and goto state 46
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi id opar id . LexToken(colon,':',83,2101)
   yacc.py: 445:Action : Shift and goto state 61
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi id opar id colon . LexToken(type,'Int',83,2103)
   yacc.py: 445:Action : Shift and goto state 96
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi id opar id colon type . LexToken(comma,',',83,2106)
   yacc.py: 471:Action : Reduce rule [param -> id colon type] with ['x',':','Int'] and goto state 44
   yacc.py: 506:Result : <tuple @ 0x7ff028cccac8> (('x', 'Int'))
   yacc.py: 410:
   yacc.py: 411:State  : 44
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi id opar param . LexToken(comma,',',83,2106)
   yacc.py: 445:Action : Shift and goto state 60
   yacc.py: 410:
   yacc.py: 411:State  : 60
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi id opar param comma . LexToken(id,'y',83,2108)
   yacc.py: 445:Action : Shift and goto state 46
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi id opar param comma id . LexToken(colon,':',83,2109)
   yacc.py: 445:Action : Shift and goto state 61
   yacc.py: 410:
   yacc.py: 411:State  : 61
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi id opar param comma id colon . LexToken(type,'Int',83,2111)
   yacc.py: 445:Action : Shift and goto state 96
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi id opar param comma id colon type . LexToken(cpar,')',83,2114)
   yacc.py: 471:Action : Reduce rule [param -> id colon type] with ['y',':','Int'] and goto state 44
   yacc.py: 506:Result : <tuple @ 0x7ff028ccc548> (('y', 'Int'))
   yacc.py: 410:
   yacc.py: 411:State  : 44
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi id opar param comma param . LexToken(cpar,')',83,2114)
   yacc.py: 471:Action : Reduce rule [param_list -> param] with [('y', 'Int')] and goto state 95
   yacc.py: 506:Result : <list @ 0x7ff028d0df08> ([('y', 'Int')])
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 430:Defaulted state 95: Reduce using 33
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi id opar param comma param_list . LexToken(cpar,')',83,2114)
   yacc.py: 471:Action : Reduce rule [param_list -> param comma param_list] with [('x', 'Int'),',',[('y', 'Int')]] and goto state 42
   yacc.py: 506:Result : <list @ 0x7ff028d10508> ([('x', 'Int'), ('y', 'Int')])
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 430:Defaulted state 42: Reduce using 30
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi id opar param_list . LexToken(cpar,')',83,2114)
   yacc.py: 471:Action : Reduce rule [formals -> param_list] with [<list @ 0x7ff028d10508>] and goto state 51
   yacc.py: 506:Result : <list @ 0x7ff028d10508> ([('x', 'Int'), ('y', 'Int')])
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi id opar formals . LexToken(cpar,')',83,2114)
   yacc.py: 445:Action : Shift and goto state 64
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi id opar formals cpar . LexToken(colon,':',83,2115)
   yacc.py: 445:Action : Shift and goto state 100
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi id opar formals cpar colon . LexToken(type,'Test2',83,2117)
   yacc.py: 445:Action : Shift and goto state 138
   yacc.py: 410:
   yacc.py: 411:State  : 138
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi id opar formals cpar colon type . LexToken(ocur,'{',83,2123)
   yacc.py: 445:Action : Shift and goto state 181
   yacc.py: 410:
   yacc.py: 411:State  : 181
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi id opar formals cpar colon type ocur . LexToken(id,'self',84,2133)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi id opar formals cpar colon type ocur id . LexToken(ccur,'}',85,2142)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['self'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7ff028dfe550> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi id opar formals cpar colon type ocur atom . LexToken(ccur,'}',85,2142)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7ff028dfe550>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7ff028dfe550> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi id opar formals cpar colon type ocur factor . LexToken(ccur,'}',85,2142)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<VariableNode @ 0x7ff028dfe550>] and goto state 76
   yacc.py: 506:Result : <VariableNode @ 0x7ff028dfe550> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi id opar formals cpar colon type ocur base_call . LexToken(ccur,'}',85,2142)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<VariableNode @ 0x7ff028dfe550>] and goto state 75
   yacc.py: 506:Result : <VariableNode @ 0x7ff028dfe550> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi id opar formals cpar colon type ocur term . LexToken(ccur,'}',85,2142)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<VariableNode @ 0x7ff028dfe550>] and goto state 74
   yacc.py: 506:Result : <VariableNode @ 0x7ff028dfe550> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi id opar formals cpar colon type ocur op . LexToken(ccur,'}',85,2142)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<VariableNode @ 0x7ff028dfe550>] and goto state 73
   yacc.py: 506:Result : <VariableNode @ 0x7ff028dfe550> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi id opar formals cpar colon type ocur comp . LexToken(ccur,'}',85,2142)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<VariableNode @ 0x7ff028dfe550>] and goto state 206
   yacc.py: 506:Result : <VariableNode @ 0x7ff028dfe550> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 206
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi id opar formals cpar colon type ocur expr . LexToken(ccur,'}',85,2142)
   yacc.py: 445:Action : Shift and goto state 222
   yacc.py: 410:
   yacc.py: 411:State  : 222
   yacc.py: 430:Defaulted state 222: Reduce using 25
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi id opar formals cpar colon type ocur expr ccur . None
   yacc.py: 471:Action : Reduce rule [def_func -> id opar formals cpar colon type ocur expr ccur] with ['testing2','(',<list @ 0x7ff028d10508>,')',':','Test2','{',<VariableNode @ 0x7ff028dfe550>,'}'] and goto state 18
   yacc.py: 506:Result : <FuncDeclarationNode @ 0x7ff028e502b0> (<tools.ast.FuncDeclarationNode object at ...)
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func . LexToken(semi,';',85,2143)
   yacc.py: 445:Action : Shift and goto state 30
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi . LexToken(id,'testing3',87,2150)
   yacc.py: 445:Action : Shift and goto state 19
   yacc.py: 410:
   yacc.py: 411:State  : 19
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id . LexToken(opar,'(',87,2158)
   yacc.py: 445:Action : Shift and goto state 32
   yacc.py: 410:
   yacc.py: 411:State  : 32
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar . LexToken(cpar,')',87,2159)
   yacc.py: 474:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x55810cd760f0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 430:Defaulted state 45: Reduce using 34
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar epsilon . LexToken(cpar,')',87,2159)
   yacc.py: 471:Action : Reduce rule [param_list_empty -> epsilon] with [None] and goto state 43
   yacc.py: 506:Result : <list @ 0x7ff028d0df08> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 43
   yacc.py: 430:Defaulted state 43: Reduce using 31
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar param_list_empty . LexToken(cpar,')',87,2159)
   yacc.py: 471:Action : Reduce rule [formals -> param_list_empty] with [[]] and goto state 51
   yacc.py: 506:Result : <list @ 0x7ff028d0df08> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals . LexToken(cpar,')',87,2159)
   yacc.py: 445:Action : Shift and goto state 64
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar . LexToken(colon,':',87,2160)
   yacc.py: 445:Action : Shift and goto state 100
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon . LexToken(type,'Test2',87,2162)
   yacc.py: 445:Action : Shift and goto state 138
   yacc.py: 410:
   yacc.py: 411:State  : 138
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type . LexToken(ocur,'{',87,2168)
   yacc.py: 445:Action : Shift and goto state 181
   yacc.py: 410:
   yacc.py: 411:State  : 181
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur . LexToken(id,'testing2',88,2178)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur id . LexToken(opar,'(',88,2186)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur id opar . LexToken(num,1.0,88,2187)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur id opar num . LexToken(plus,'+',88,2189)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [1.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028dfe710> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur id opar atom . LexToken(plus,'+',88,2189)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028dfe710>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028dfe710> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur id opar factor . LexToken(plus,'+',88,2189)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028dfe710>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028dfe710> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur id opar base_call . LexToken(plus,'+',88,2189)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7ff028dfe710>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028dfe710> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur id opar term . LexToken(plus,'+',88,2189)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7ff028dfe710>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028dfe710> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur id opar op . LexToken(plus,'+',88,2189)
   yacc.py: 445:Action : Shift and goto state 117
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur id opar op plus . LexToken(num,1.0,88,2191)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur id opar op plus num . LexToken(comma,',',88,2192)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [1.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028dfe7b8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur id opar op plus atom . LexToken(comma,',',88,2192)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028dfe7b8>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028dfe7b8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur id opar op plus factor . LexToken(comma,',',88,2192)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028dfe7b8>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028dfe7b8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur id opar op plus base_call . LexToken(comma,',',88,2192)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7ff028dfe7b8>] and goto state 159
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028dfe7b8> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur id opar op plus term . LexToken(comma,',',88,2192)
   yacc.py: 471:Action : Reduce rule [op -> op plus term] with [<ConstantNumNode @ 0x7ff028dfe710>,'+',<ConstantNumNode @ 0x7ff028dfe7b8>] and goto state 74
   yacc.py: 506:Result : <PlusNode @ 0x7ff028e50eb8> (<tools.ast.PlusNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur id opar op . LexToken(comma,',',88,2192)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<PlusNode @ 0x7ff028e50eb8>] and goto state 73
   yacc.py: 506:Result : <PlusNode @ 0x7ff028e50eb8> (<tools.ast.PlusNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur id opar comp . LexToken(comma,',',88,2192)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<PlusNode @ 0x7ff028e50eb8>] and goto state 155
   yacc.py: 506:Result : <PlusNode @ 0x7ff028e50eb8> (<tools.ast.PlusNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur id opar expr . LexToken(comma,',',88,2192)
   yacc.py: 445:Action : Shift and goto state 189
   yacc.py: 410:
   yacc.py: 411:State  : 189
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur id opar expr comma . LexToken(num,1.0,88,2194)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur id opar expr comma num . LexToken(plus,'+',88,2196)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [1.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50860> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur id opar expr comma atom . LexToken(plus,'+',88,2196)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028e50860>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50860> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur id opar expr comma factor . LexToken(plus,'+',88,2196)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028e50860>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50860> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur id opar expr comma base_call . LexToken(plus,'+',88,2196)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7ff028e50860>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50860> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur id opar expr comma term . LexToken(plus,'+',88,2196)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7ff028e50860>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50860> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur id opar expr comma op . LexToken(plus,'+',88,2196)
   yacc.py: 445:Action : Shift and goto state 117
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur id opar expr comma op plus . LexToken(num,2.0,88,2198)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur id opar expr comma op plus num . LexToken(cpar,')',88,2199)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [2.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50a90> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur id opar expr comma op plus atom . LexToken(cpar,')',88,2199)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028e50a90>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50a90> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur id opar expr comma op plus factor . LexToken(cpar,')',88,2199)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028e50a90>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50a90> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur id opar expr comma op plus base_call . LexToken(cpar,')',88,2199)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7ff028e50a90>] and goto state 159
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50a90> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur id opar expr comma op plus term . LexToken(cpar,')',88,2199)
   yacc.py: 471:Action : Reduce rule [op -> op plus term] with [<ConstantNumNode @ 0x7ff028e50860>,'+',<ConstantNumNode @ 0x7ff028e50a90>] and goto state 74
   yacc.py: 506:Result : <PlusNode @ 0x7ff028e509e8> (<tools.ast.PlusNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur id opar expr comma op . LexToken(cpar,')',88,2199)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<PlusNode @ 0x7ff028e509e8>] and goto state 73
   yacc.py: 506:Result : <PlusNode @ 0x7ff028e509e8> (<tools.ast.PlusNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur id opar expr comma comp . LexToken(cpar,')',88,2199)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<PlusNode @ 0x7ff028e509e8>] and goto state 155
   yacc.py: 506:Result : <PlusNode @ 0x7ff028e509e8> (<tools.ast.PlusNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur id opar expr comma expr . LexToken(cpar,')',88,2199)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<PlusNode @ 0x7ff028e509e8>] and goto state 211
   yacc.py: 506:Result : <list @ 0x7ff028d0dfc8> ([<tools.ast.PlusNode object at 0x7ff028e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 211
   yacc.py: 430:Defaulted state 211: Reduce using 94
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur id opar expr comma arg_list . LexToken(cpar,')',88,2199)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr comma arg_list] with [<PlusNode @ 0x7ff028e50eb8>,',',<list @ 0x7ff028d0dfc8>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7ff028d11808> ([<tools.ast.PlusNode object at 0x7ff028e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur id opar arg_list . LexToken(cpar,')',88,2199)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7ff028d11808>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7ff028d11808> ([<tools.ast.PlusNode object at 0x7ff028e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur id opar args . LexToken(cpar,')',88,2199)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur id opar args cpar . LexToken(dot,'.',88,2200)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['testing2','(',<list @ 0x7ff028d11808>,')'] and goto state 78
   yacc.py: 506:Result : <tuple @ 0x7ff028ccca08> (('testing2', [<tools.ast.PlusNode object ...)
   yacc.py: 410:
   yacc.py: 411:State  : 78
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur func_call . LexToken(dot,'.',88,2200)
   yacc.py: 471:Action : Reduce rule [factor -> func_call] with [<tuple @ 0x7ff028ccca08>] and goto state 77
   yacc.py: 506:Result : <StaticCallNode @ 0x7ff028e50b38> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor . LexToken(dot,'.',88,2200)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot . LexToken(id,'testing2',88,2201)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id . LexToken(opar,'(',88,2209)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar . LexToken(num,2.0,88,2210)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar num . LexToken(plus,'+',88,2212)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [2.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50ef0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar atom . LexToken(plus,'+',88,2212)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028e50ef0>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50ef0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar factor . LexToken(plus,'+',88,2212)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028e50ef0>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50ef0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar base_call . LexToken(plus,'+',88,2212)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7ff028e50ef0>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50ef0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar term . LexToken(plus,'+',88,2212)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7ff028e50ef0>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50ef0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar op . LexToken(plus,'+',88,2212)
   yacc.py: 445:Action : Shift and goto state 117
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar op plus . LexToken(num,3.0,88,2214)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar op plus num . LexToken(comma,',',88,2215)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [3.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e508d0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar op plus atom . LexToken(comma,',',88,2215)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028e508d0>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e508d0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar op plus factor . LexToken(comma,',',88,2215)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028e508d0>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e508d0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar op plus base_call . LexToken(comma,',',88,2215)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7ff028e508d0>] and goto state 159
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e508d0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar op plus term . LexToken(comma,',',88,2215)
   yacc.py: 471:Action : Reduce rule [op -> op plus term] with [<ConstantNumNode @ 0x7ff028e50ef0>,'+',<ConstantNumNode @ 0x7ff028e508d0>] and goto state 74
   yacc.py: 506:Result : <PlusNode @ 0x7ff028e50fd0> (<tools.ast.PlusNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar op . LexToken(comma,',',88,2215)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<PlusNode @ 0x7ff028e50fd0>] and goto state 73
   yacc.py: 506:Result : <PlusNode @ 0x7ff028e50fd0> (<tools.ast.PlusNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar comp . LexToken(comma,',',88,2215)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<PlusNode @ 0x7ff028e50fd0>] and goto state 155
   yacc.py: 506:Result : <PlusNode @ 0x7ff028e50fd0> (<tools.ast.PlusNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar expr . LexToken(comma,',',88,2215)
   yacc.py: 445:Action : Shift and goto state 189
   yacc.py: 410:
   yacc.py: 411:State  : 189
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar expr comma . LexToken(num,3.0,88,2217)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar expr comma num . LexToken(plus,'+',88,2219)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [3.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50cc0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar expr comma atom . LexToken(plus,'+',88,2219)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028e50cc0>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50cc0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar expr comma factor . LexToken(plus,'+',88,2219)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028e50cc0>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50cc0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar expr comma base_call . LexToken(plus,'+',88,2219)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7ff028e50cc0>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50cc0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar expr comma term . LexToken(plus,'+',88,2219)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7ff028e50cc0>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50cc0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar expr comma op . LexToken(plus,'+',88,2219)
   yacc.py: 445:Action : Shift and goto state 117
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar expr comma op plus . LexToken(num,5.0,88,2221)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar expr comma op plus num . LexToken(cpar,')',88,2222)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [5.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50b70> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar expr comma op plus atom . LexToken(cpar,')',88,2222)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028e50b70>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50b70> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar expr comma op plus factor . LexToken(cpar,')',88,2222)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028e50b70>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50b70> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar expr comma op plus base_call . LexToken(cpar,')',88,2222)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7ff028e50b70>] and goto state 159
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50b70> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar expr comma op plus term . LexToken(cpar,')',88,2222)
   yacc.py: 471:Action : Reduce rule [op -> op plus term] with [<ConstantNumNode @ 0x7ff028e50cc0>,'+',<ConstantNumNode @ 0x7ff028e50b70>] and goto state 74
   yacc.py: 506:Result : <PlusNode @ 0x7ff028e507f0> (<tools.ast.PlusNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar expr comma op . LexToken(cpar,')',88,2222)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<PlusNode @ 0x7ff028e507f0>] and goto state 73
   yacc.py: 506:Result : <PlusNode @ 0x7ff028e507f0> (<tools.ast.PlusNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar expr comma comp . LexToken(cpar,')',88,2222)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<PlusNode @ 0x7ff028e507f0>] and goto state 155
   yacc.py: 506:Result : <PlusNode @ 0x7ff028e507f0> (<tools.ast.PlusNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar expr comma expr . LexToken(cpar,')',88,2222)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<PlusNode @ 0x7ff028e507f0>] and goto state 211
   yacc.py: 506:Result : <list @ 0x7ff028d11588> ([<tools.ast.PlusNode object at 0x7ff028e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 211
   yacc.py: 430:Defaulted state 211: Reduce using 94
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar expr comma arg_list . LexToken(cpar,')',88,2222)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr comma arg_list] with [<PlusNode @ 0x7ff028e50fd0>,',',<list @ 0x7ff028d11588>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7ff028d038c8> ([<tools.ast.PlusNode object at 0x7ff028e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar arg_list . LexToken(cpar,')',88,2222)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7ff028d038c8>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7ff028d038c8> ([<tools.ast.PlusNode object at 0x7ff028e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar args . LexToken(cpar,')',88,2222)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar args cpar . LexToken(dot,'.',88,2223)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['testing2','(',<list @ 0x7ff028d038c8>,')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7ff028ccca08> (('testing2', [<tools.ast.PlusNode object ...)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot func_call . LexToken(dot,'.',88,2223)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<StaticCallNode @ 0x7ff028e50b38>,'.',<tuple @ 0x7ff028ccca08>] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7ff028e504e0> (<tools.ast.CallNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor . LexToken(dot,'.',88,2223)
   yacc.py: 445:Action : Shift and goto state 122
   yacc.py: 410:
   yacc.py: 411:State  : 122
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot . LexToken(id,'testing2',88,2224)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id . LexToken(opar,'(',88,2232)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar . LexToken(num,5.0,88,2233)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar num . LexToken(plus,'+',88,2235)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [5.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50da0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar atom . LexToken(plus,'+',88,2235)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028e50da0>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50da0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar factor . LexToken(plus,'+',88,2235)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028e50da0>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50da0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar base_call . LexToken(plus,'+',88,2235)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7ff028e50da0>] and goto state 75
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50da0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar term . LexToken(plus,'+',88,2235)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantNumNode @ 0x7ff028e50da0>] and goto state 74
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50da0> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar op . LexToken(plus,'+',88,2235)
   yacc.py: 445:Action : Shift and goto state 117
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar op plus . LexToken(num,8.0,88,2237)
   yacc.py: 445:Action : Shift and goto state 88
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar op plus num . LexToken(comma,',',88,2238)
   yacc.py: 471:Action : Reduce rule [atom -> num] with [8.0] and goto state 79
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50c50> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar op plus atom . LexToken(comma,',',88,2238)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantNumNode @ 0x7ff028e50c50>] and goto state 77
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50c50> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar op plus factor . LexToken(comma,',',88,2238)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantNumNode @ 0x7ff028e50c50>] and goto state 76
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50c50> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar op plus base_call . LexToken(comma,',',88,2238)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantNumNode @ 0x7ff028e50c50>] and goto state 159
   yacc.py: 506:Result : <ConstantNumNode @ 0x7ff028e50c50> (<tools.ast.ConstantNumNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar op plus term . LexToken(comma,',',88,2238)
   yacc.py: 471:Action : Reduce rule [op -> op plus term] with [<ConstantNumNode @ 0x7ff028e50da0>,'+',<ConstantNumNode @ 0x7ff028e50c50>] and goto state 74
   yacc.py: 506:Result : <PlusNode @ 0x7ff028e50630> (<tools.ast.PlusNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar op . LexToken(comma,',',88,2238)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<PlusNode @ 0x7ff028e50630>] and goto state 73
   yacc.py: 506:Result : <PlusNode @ 0x7ff028e50630> (<tools.ast.PlusNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar comp . LexToken(comma,',',88,2238)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<PlusNode @ 0x7ff028e50630>] and goto state 155
   yacc.py: 506:Result : <PlusNode @ 0x7ff028e50630> (<tools.ast.PlusNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar expr . LexToken(comma,',',88,2238)
   yacc.py: 445:Action : Shift and goto state 189
   yacc.py: 410:
   yacc.py: 411:State  : 189
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar expr comma . LexToken(true,'true',88,2240)
   yacc.py: 445:Action : Shift and goto state 91
   yacc.py: 410:
   yacc.py: 411:State  : 91
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar expr comma true . LexToken(plus,'+',88,2245)
   yacc.py: 471:Action : Reduce rule [atom -> true] with ['true'] and goto state 79
   yacc.py: 506:Result : <ConstantBoolNode @ 0x7ff028d00fd0> (<tools.ast.ConstantBoolNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar expr comma atom . LexToken(plus,'+',88,2245)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantBoolNode @ 0x7ff028d00fd0>] and goto state 77
   yacc.py: 506:Result : <ConstantBoolNode @ 0x7ff028d00fd0> (<tools.ast.ConstantBoolNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar expr comma factor . LexToken(plus,'+',88,2245)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantBoolNode @ 0x7ff028d00fd0>] and goto state 76
   yacc.py: 506:Result : <ConstantBoolNode @ 0x7ff028d00fd0> (<tools.ast.ConstantBoolNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar expr comma base_call . LexToken(plus,'+',88,2245)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantBoolNode @ 0x7ff028d00fd0>] and goto state 75
   yacc.py: 506:Result : <ConstantBoolNode @ 0x7ff028d00fd0> (<tools.ast.ConstantBoolNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar expr comma term . LexToken(plus,'+',88,2245)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantBoolNode @ 0x7ff028d00fd0>] and goto state 74
   yacc.py: 506:Result : <ConstantBoolNode @ 0x7ff028d00fd0> (<tools.ast.ConstantBoolNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar expr comma op . LexToken(plus,'+',88,2245)
   yacc.py: 445:Action : Shift and goto state 117
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar expr comma op plus . LexToken(false,'fALSE',88,2247)
   yacc.py: 445:Action : Shift and goto state 92
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar expr comma op plus false . LexToken(cpar,')',88,2252)
   yacc.py: 471:Action : Reduce rule [atom -> false] with ['fALSE'] and goto state 79
   yacc.py: 506:Result : <ConstantBoolNode @ 0x7ff028e50c18> (<tools.ast.ConstantBoolNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar expr comma op plus atom . LexToken(cpar,')',88,2252)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantBoolNode @ 0x7ff028e50c18>] and goto state 77
   yacc.py: 506:Result : <ConstantBoolNode @ 0x7ff028e50c18> (<tools.ast.ConstantBoolNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar expr comma op plus factor . LexToken(cpar,')',88,2252)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantBoolNode @ 0x7ff028e50c18>] and goto state 76
   yacc.py: 506:Result : <ConstantBoolNode @ 0x7ff028e50c18> (<tools.ast.ConstantBoolNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar expr comma op plus base_call . LexToken(cpar,')',88,2252)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantBoolNode @ 0x7ff028e50c18>] and goto state 159
   yacc.py: 506:Result : <ConstantBoolNode @ 0x7ff028e50c18> (<tools.ast.ConstantBoolNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar expr comma op plus term . LexToken(cpar,')',88,2252)
   yacc.py: 471:Action : Reduce rule [op -> op plus term] with [<ConstantBoolNode @ 0x7ff028d00fd0>,'+',<ConstantBoolNode @ 0x7ff028e50c18>] and goto state 74
   yacc.py: 506:Result : <PlusNode @ 0x7ff028d00f28> (<tools.ast.PlusNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar expr comma op . LexToken(cpar,')',88,2252)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<PlusNode @ 0x7ff028d00f28>] and goto state 73
   yacc.py: 506:Result : <PlusNode @ 0x7ff028d00f28> (<tools.ast.PlusNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar expr comma comp . LexToken(cpar,')',88,2252)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<PlusNode @ 0x7ff028d00f28>] and goto state 155
   yacc.py: 506:Result : <PlusNode @ 0x7ff028d00f28> (<tools.ast.PlusNode object at 0x7ff028d0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar expr comma expr . LexToken(cpar,')',88,2252)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<PlusNode @ 0x7ff028d00f28>] and goto state 211
   yacc.py: 506:Result : <list @ 0x7ff028d0dfc8> ([<tools.ast.PlusNode object at 0x7ff028d ...)
   yacc.py: 410:
   yacc.py: 411:State  : 211
   yacc.py: 430:Defaulted state 211: Reduce using 94
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar expr comma arg_list . LexToken(cpar,')',88,2252)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr comma arg_list] with [<PlusNode @ 0x7ff028e50630>,',',<list @ 0x7ff028d0dfc8>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7ff028d09e48> ([<tools.ast.PlusNode object at 0x7ff028e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar arg_list . LexToken(cpar,')',88,2252)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7ff028d09e48>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7ff028d09e48> ([<tools.ast.PlusNode object at 0x7ff028e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar args . LexToken(cpar,')',88,2252)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot id opar args cpar . LexToken(ccur,'}',89,2258)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['testing2','(',<list @ 0x7ff028d09e48>,')'] and goto state 167
   yacc.py: 506:Result : <tuple @ 0x7ff028ccca08> (('testing2', [<tools.ast.PlusNode object ...)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor dot func_call . LexToken(ccur,'}',89,2258)
   yacc.py: 471:Action : Reduce rule [factor -> factor dot func_call] with [<CallNode @ 0x7ff028e504e0>,'.',<tuple @ 0x7ff028ccca08>] and goto state 77
   yacc.py: 506:Result : <CallNode @ 0x7ff028e50ba8> (<tools.ast.CallNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur factor . LexToken(ccur,'}',89,2258)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<CallNode @ 0x7ff028e50ba8>] and goto state 76
   yacc.py: 506:Result : <CallNode @ 0x7ff028e50ba8> (<tools.ast.CallNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur base_call . LexToken(ccur,'}',89,2258)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<CallNode @ 0x7ff028e50ba8>] and goto state 75
   yacc.py: 506:Result : <CallNode @ 0x7ff028e50ba8> (<tools.ast.CallNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur term . LexToken(ccur,'}',89,2258)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<CallNode @ 0x7ff028e50ba8>] and goto state 74
   yacc.py: 506:Result : <CallNode @ 0x7ff028e50ba8> (<tools.ast.CallNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur op . LexToken(ccur,'}',89,2258)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<CallNode @ 0x7ff028e50ba8>] and goto state 73
   yacc.py: 506:Result : <CallNode @ 0x7ff028e50ba8> (<tools.ast.CallNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur comp . LexToken(ccur,'}',89,2258)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<CallNode @ 0x7ff028e50ba8>] and goto state 206
   yacc.py: 506:Result : <CallNode @ 0x7ff028e50ba8> (<tools.ast.CallNode object at 0x7ff028e5 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 206
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur expr . LexToken(ccur,'}',89,2258)
   yacc.py: 445:Action : Shift and goto state 222
   yacc.py: 410:
   yacc.py: 411:State  : 222
   yacc.py: 430:Defaulted state 222: Reduce using 25
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi id opar formals cpar colon type ocur expr ccur . None
   yacc.py: 471:Action : Reduce rule [def_func -> id opar formals cpar colon type ocur expr ccur] with ['testing3','(',[],')',':','Test2','{',<CallNode @ 0x7ff028e50ba8>,'}'] and goto state 18
   yacc.py: 506:Result : <FuncDeclarationNode @ 0x7ff028e50dd8> (<tools.ast.FuncDeclarationNode object at ...)
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi def_func . LexToken(semi,';',89,2259)
   yacc.py: 445:Action : Shift and goto state 30
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi def_func semi . LexToken(id,'testing4',91,2266)
   yacc.py: 445:Action : Shift and goto state 19
   yacc.py: 410:
   yacc.py: 411:State  : 19
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi def_func semi id . LexToken(opar,'(',91,2274)
   yacc.py: 445:Action : Shift and goto state 32
   yacc.py: 410:
   yacc.py: 411:State  : 32
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi def_func semi id opar . LexToken(cpar,')',91,2275)
   yacc.py: 474:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x55810cd760f0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 430:Defaulted state 45: Reduce using 34
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi def_func semi id opar epsilon . LexToken(cpar,')',91,2275)
   yacc.py: 471:Action : Reduce rule [param_list_empty -> epsilon] with [None] and goto state 43
   yacc.py: 506:Result : <list @ 0x7ff028d0dfc8> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 43
   yacc.py: 430:Defaulted state 43: Reduce using 31
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi def_func semi id opar param_list_empty . LexToken(cpar,')',91,2275)
   yacc.py: 471:Action : Reduce rule [formals -> param_list_empty] with [[]] and goto state 51
   yacc.py: 506:Result : <list @ 0x7ff028d0dfc8> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi def_func semi id opar formals . LexToken(cpar,')',91,2275)
   yacc.py: 445:Action : Shift and goto state 64
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi def_func semi id opar formals cpar . LexToken(colon,':',91,2276)
   yacc.py: 445:Action : Shift and goto state 100
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon . LexToken(type,'Object',91,2278)
   yacc.py: 445:Action : Shift and goto state 138
   yacc.py: 410:
   yacc.py: 411:State  : 138
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type . LexToken(ocur,'{',91,2285)
   yacc.py: 445:Action : Shift and goto state 181
   yacc.py: 410:
   yacc.py: 411:State  : 181
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur . LexToken(id,'test1',92,2295)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur id . LexToken(arroba,'@',92,2300)
   yacc.py: 471:Action : Reduce rule [atom -> id] with ['test1'] and goto state 79
   yacc.py: 506:Result : <VariableNode @ 0x7ff028dfe5f8> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur atom . LexToken(arroba,'@',92,2300)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<VariableNode @ 0x7ff028dfe5f8>] and goto state 77
   yacc.py: 506:Result : <VariableNode @ 0x7ff028dfe5f8> (<tools.ast.VariableNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur factor . LexToken(arroba,'@',92,2300)
   yacc.py: 445:Action : Shift and goto state 121
   yacc.py: 410:
   yacc.py: 411:State  : 121
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur factor arroba . LexToken(type,'Object',92,2301)
   yacc.py: 445:Action : Shift and goto state 165
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur factor arroba type . LexToken(dot,'.',92,2307)
   yacc.py: 445:Action : Shift and goto state 193
   yacc.py: 410:
   yacc.py: 411:State  : 193
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur factor arroba type dot . LexToken(id,'copy',92,2308)
   yacc.py: 445:Action : Shift and goto state 168
   yacc.py: 410:
   yacc.py: 411:State  : 168
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur factor arroba type dot id . LexToken(opar,'(',92,2312)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur factor arroba type dot id opar . LexToken(cpar,')',92,2313)
   yacc.py: 474:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 150
   yacc.py: 548:Result : <NoneType @ 0x55810cd760f0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 150
   yacc.py: 430:Defaulted state 150: Reduce using 96
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur factor arroba type dot id opar epsilon . LexToken(cpar,')',92,2313)
   yacc.py: 471:Action : Reduce rule [arg_list_empty -> epsilon] with [None] and goto state 149
   yacc.py: 506:Result : <list @ 0x7ff028de6ec8> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 149
   yacc.py: 430:Defaulted state 149: Reduce using 92
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur factor arroba type dot id opar arg_list_empty . LexToken(cpar,')',92,2313)
   yacc.py: 471:Action : Reduce rule [args -> arg_list_empty] with [[]] and goto state 153
   yacc.py: 506:Result : <list @ 0x7ff028de6ec8> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur factor arroba type dot id opar args . LexToken(cpar,')',92,2313)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur factor arroba type dot id opar args cpar . LexToken(ccur,'}',93,2319)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['copy','(',[],')'] and goto state 212
   yacc.py: 506:Result : <tuple @ 0x7ff028ccca08> (('copy', []))
   yacc.py: 410:
   yacc.py: 411:State  : 212
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur factor arroba type dot func_call . LexToken(ccur,'}',93,2319)
   yacc.py: 471:Action : Reduce rule [base_call -> factor arroba type dot func_call] with [<VariableNode @ 0x7ff028dfe5f8>,'@','Object','.',('copy', [])] and goto state 76
   yacc.py: 506:Result : <BaseCallNode @ 0x7ff028d00cf8> (<tools.ast.BaseCallNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur base_call . LexToken(ccur,'}',93,2319)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<BaseCallNode @ 0x7ff028d00cf8>] and goto state 75
   yacc.py: 506:Result : <BaseCallNode @ 0x7ff028d00cf8> (<tools.ast.BaseCallNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur term . LexToken(ccur,'}',93,2319)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<BaseCallNode @ 0x7ff028d00cf8>] and goto state 74
   yacc.py: 506:Result : <BaseCallNode @ 0x7ff028d00cf8> (<tools.ast.BaseCallNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur op . LexToken(ccur,'}',93,2319)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<BaseCallNode @ 0x7ff028d00cf8>] and goto state 73
   yacc.py: 506:Result : <BaseCallNode @ 0x7ff028d00cf8> (<tools.ast.BaseCallNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur comp . LexToken(ccur,'}',93,2319)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<BaseCallNode @ 0x7ff028d00cf8>] and goto state 206
   yacc.py: 506:Result : <BaseCallNode @ 0x7ff028d00cf8> (<tools.ast.BaseCallNode object at 0x7ff0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 206
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur expr . LexToken(ccur,'}',93,2319)
   yacc.py: 445:Action : Shift and goto state 222
   yacc.py: 410:
   yacc.py: 411:State  : 222
   yacc.py: 430:Defaulted state 222: Reduce using 25
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi def_func semi id opar formals cpar colon type ocur expr ccur . None
   yacc.py: 471:Action : Reduce rule [def_func -> id opar formals cpar colon type ocur expr ccur] with ['testing4','(',[],')',':','Object','{',<BaseCallNode @ 0x7ff028d00cf8>,'}'] and goto state 18
   yacc.py: 506:Result : <FuncDeclarationNode @ 0x7ff028e50d30> (<tools.ast.FuncDeclarationNode object at ...)
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi def_func semi def_func . LexToken(semi,';',93,2320)
   yacc.py: 445:Action : Shift and goto state 30
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi def_func semi def_func semi . LexToken(ccur,'}',94,2322)
   yacc.py: 474:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 16
   yacc.py: 548:Result : <NoneType @ 0x55810cd760f0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 16
   yacc.py: 430:Defaulted state 16: Reduce using 14
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi def_func semi def_func semi epsilon . LexToken(ccur,'}',94,2322)
   yacc.py: 471:Action : Reduce rule [feature_list -> epsilon] with [None] and goto state 48
   yacc.py: 506:Result : <list @ 0x7ff028d08c88> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 430:Defaulted state 48: Reduce using 16
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi def_func semi def_func semi feature_list . LexToken(ccur,'}',94,2322)
   yacc.py: 471:Action : Reduce rule [feature_list -> def_func semi feature_list] with [<FuncDeclarationNode @ 0x7ff028e50d30>,';',[]] and goto state 48
   yacc.py: 506:Result : <list @ 0x7ff028e00c48> ([<tools.ast.FuncDeclarationNode object a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 430:Defaulted state 48: Reduce using 16
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi def_func semi feature_list . LexToken(ccur,'}',94,2322)
   yacc.py: 471:Action : Reduce rule [feature_list -> def_func semi feature_list] with [<FuncDeclarationNode @ 0x7ff028e50dd8>,';',<list @ 0x7ff028e00c48>] and goto state 48
   yacc.py: 506:Result : <list @ 0x7ff028d08c88> ([<tools.ast.FuncDeclarationNode object a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 430:Defaulted state 48: Reduce using 16
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi def_func semi feature_list . LexToken(ccur,'}',94,2322)
   yacc.py: 471:Action : Reduce rule [feature_list -> def_func semi feature_list] with [<FuncDeclarationNode @ 0x7ff028e502b0>,';',<list @ 0x7ff028d08c88>] and goto state 48
   yacc.py: 506:Result : <list @ 0x7ff028e00c48> ([<tools.ast.FuncDeclarationNode object a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 430:Defaulted state 48: Reduce using 16
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi def_func semi feature_list . LexToken(ccur,'}',94,2322)
   yacc.py: 471:Action : Reduce rule [feature_list -> def_func semi feature_list] with [<FuncDeclarationNode @ 0x7ff028e50828>,';',<list @ 0x7ff028e00c48>] and goto state 47
   yacc.py: 506:Result : <list @ 0x7ff028d08c88> ([<tools.ast.FuncDeclarationNode object a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 47
   yacc.py: 430:Defaulted state 47: Reduce using 15
   yacc.py: 435:Stack  : def_class def_class class type ocur def_attr semi feature_list . LexToken(ccur,'}',94,2322)
   yacc.py: 471:Action : Reduce rule [feature_list -> def_attr semi feature_list] with [<AttrDeclarationNode @ 0x7ff028dfe780>,';',<list @ 0x7ff028d08c88>] and goto state 14
   yacc.py: 506:Result : <list @ 0x7ff028e00c48> ([<tools.ast.AttrDeclarationNode object a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 14
   yacc.py: 435:Stack  : def_class def_class class type ocur feature_list . LexToken(ccur,'}',94,2322)
   yacc.py: 445:Action : Shift and goto state 25
   yacc.py: 410:
   yacc.py: 411:State  : 25
   yacc.py: 435:Stack  : def_class def_class class type ocur feature_list ccur . LexToken(semi,';',94,2323)
   yacc.py: 445:Action : Shift and goto state 38
   yacc.py: 410:
   yacc.py: 411:State  : 38
   yacc.py: 435:Stack  : def_class def_class class type ocur feature_list ccur semi . LexToken(class,'class',96,2326)
   yacc.py: 471:Action : Reduce rule [def_class -> class type ocur feature_list ccur semi] with ['class','Test2','{',<list @ 0x7ff028e00c48>,'}',';'] and goto state 3
   yacc.py: 506:Result : <ClassDeclarationNode @ 0x7ff028dfe588> (<tools.ast.ClassDeclarationNode object a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 3
   yacc.py: 435:Stack  : def_class def_class def_class . LexToken(class,'class',96,2326)
   yacc.py: 445:Action : Shift and goto state 5
   yacc.py: 410:
   yacc.py: 411:State  : 5
   yacc.py: 435:Stack  : def_class def_class def_class class . LexToken(type,'Alpha',96,2332)
   yacc.py: 445:Action : Shift and goto state 8
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 435:Stack  : def_class def_class def_class class type . LexToken(inherits,'inherits',96,2338)
   yacc.py: 445:Action : Shift and goto state 11
   yacc.py: 410:
   yacc.py: 411:State  : 11
   yacc.py: 435:Stack  : def_class def_class def_class class type inherits . LexToken(type,'IO',96,2347)
   yacc.py: 445:Action : Shift and goto state 20
   yacc.py: 410:
   yacc.py: 411:State  : 20
   yacc.py: 435:Stack  : def_class def_class def_class class type inherits type . LexToken(ocur,'{',96,2350)
   yacc.py: 445:Action : Shift and goto state 33
   yacc.py: 410:
   yacc.py: 411:State  : 33
   yacc.py: 435:Stack  : def_class def_class def_class class type inherits type ocur . LexToken(id,'print',97,2356)
   yacc.py: 445:Action : Shift and goto state 19
   yacc.py: 410:
   yacc.py: 411:State  : 19
   yacc.py: 435:Stack  : def_class def_class def_class class type inherits type ocur id . LexToken(opar,'(',97,2361)
   yacc.py: 445:Action : Shift and goto state 32
   yacc.py: 410:
   yacc.py: 411:State  : 32
   yacc.py: 435:Stack  : def_class def_class def_class class type inherits type ocur id opar . LexToken(cpar,')',97,2362)
   yacc.py: 474:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 45
   yacc.py: 548:Result : <NoneType @ 0x55810cd760f0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 45
   yacc.py: 430:Defaulted state 45: Reduce using 34
   yacc.py: 435:Stack  : def_class def_class def_class class type inherits type ocur id opar epsilon . LexToken(cpar,')',97,2362)
   yacc.py: 471:Action : Reduce rule [param_list_empty -> epsilon] with [None] and goto state 43
   yacc.py: 506:Result : <list @ 0x7ff028e00d08> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 43
   yacc.py: 430:Defaulted state 43: Reduce using 31
   yacc.py: 435:Stack  : def_class def_class def_class class type inherits type ocur id opar param_list_empty . LexToken(cpar,')',97,2362)
   yacc.py: 471:Action : Reduce rule [formals -> param_list_empty] with [[]] and goto state 51
   yacc.py: 506:Result : <list @ 0x7ff028e00d08> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : def_class def_class def_class class type inherits type ocur id opar formals . LexToken(cpar,')',97,2362)
   yacc.py: 445:Action : Shift and goto state 64
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 435:Stack  : def_class def_class def_class class type inherits type ocur id opar formals cpar . LexToken(colon,':',97,2364)
   yacc.py: 445:Action : Shift and goto state 100
   yacc.py: 410:
   yacc.py: 411:State  : 100
   yacc.py: 435:Stack  : def_class def_class def_class class type inherits type ocur id opar formals cpar colon . LexToken(type,'Object',97,2366)
   yacc.py: 445:Action : Shift and goto state 138
   yacc.py: 410:
   yacc.py: 411:State  : 138
   yacc.py: 435:Stack  : def_class def_class def_class class type inherits type ocur id opar formals cpar colon type . LexToken(ocur,'{',97,2373)
   yacc.py: 445:Action : Shift and goto state 181
   yacc.py: 410:
   yacc.py: 411:State  : 181
   yacc.py: 435:Stack  : def_class def_class def_class class type inherits type ocur id opar formals cpar colon type ocur . LexToken(id,'out_string',98,2383)
   yacc.py: 445:Action : Shift and goto state 72
   yacc.py: 410:
   yacc.py: 411:State  : 72
   yacc.py: 435:Stack  : def_class def_class def_class class type inherits type ocur id opar formals cpar colon type ocur id . LexToken(opar,'(',98,2393)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : def_class def_class def_class class type inherits type ocur id opar formals cpar colon type ocur id opar . LexToken(string,'reached!!\n',98,2406)
   yacc.py: 445:Action : Shift and goto state 93
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : def_class def_class def_class class type inherits type ocur id opar formals cpar colon type ocur id opar string . LexToken(cpar,')',98,2407)
   yacc.py: 471:Action : Reduce rule [atom -> string] with ['reached!!\n'] and goto state 79
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028e50e10> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : def_class def_class def_class class type inherits type ocur id opar formals cpar colon type ocur id opar atom . LexToken(cpar,')',98,2407)
   yacc.py: 471:Action : Reduce rule [factor -> atom] with [<ConstantStrNode @ 0x7ff028e50e10>] and goto state 77
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028e50e10> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class def_class def_class class type inherits type ocur id opar formals cpar colon type ocur id opar factor . LexToken(cpar,')',98,2407)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<ConstantStrNode @ 0x7ff028e50e10>] and goto state 76
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028e50e10> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class def_class def_class class type inherits type ocur id opar formals cpar colon type ocur id opar base_call . LexToken(cpar,')',98,2407)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<ConstantStrNode @ 0x7ff028e50e10>] and goto state 75
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028e50e10> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class def_class def_class class type inherits type ocur id opar formals cpar colon type ocur id opar term . LexToken(cpar,')',98,2407)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<ConstantStrNode @ 0x7ff028e50e10>] and goto state 74
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028e50e10> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class def_class def_class class type inherits type ocur id opar formals cpar colon type ocur id opar op . LexToken(cpar,')',98,2407)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<ConstantStrNode @ 0x7ff028e50e10>] and goto state 73
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028e50e10> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class def_class def_class class type inherits type ocur id opar formals cpar colon type ocur id opar comp . LexToken(cpar,')',98,2407)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<ConstantStrNode @ 0x7ff028e50e10>] and goto state 155
   yacc.py: 506:Result : <ConstantStrNode @ 0x7ff028e50e10> (<tools.ast.ConstantStrNode object at 0x7 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : def_class def_class def_class class type inherits type ocur id opar formals cpar colon type ocur id opar expr . LexToken(cpar,')',98,2407)
   yacc.py: 471:Action : Reduce rule [arg_list -> expr] with [<ConstantStrNode @ 0x7ff028e50e10>] and goto state 148
   yacc.py: 506:Result : <list @ 0x7ff028d09e88> ([<tools.ast.ConstantStrNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 148
   yacc.py: 430:Defaulted state 148: Reduce using 91
   yacc.py: 435:Stack  : def_class def_class def_class class type inherits type ocur id opar formals cpar colon type ocur id opar arg_list . LexToken(cpar,')',98,2407)
   yacc.py: 471:Action : Reduce rule [args -> arg_list] with [<list @ 0x7ff028d09e88>] and goto state 153
   yacc.py: 506:Result : <list @ 0x7ff028d09e88> ([<tools.ast.ConstantStrNode object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 153
   yacc.py: 435:Stack  : def_class def_class def_class class type inherits type ocur id opar formals cpar colon type ocur id opar args . LexToken(cpar,')',98,2407)
   yacc.py: 445:Action : Shift and goto state 191
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : def_class def_class def_class class type inherits type ocur id opar formals cpar colon type ocur id opar args cpar . LexToken(ccur,'}',99,2413)
   yacc.py: 471:Action : Reduce rule [func_call -> id opar args cpar] with ['out_string','(',<list @ 0x7ff028d09e88>,')'] and goto state 78
   yacc.py: 506:Result : <tuple @ 0x7ff028ccca08> (('out_string', [<tools.ast.ConstantStrNo ...)
   yacc.py: 410:
   yacc.py: 411:State  : 78
   yacc.py: 435:Stack  : def_class def_class def_class class type inherits type ocur id opar formals cpar colon type ocur func_call . LexToken(ccur,'}',99,2413)
   yacc.py: 471:Action : Reduce rule [factor -> func_call] with [<tuple @ 0x7ff028ccca08>] and goto state 77
   yacc.py: 506:Result : <StaticCallNode @ 0x7ff028d00b38> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 77
   yacc.py: 435:Stack  : def_class def_class def_class class type inherits type ocur id opar formals cpar colon type ocur factor . LexToken(ccur,'}',99,2413)
   yacc.py: 471:Action : Reduce rule [base_call -> factor] with [<StaticCallNode @ 0x7ff028d00b38>] and goto state 76
   yacc.py: 506:Result : <StaticCallNode @ 0x7ff028d00b38> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 76
   yacc.py: 435:Stack  : def_class def_class def_class class type inherits type ocur id opar formals cpar colon type ocur base_call . LexToken(ccur,'}',99,2413)
   yacc.py: 471:Action : Reduce rule [term -> base_call] with [<StaticCallNode @ 0x7ff028d00b38>] and goto state 75
   yacc.py: 506:Result : <StaticCallNode @ 0x7ff028d00b38> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 435:Stack  : def_class def_class def_class class type inherits type ocur id opar formals cpar colon type ocur term . LexToken(ccur,'}',99,2413)
   yacc.py: 471:Action : Reduce rule [op -> term] with [<StaticCallNode @ 0x7ff028d00b38>] and goto state 74
   yacc.py: 506:Result : <StaticCallNode @ 0x7ff028d00b38> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 74
   yacc.py: 435:Stack  : def_class def_class def_class class type inherits type ocur id opar formals cpar colon type ocur op . LexToken(ccur,'}',99,2413)
   yacc.py: 471:Action : Reduce rule [comp -> op] with [<StaticCallNode @ 0x7ff028d00b38>] and goto state 73
   yacc.py: 506:Result : <StaticCallNode @ 0x7ff028d00b38> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 73
   yacc.py: 435:Stack  : def_class def_class def_class class type inherits type ocur id opar formals cpar colon type ocur comp . LexToken(ccur,'}',99,2413)
   yacc.py: 471:Action : Reduce rule [expr -> comp] with [<StaticCallNode @ 0x7ff028d00b38>] and goto state 206
   yacc.py: 506:Result : <StaticCallNode @ 0x7ff028d00b38> (<tools.ast.StaticCallNode object at 0x7f ...)
   yacc.py: 410:
   yacc.py: 411:State  : 206
   yacc.py: 435:Stack  : def_class def_class def_class class type inherits type ocur id opar formals cpar colon type ocur expr . LexToken(ccur,'}',99,2413)
   yacc.py: 445:Action : Shift and goto state 222
   yacc.py: 410:
   yacc.py: 411:State  : 222
   yacc.py: 430:Defaulted state 222: Reduce using 25
   yacc.py: 435:Stack  : def_class def_class def_class class type inherits type ocur id opar formals cpar colon type ocur expr ccur . None
   yacc.py: 471:Action : Reduce rule [def_func -> id opar formals cpar colon type ocur expr ccur] with ['print','(',[],')',':','Object','{',<StaticCallNode @ 0x7ff028d00b38>,'}'] and goto state 18
   yacc.py: 506:Result : <FuncDeclarationNode @ 0x7ff028d00c50> (<tools.ast.FuncDeclarationNode object at ...)
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 435:Stack  : def_class def_class def_class class type inherits type ocur def_func . LexToken(semi,';',99,2414)
   yacc.py: 445:Action : Shift and goto state 30
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 435:Stack  : def_class def_class def_class class type inherits type ocur def_func semi . LexToken(ccur,'}',100,2416)
   yacc.py: 474:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 16
   yacc.py: 548:Result : <NoneType @ 0x55810cd760f0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 16
   yacc.py: 430:Defaulted state 16: Reduce using 14
   yacc.py: 435:Stack  : def_class def_class def_class class type inherits type ocur def_func semi epsilon . LexToken(ccur,'}',100,2416)
   yacc.py: 471:Action : Reduce rule [feature_list -> epsilon] with [None] and goto state 48
   yacc.py: 506:Result : <list @ 0x7ff028d09108> ([])
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 430:Defaulted state 48: Reduce using 16
   yacc.py: 435:Stack  : def_class def_class def_class class type inherits type ocur def_func semi feature_list . LexToken(ccur,'}',100,2416)
   yacc.py: 471:Action : Reduce rule [feature_list -> def_func semi feature_list] with [<FuncDeclarationNode @ 0x7ff028d00c50>,';',[]] and goto state 53
   yacc.py: 506:Result : <list @ 0x7ff028d09e08> ([<tools.ast.FuncDeclarationNode object a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 435:Stack  : def_class def_class def_class class type inherits type ocur feature_list . LexToken(ccur,'}',100,2416)
   yacc.py: 445:Action : Shift and goto state 66
   yacc.py: 410:
   yacc.py: 411:State  : 66
   yacc.py: 435:Stack  : def_class def_class def_class class type inherits type ocur feature_list ccur . LexToken(semi,';',100,2417)
   yacc.py: 445:Action : Shift and goto state 102
   yacc.py: 410:
   yacc.py: 411:State  : 102
   yacc.py: 435:Stack  : def_class def_class def_class class type inherits type ocur feature_list ccur semi . $end
   yacc.py: 471:Action : Reduce rule [def_class -> class type inherits type ocur feature_list ccur semi] with ['class','Alpha','inherits','IO','{',<list @ 0x7ff028d09e08>,'}',';'] and goto state 3
   yacc.py: 506:Result : <ClassDeclarationNode @ 0x7ff028e50940> (<tools.ast.ClassDeclarationNode object a ...)
   yacc.py: 410:
   yacc.py: 411:State  : 3
   yacc.py: 435:Stack  : def_class def_class def_class def_class . $end
   yacc.py: 471:Action : Reduce rule [class_list -> def_class] with [<ClassDeclarationNode @ 0x7ff028e50940>] and goto state 6
   yacc.py: 506:Result : <list @ 0x7ff028d08c88> ([<tools.ast.ClassDeclarationNode object  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 6
   yacc.py: 430:Defaulted state 6: Reduce using 3
   yacc.py: 435:Stack  : def_class def_class def_class class_list . $end
   yacc.py: 471:Action : Reduce rule [class_list -> def_class class_list] with [<ClassDeclarationNode @ 0x7ff028dfe588>,<list @ 0x7ff028d08c88>] and goto state 6
   yacc.py: 506:Result : <list @ 0x7ff028d098c8> ([<tools.ast.ClassDeclarationNode object  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 6
   yacc.py: 430:Defaulted state 6: Reduce using 3
   yacc.py: 435:Stack  : def_class def_class class_list . $end
   yacc.py: 471:Action : Reduce rule [class_list -> def_class class_list] with [<ErrorNode @ 0x7ff028dfe6a0>,<list @ 0x7ff028d098c8>] and goto state 6
   yacc.py: 506:Result : <list @ 0x7ff028d08c88> ([<tools.ast.ErrorNode object at 0x7ff028 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 6
   yacc.py: 430:Defaulted state 6: Reduce using 3
   yacc.py: 435:Stack  : def_class class_list . $end
   yacc.py: 471:Action : Reduce rule [class_list -> def_class class_list] with [<ClassDeclarationNode @ 0x7ff028dfe080>,<list @ 0x7ff028d08c88>] and goto state 2
   yacc.py: 506:Result : <list @ 0x7ff028d098c8> ([<tools.ast.ClassDeclarationNode object  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 2
   yacc.py: 430:Defaulted state 2: Reduce using 1
   yacc.py: 435:Stack  : class_list . $end
   yacc.py: 471:Action : Reduce rule [program -> class_list] with [<list @ 0x7ff028d098c8>] and goto state 1
   yacc.py: 506:Result : <list @ 0x7ff028d098c8> ([<tools.ast.ClassDeclarationNode object  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 1
   yacc.py: 435:Stack  : program . $end
   yacc.py: 571:Done   : Returning <list @ 0x7ff028d098c8> ([<tools.ast.ClassDeclarationNode object  ...)
   yacc.py: 572:PLY: PARSE DEBUG END
